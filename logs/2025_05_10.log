2025-05-10 08:06:29.738 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 08:06:29.738 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 09:36:16.803 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 09:36:16.804 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 09:36:53.456 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 09:36:53.457 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 09:37:30.542 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 09:37:30.543 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 09:37:30.571 [INFO] [INFO] Setting up test environment...
2025-05-10 09:37:30.571 [INFO] [INFO] Removing .\.pytest_cache
2025-05-10 09:37:30.619 [INFO] [INFO] Test files in this session: {'c:\\Users\\Phil\\Desktop\\Projects\\shared-libs\\python\\databases\\tests\\test_dal.py'}
2025-05-10 09:37:30.619 [INFO] [INFO] Found Docker Compose file for c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\test_dal.py: c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml
2025-05-10 09:37:30.627 [INFO] [INFO] Detected the following services in c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml:
2025-05-10 09:37:30.627 [INFO] [INFO]   - mysql: localhost:3307 (container port: 3306)
2025-05-10 09:37:30.627 [INFO] [INFO]   - postgres: localhost:5433 (container port: 5432)
2025-05-10 09:37:30.627 [INFO] [INFO] Running command: docker-compose -f c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml -p test-databases up -d
2025-05-10 09:37:34.381 [INFO] [INFO] Command error:  mysql Pulling 
 postgres Pulling 
 mysql Pulled 
 postgres Pulled 
 Network test-databases_default  Creating
 Network test-databases_default  Created
 Volume "test-databases_mysql_data"  Creating
 Volume "test-databases_mysql_data"  Created
 Container test-databases-postgres-1  Creating
 Container test-databases-mysql-1  Creating
 Container test-databases-mysql-1  Created
 Container test-databases-postgres-1  Created
 Container test-databases-postgres-1  Starting
 Container test-databases-mysql-1  Starting
 Container test-databases-mysql-1  Started
 Container test-databases-postgres-1  Started

2025-05-10 09:38:04.900 [INFO] [INFO] Thread 2304: Requesting sync connection for testdb_postgres
2025-05-10 09:38:04.935 [INFO] [INFO] Thread 2304: Sync connection created and cached for testdb_postgres in 0.03s
2025-05-10 09:38:05.158 [INFO] [INFO] testdb_postgres - 039aa5ab782c53fb1f9eb3596f4c49fe async pool initialized in 0.21s
2025-05-10 09:38:05.159 [INFO] [INFO] Pool status:
{"initialized": true, "alias": "testdb_postgres", "hash": "039aa5ab782c53fb1f9eb3596f4c49fe", "min_size": 3, "max_size": 20, "current_size": 20, "in_use": 1, "idle": 19, "active_connections": 0, "shutting_down": false, "metrics": {"total_acquired": 1, "total_released": 0, "current_active": 1, "peak_active": 1, "errors": 0, "timeouts": 0, "last_timeout": null, "avg_acquisition_time": 0.0}}
2025-05-10 09:38:05.159 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 09:38:05.159 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 09:38:05.195 [INFO] [INFO] convert_query_to_native - Postgres override .. Good!
2025-05-10 09:38:05.195 [INFO] [INFO] ####### async - newsql
2025-05-10 09:38:05.195 [INFO] [INFO] ####### async - newsql: SELECT table_name FROM information_schema.tables WHERE table_name = $1
2025-05-10 09:38:05.205 [INFO] [INFO] convert_query_to_native - Postgres override .. Good!
2025-05-10 09:38:05.205 [INFO] [INFO] ####### async - newsql
2025-05-10 09:38:05.205 [INFO] [INFO] ####### async - newsql: 
            CREATE TABLE IF NOT EXISTS test_users_6631d75b (
                name TEXT, age TEXT, id TEXT PRIMARY KEY, created_at TEXT, updated_at TEXT, created_by TEXT, updated_by TEXT, deleted_at TEXT
            )
        
2025-05-10 09:38:05.225 [INFO] [INFO] convert_query_to_native - Postgres override .. Good!
2025-05-10 09:38:05.226 [INFO] [INFO] ####### async - newsql
2025-05-10 09:38:05.226 [INFO] [INFO] ####### async - newsql: 
            CREATE TABLE IF NOT EXISTS test_users_6631d75b_meta (
                name TEXT PRIMARY KEY,
                type TEXT
            )
        
2025-05-10 09:38:05.239 [INFO] [INFO] convert_query_to_native - Postgres override .. Good!
2025-05-10 09:38:05.239 [INFO] [INFO] ####### async - newsql
2025-05-10 09:38:05.239 [INFO] [INFO] ####### async - newsql: 
            CREATE TABLE IF NOT EXISTS test_users_6631d75b_history (
                name TEXT, age TEXT, id TEXT, created_at TEXT, updated_at TEXT, created_by TEXT, updated_by TEXT, deleted_at TEXT, version INTEGER, history_timestamp TEXT, history_user_id TEXT, history_comment TEXT,
                PRIMARY KEY (id, version)
            )
        
2025-05-10 09:38:05.254 [INFO] [INFO] convert_query_to_native - Postgres override .. Good!
2025-05-10 09:38:05.254 [INFO] [INFO] ####### async - newsql
2025-05-10 09:38:05.254 [INFO] [INFO] ####### async - newsql: SELECT name, type FROM test_users_6631d75b_meta
2025-05-10 09:38:05.256 [INFO] [INFO] convert_query_to_native - Postgres override .. Good!
2025-05-10 09:38:05.256 [INFO] [INFO] ####### async - newsql
2025-05-10 09:38:05.257 [INFO] [INFO] ####### async - newsql: INSERT INTO test_users_6631d75b_meta VALUES ($1, $2) ON CONFLICT(name) DO UPDATE SET type=EXCLUDED.type
2025-05-10 09:38:05.266 [INFO] [INFO] convert_query_to_native - Postgres override .. Good!
2025-05-10 09:38:05.266 [INFO] [INFO] ####### async - newsql
2025-05-10 09:38:05.266 [INFO] [INFO] ####### async - newsql: INSERT INTO test_users_6631d75b (name, age, id, created_at, updated_at) VALUES ($1, $2, $3, $4, $5) ON CONFLICT(id) DO UPDATE SET name=EXCLUDED.name, age=EXCLUDED.age, created_at=EXCLUDED.created_at, updated_at=EXCLUDED.updated_at
2025-05-10 09:38:05.271 [INFO] [INFO] convert_query_to_native - Postgres override .. Good!
2025-05-10 09:38:05.271 [INFO] [INFO] ####### async - newsql
2025-05-10 09:38:05.271 [INFO] [INFO] ####### async - newsql: SELECT MAX(version) FROM test_users_6631d75b_history WHERE id = $1
2025-05-10 09:38:05.274 [INFO] [INFO] convert_query_to_native - Postgres override .. Good!
2025-05-10 09:38:05.274 [INFO] [INFO] ####### async - newsql
2025-05-10 09:38:05.274 [INFO] [INFO] ####### async - newsql: INSERT INTO test_users_6631d75b_history (name, age, id, created_at, updated_at, version, history_timestamp, history_user_id, history_comment) VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9)
2025-05-10 09:38:05.282 [INFO] [INFO] convert_query_to_native - Postgres override .. Good!
2025-05-10 09:38:05.282 [INFO] [INFO] ####### async - newsql
2025-05-10 09:38:05.283 [INFO] [INFO] ####### async - newsql: SELECT column_name, data_type FROM information_schema.columns WHERE table_name = $1
2025-05-10 09:38:05.301 [INFO] [INFO] convert_query_to_native - Postgres override .. Good!
2025-05-10 09:38:05.301 [INFO] [INFO] ####### async - newsql
2025-05-10 09:38:05.301 [INFO] [INFO] ####### async - newsql: INSERT INTO test_users_6631d75b (id, name, age, created_at, updated_at) VALUES ($1, $2, $3, $4, $5) ON CONFLICT(id) DO UPDATE SET name=EXCLUDED.name, age=EXCLUDED.age, created_at=EXCLUDED.created_at, updated_at=EXCLUDED.updated_at
2025-05-10 09:38:05.304 [INFO] [INFO] convert_query_to_native - Postgres override .. Good!
2025-05-10 09:38:05.304 [INFO] [INFO] ####### async - newsql
2025-05-10 09:38:05.305 [INFO] [INFO] ####### async - newsql: INSERT INTO test_users_6631d75b_history (id, name, age, created_at, updated_at, version, history_timestamp, history_user_id, history_comment) VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9)
2025-05-10 09:38:05.312 [INFO] [INFO] convert_query_to_native - Postgres override .. Good!
2025-05-10 09:38:05.312 [INFO] [INFO] ####### async - newsql
2025-05-10 09:38:05.312 [INFO] [INFO] ####### async - newsql: SELECT * FROM test_users_6631d75b WHERE id = $1 AND deleted_at IS NULL
2025-05-10 09:38:05.317 [INFO] [INFO] Pool status:
{"initialized": true, "alias": "testdb_postgres", "hash": "039aa5ab782c53fb1f9eb3596f4c49fe", "min_size": 3, "max_size": 20, "current_size": 20, "in_use": 0, "idle": 20, "active_connections": 1, "shutting_down": false, "metrics": {"total_acquired": 1, "total_released": 1, "current_active": 0, "peak_active": 1, "errors": 0, "timeouts": 0, "last_timeout": null, "avg_acquisition_time": 0.0}}
2025-05-10 09:38:05.873 [INFO] [INFO] Pool 039aa5ab782c53fb1f9eb3596f4c49fe marked as shutting down, no new connections allowed
2025-05-10 09:38:05.874 [ERROR] [ERROR] Error closing pool for 039aa5ab782c53fb1f9eb3596f4c49fe: Pool.close() got an unexpected keyword argument 'cancel_tasks'
2025-05-10 09:38:05.874 [INFO] [INFO] Tearing down test environment...
2025-05-10 09:38:05.874 [INFO] [INFO] Running command: docker-compose -f c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml -p test-databases down -v
2025-05-10 09:38:17.527 [INFO] [INFO] Command error:  Container test-databases-postgres-1  Stopping
 Container test-databases-mysql-1  Stopping
 Container test-databases-mysql-1  Stopped
 Container test-databases-mysql-1  Removing
 Container test-databases-mysql-1  Removed
 Container test-databases-postgres-1  Stopped
 Container test-databases-postgres-1  Removing
 Container test-databases-postgres-1  Removed
 Volume test-databases_mysql_data  Removing
 Network test-databases_default  Removing
 Volume test-databases_mysql_data  Removed
 Network test-databases_default  Removed

2025-05-10 09:38:57.923 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 09:38:57.923 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 09:39:03.654 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 09:39:03.654 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 09:39:03.674 [INFO] [INFO] Setting up test environment...
2025-05-10 09:39:03.675 [INFO] [INFO] Removing .\.pytest_cache
2025-05-10 09:39:03.707 [INFO] [INFO] Test files in this session: {'c:\\Users\\Phil\\Desktop\\Projects\\shared-libs\\python\\databases\\tests\\test_dal.py'}
2025-05-10 09:39:03.707 [INFO] [INFO] Found Docker Compose file for c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\test_dal.py: c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml
2025-05-10 09:39:03.713 [INFO] [INFO] Detected the following services in c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml:
2025-05-10 09:39:03.713 [INFO] [INFO]   - mysql: localhost:3307 (container port: 3306)
2025-05-10 09:39:03.713 [INFO] [INFO]   - postgres: localhost:5433 (container port: 5432)
2025-05-10 09:39:03.714 [INFO] [INFO] Running command: docker-compose -f c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml -p test-databases up -d
2025-05-10 09:39:05.040 [INFO] [INFO] Command error:  Network test-databases_default  Creating
 Network test-databases_default  Created
 Volume "test-databases_mysql_data"  Creating
 Volume "test-databases_mysql_data"  Created
 Container test-databases-postgres-1  Creating
 Container test-databases-mysql-1  Creating
 Container test-databases-mysql-1  Created
 Container test-databases-postgres-1  Created
 Container test-databases-mysql-1  Starting
 Container test-databases-postgres-1  Starting
 Container test-databases-postgres-1  Started
 Container test-databases-mysql-1  Started

2025-05-10 09:39:35.559 [INFO] [INFO] Thread 7700: Requesting sync connection for testdb_postgres
2025-05-10 09:39:35.595 [INFO] [INFO] Thread 7700: Sync connection created and cached for testdb_postgres in 0.04s
2025-05-10 09:39:35.792 [INFO] [INFO] testdb_postgres - 039aa5ab782c53fb1f9eb3596f4c49fe async pool initialized in 0.19s
2025-05-10 09:39:35.793 [INFO] [INFO] Pool status:
{"initialized": true, "alias": "testdb_postgres", "hash": "039aa5ab782c53fb1f9eb3596f4c49fe", "min_size": 3, "max_size": 20, "current_size": 20, "in_use": 1, "idle": 19, "active_connections": 0, "shutting_down": false, "metrics": {"total_acquired": 1, "total_released": 0, "current_active": 1, "peak_active": 1, "errors": 0, "timeouts": 0, "last_timeout": null, "avg_acquisition_time": 0.0}}
2025-05-10 09:39:35.793 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 09:39:35.793 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 09:39:35.806 [INFO] [INFO] convert_query_to_native - Postgres override .. Good!
2025-05-10 09:39:35.806 [INFO] [INFO] ####### async - newsql
2025-05-10 09:39:35.806 [INFO] [INFO] ####### async - newsql: SELECT table_name FROM information_schema.tables WHERE table_name = $1
2025-05-10 09:39:35.824 [INFO] [INFO] convert_query_to_native - Postgres override .. Good!
2025-05-10 09:39:35.824 [INFO] [INFO] ####### async - newsql
2025-05-10 09:39:35.824 [INFO] [INFO] ####### async - newsql: 
            CREATE TABLE IF NOT EXISTS test_users_67d1f380 (
                name TEXT, age TEXT, id TEXT PRIMARY KEY, created_at TEXT, updated_at TEXT, created_by TEXT, updated_by TEXT, deleted_at TEXT
            )
        
2025-05-10 09:39:35.841 [INFO] [INFO] convert_query_to_native - Postgres override .. Good!
2025-05-10 09:39:35.841 [INFO] [INFO] ####### async - newsql
2025-05-10 09:39:35.841 [INFO] [INFO] ####### async - newsql: 
            CREATE TABLE IF NOT EXISTS test_users_67d1f380_meta (
                name TEXT PRIMARY KEY,
                type TEXT
            )
        
2025-05-10 09:39:35.852 [INFO] [INFO] convert_query_to_native - Postgres override .. Good!
2025-05-10 09:39:35.852 [INFO] [INFO] ####### async - newsql
2025-05-10 09:39:35.852 [INFO] [INFO] ####### async - newsql: 
            CREATE TABLE IF NOT EXISTS test_users_67d1f380_history (
                name TEXT, age TEXT, id TEXT, created_at TEXT, updated_at TEXT, created_by TEXT, updated_by TEXT, deleted_at TEXT, version INTEGER, history_timestamp TEXT, history_user_id TEXT, history_comment TEXT,
                PRIMARY KEY (id, version)
            )
        
2025-05-10 09:39:35.869 [INFO] [INFO] convert_query_to_native - Postgres override .. Good!
2025-05-10 09:39:35.870 [INFO] [INFO] ####### async - newsql
2025-05-10 09:39:35.870 [INFO] [INFO] ####### async - newsql: SELECT name, type FROM test_users_67d1f380_meta
2025-05-10 09:39:35.872 [INFO] [INFO] convert_query_to_native - Postgres override .. Good!
2025-05-10 09:39:35.872 [INFO] [INFO] ####### async - newsql
2025-05-10 09:39:35.872 [INFO] [INFO] ####### async - newsql: INSERT INTO test_users_67d1f380_meta VALUES ($1, $2) ON CONFLICT(name) DO UPDATE SET type=EXCLUDED.type
2025-05-10 09:39:35.884 [INFO] [INFO] convert_query_to_native - Postgres override .. Good!
2025-05-10 09:39:35.884 [INFO] [INFO] ####### async - newsql
2025-05-10 09:39:35.884 [INFO] [INFO] ####### async - newsql: INSERT INTO test_users_67d1f380 (name, age, id, created_at, updated_at) VALUES ($1, $2, $3, $4, $5) ON CONFLICT(id) DO UPDATE SET name=EXCLUDED.name, age=EXCLUDED.age, created_at=EXCLUDED.created_at, updated_at=EXCLUDED.updated_at
2025-05-10 09:39:35.886 [INFO] [INFO] convert_query_to_native - Postgres override .. Good!
2025-05-10 09:39:35.887 [INFO] [INFO] ####### async - newsql
2025-05-10 09:39:35.887 [INFO] [INFO] ####### async - newsql: SELECT MAX(version) FROM test_users_67d1f380_history WHERE id = $1
2025-05-10 09:39:35.890 [INFO] [INFO] convert_query_to_native - Postgres override .. Good!
2025-05-10 09:39:35.890 [INFO] [INFO] ####### async - newsql
2025-05-10 09:39:35.890 [INFO] [INFO] ####### async - newsql: INSERT INTO test_users_67d1f380_history (name, age, id, created_at, updated_at, version, history_timestamp, history_user_id, history_comment) VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9)
2025-05-10 09:39:35.901 [INFO] [INFO] convert_query_to_native - Postgres override .. Good!
2025-05-10 09:39:35.901 [INFO] [INFO] ####### async - newsql
2025-05-10 09:39:35.902 [INFO] [INFO] ####### async - newsql: SELECT column_name, data_type FROM information_schema.columns WHERE table_name = $1
2025-05-10 09:39:35.922 [INFO] [INFO] convert_query_to_native - Postgres override .. Good!
2025-05-10 09:39:35.922 [INFO] [INFO] ####### async - newsql
2025-05-10 09:39:35.922 [INFO] [INFO] ####### async - newsql: INSERT INTO test_users_67d1f380 (id, name, age, created_at, updated_at) VALUES ($1, $2, $3, $4, $5) ON CONFLICT(id) DO UPDATE SET name=EXCLUDED.name, age=EXCLUDED.age, created_at=EXCLUDED.created_at, updated_at=EXCLUDED.updated_at
2025-05-10 09:39:35.926 [INFO] [INFO] convert_query_to_native - Postgres override .. Good!
2025-05-10 09:39:35.926 [INFO] [INFO] ####### async - newsql
2025-05-10 09:39:35.926 [INFO] [INFO] ####### async - newsql: INSERT INTO test_users_67d1f380_history (id, name, age, created_at, updated_at, version, history_timestamp, history_user_id, history_comment) VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9)
2025-05-10 09:39:35.933 [INFO] [INFO] convert_query_to_native - Postgres override .. Good!
2025-05-10 09:39:35.933 [INFO] [INFO] ####### async - newsql
2025-05-10 09:39:35.933 [INFO] [INFO] ####### async - newsql: SELECT * FROM test_users_67d1f380 WHERE id = $1 AND deleted_at IS NULL
2025-05-10 09:39:35.939 [INFO] [INFO] convert_query_to_native - Postgres override .. Good!
2025-05-10 09:39:35.939 [INFO] [INFO] ####### async - newsql
2025-05-10 09:39:35.939 [INFO] [INFO] ####### async - newsql: DELETE FROM test_users_67d1f380 WHERE id = $1
2025-05-10 09:39:35.946 [INFO] [INFO] Pool status:
{"initialized": true, "alias": "testdb_postgres", "hash": "039aa5ab782c53fb1f9eb3596f4c49fe", "min_size": 3, "max_size": 20, "current_size": 20, "in_use": 0, "idle": 20, "active_connections": 1, "shutting_down": false, "metrics": {"total_acquired": 1, "total_released": 1, "current_active": 0, "peak_active": 1, "errors": 0, "timeouts": 0, "last_timeout": null, "avg_acquisition_time": 0.0}}
2025-05-10 09:39:35.949 [INFO] [INFO] Pool 039aa5ab782c53fb1f9eb3596f4c49fe marked as shutting down, no new connections allowed
2025-05-10 09:39:35.949 [ERROR] [ERROR] Error closing pool for 039aa5ab782c53fb1f9eb3596f4c49fe: Pool.close() got an unexpected keyword argument 'cancel_tasks'
2025-05-10 09:39:35.950 [INFO] [INFO] Tearing down test environment...
2025-05-10 09:39:35.950 [INFO] [INFO] Running command: docker-compose -f c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml -p test-databases down -v
2025-05-10 09:39:47.471 [INFO] [INFO] Command error:  Container test-databases-mysql-1  Stopping
 Container test-databases-postgres-1  Stopping
 Container test-databases-mysql-1  Stopped
 Container test-databases-mysql-1  Removing
 Container test-databases-mysql-1  Removed
 Container test-databases-postgres-1  Stopped
 Container test-databases-postgres-1  Removing
 Container test-databases-postgres-1  Removed
 Volume test-databases_mysql_data  Removing
 Network test-databases_default  Removing
 Volume test-databases_mysql_data  Removed
 Network test-databases_default  Removed

2025-05-10 09:44:29.022 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 09:44:29.022 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 09:44:59.755 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 09:44:59.755 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 09:47:37.063 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 09:47:37.063 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 09:48:55.664 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 09:48:55.665 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 09:49:02.327 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 09:49:02.327 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 09:49:02.350 [INFO] [INFO] Setting up test environment...
2025-05-10 09:49:02.350 [INFO] [INFO] Removing .\.pytest_cache
2025-05-10 09:49:02.386 [INFO] [INFO] Test files in this session: {'c:\\Users\\Phil\\Desktop\\Projects\\shared-libs\\python\\databases\\tests\\test_dal.py'}
2025-05-10 09:49:02.386 [INFO] [INFO] Found Docker Compose file for c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\test_dal.py: c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml
2025-05-10 09:49:02.391 [INFO] [INFO] Detected the following services in c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml:
2025-05-10 09:49:02.391 [INFO] [INFO]   - mysql: localhost:3307 (container port: 3306)
2025-05-10 09:49:02.391 [INFO] [INFO]   - postgres: localhost:5433 (container port: 5432)
2025-05-10 09:49:02.391 [INFO] [INFO] Running command: docker-compose -f c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml -p test-databases up -d
2025-05-10 09:49:04.953 [INFO] [INFO] Command error:  mysql Pulling 
 postgres Pulling 
 mysql Pulled 
 postgres Pulled 
 Network test-databases_default  Creating
 Network test-databases_default  Created
 Volume "test-databases_mysql_data"  Creating
 Volume "test-databases_mysql_data"  Created
 Container test-databases-postgres-1  Creating
 Container test-databases-mysql-1  Creating
 Container test-databases-mysql-1  Created
 Container test-databases-postgres-1  Created
 Container test-databases-mysql-1  Starting
 Container test-databases-postgres-1  Starting
 Container test-databases-postgres-1  Started
 Container test-databases-mysql-1  Started

2025-05-10 09:49:04.973 [INFO] [INFO] Thread 3052: Requesting sync connection for testdb_postgres
2025-05-10 09:49:04.981 [ERROR] [ERROR] Thread 3052: Could not create a sync connection for testdb_postgres: connection to server at "localhost" (::1), port 5433 failed: server closed the connection unexpectedly
	This probably means the server terminated abnormally
	before or while processing the request.

2025-05-10 09:49:05.009 [ERROR] [ERROR] testdb_postgres - 039aa5ab782c53fb1f9eb3596f4c49fe async pool creation failed: unexpected connection_lost() call
2025-05-10 09:49:05.839 [INFO] [INFO] Pool 039aa5ab782c53fb1f9eb3596f4c49fe marked as shutting down, no new connections allowed
2025-05-10 09:49:05.839 [INFO] [INFO] Tearing down test environment...
2025-05-10 09:49:05.840 [INFO] [INFO] Running command: docker-compose -f c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml -p test-databases down -v
2025-05-10 09:49:18.329 [INFO] [INFO] Command error:  Container test-databases-mysql-1  Stopping
 Container test-databases-postgres-1  Stopping
 Container test-databases-postgres-1  Stopped
 Container test-databases-postgres-1  Removing
 Container test-databases-postgres-1  Removed
 Container test-databases-mysql-1  Stopped
 Container test-databases-mysql-1  Removing
 Container test-databases-mysql-1  Removed
 Volume test-databases_mysql_data  Removing
 Network test-databases_default  Removing
 Volume test-databases_mysql_data  Removed
 Network test-databases_default  Removed

2025-05-10 09:52:08.715 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 09:52:08.715 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 09:52:48.255 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 09:52:48.256 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 09:52:55.539 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 09:52:55.540 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 09:52:55.563 [INFO] [INFO] Setting up test environment...
2025-05-10 09:52:55.563 [INFO] [INFO] Removing .\.pytest_cache
2025-05-10 09:52:55.602 [INFO] [INFO] Test files in this session: {'c:\\Users\\Phil\\Desktop\\Projects\\shared-libs\\python\\databases\\tests\\test_dal.py'}
2025-05-10 09:52:55.602 [INFO] [INFO] Found Docker Compose file for c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\test_dal.py: c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml
2025-05-10 09:52:55.609 [INFO] [INFO] Detected the following services in c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml:
2025-05-10 09:52:55.609 [INFO] [INFO]   - mysql: localhost:3307 (container port: 3306)
2025-05-10 09:52:55.609 [INFO] [INFO]   - postgres: localhost:5433 (container port: 5432)
2025-05-10 09:52:55.609 [INFO] [INFO] Running command: docker-compose -f c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml -p test-databases up -d
2025-05-10 09:52:56.944 [INFO] [INFO] Command error:  Network test-databases_default  Creating
 Network test-databases_default  Created
 Volume "test-databases_mysql_data"  Creating
 Volume "test-databases_mysql_data"  Created
 Container test-databases-mysql-1  Creating
 Container test-databases-postgres-1  Creating
 Container test-databases-mysql-1  Created
 Container test-databases-postgres-1  Created
 Container test-databases-mysql-1  Starting
 Container test-databases-postgres-1  Starting
 Container test-databases-mysql-1  Started
 Container test-databases-postgres-1  Started

2025-05-10 09:52:56.959 [INFO] [INFO] Thread 15228: Requesting sync connection for testdb_postgres
2025-05-10 09:52:56.967 [ERROR] [ERROR] Thread 15228: Could not create a sync connection for testdb_postgres: connection to server at "localhost" (::1), port 5433 failed: server closed the connection unexpectedly
	This probably means the server terminated abnormally
	before or while processing the request.

2025-05-10 09:52:56.995 [ERROR] [ERROR] testdb_postgres - 039aa5ab782c53fb1f9eb3596f4c49fe async pool creation failed: unexpected connection_lost() call
2025-05-10 09:52:57.750 [INFO] [INFO] Pool 039aa5ab782c53fb1f9eb3596f4c49fe marked as shutting down, no new connections allowed
2025-05-10 09:52:57.750 [INFO] [INFO] Tearing down test environment...
2025-05-10 09:53:34.105 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 09:53:34.105 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 09:53:34.136 [INFO] [INFO] Setting up test environment...
2025-05-10 09:53:34.136 [INFO] [INFO] Removing .\.pytest_cache
2025-05-10 09:53:34.187 [INFO] [INFO] Test files in this session: {'c:\\Users\\Phil\\Desktop\\Projects\\shared-libs\\python\\databases\\tests\\test_dal.py'}
2025-05-10 09:53:34.188 [INFO] [INFO] Found Docker Compose file for c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\test_dal.py: c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml
2025-05-10 09:53:34.194 [INFO] [INFO] Detected the following services in c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml:
2025-05-10 09:53:34.195 [INFO] [INFO]   - mysql: localhost:3307 (container port: 3306)
2025-05-10 09:53:34.195 [INFO] [INFO]   - postgres: localhost:5433 (container port: 5432)
2025-05-10 09:53:34.195 [INFO] [INFO] Running command: docker-compose -f c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml -p test-databases up -d
2025-05-10 09:53:34.613 [INFO] [INFO] Command error:  Container test-databases-postgres-1  Running
 Container test-databases-mysql-1  Running

2025-05-10 09:53:34.812 [INFO] [INFO] testdb_postgres - 039aa5ab782c53fb1f9eb3596f4c49fe async pool initialized in 0.18s
2025-05-10 09:53:34.814 [INFO] [INFO] Pool status:
{"initialized": true, "alias": "testdb_postgres", "hash": "039aa5ab782c53fb1f9eb3596f4c49fe", "min_size": 3, "max_size": 20, "current_size": 20, "in_use": 1, "idle": 19, "active_connections": 0, "shutting_down": false, "metrics": {"total_acquired": 1, "total_released": 0, "current_active": 1, "peak_active": 1, "errors": 0, "timeouts": 0, "last_timeout": null, "avg_acquisition_time": 0.0}}
2025-05-10 09:53:34.815 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 09:53:34.815 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 09:53:34.825 [INFO] [INFO] convert_query_to_native - Postgres override .. Good!
2025-05-10 09:53:34.826 [INFO] [INFO] ####### async - newsql
2025-05-10 09:53:34.826 [INFO] [INFO] ####### async - newsql: SELECT table_name FROM information_schema.tables WHERE table_name = $1
2025-05-10 09:53:34.839 [INFO] [INFO] convert_query_to_native - Postgres override .. Good!
2025-05-10 09:53:34.839 [INFO] [INFO] ####### async - newsql
2025-05-10 09:53:34.839 [INFO] [INFO] ####### async - newsql: 
            CREATE TABLE IF NOT EXISTS test_users_25f3f711 (
                name TEXT, id TEXT PRIMARY KEY, created_at TEXT, updated_at TEXT, created_by TEXT, updated_by TEXT, deleted_at TEXT
            )
        
2025-05-10 09:53:34.860 [INFO] [INFO] convert_query_to_native - Postgres override .. Good!
2025-05-10 09:53:34.860 [INFO] [INFO] ####### async - newsql
2025-05-10 09:53:34.860 [INFO] [INFO] ####### async - newsql: 
            CREATE TABLE IF NOT EXISTS test_users_25f3f711_meta (
                name TEXT PRIMARY KEY,
                type TEXT
            )
        
2025-05-10 09:53:34.872 [INFO] [INFO] convert_query_to_native - Postgres override .. Good!
2025-05-10 09:53:34.872 [INFO] [INFO] ####### async - newsql
2025-05-10 09:53:34.872 [INFO] [INFO] ####### async - newsql: 
            CREATE TABLE IF NOT EXISTS test_users_25f3f711_history (
                name TEXT, id TEXT, created_at TEXT, updated_at TEXT, created_by TEXT, updated_by TEXT, deleted_at TEXT, version INTEGER, history_timestamp TEXT, history_user_id TEXT, history_comment TEXT,
                PRIMARY KEY (id, version)
            )
        
2025-05-10 09:53:34.889 [INFO] [INFO] convert_query_to_native - Postgres override .. Good!
2025-05-10 09:53:34.889 [INFO] [INFO] ####### async - newsql
2025-05-10 09:53:34.889 [INFO] [INFO] ####### async - newsql: SELECT name, type FROM test_users_25f3f711_meta
2025-05-10 09:53:34.891 [INFO] [INFO] convert_query_to_native - Postgres override .. Good!
2025-05-10 09:53:34.891 [INFO] [INFO] ####### async - newsql
2025-05-10 09:53:34.891 [INFO] [INFO] ####### async - newsql: INSERT INTO test_users_25f3f711_meta VALUES ($1, $2) ON CONFLICT(name) DO UPDATE SET type=EXCLUDED.type
2025-05-10 09:53:34.902 [INFO] [INFO] convert_query_to_native - Postgres override .. Good!
2025-05-10 09:53:34.903 [INFO] [INFO] ####### async - newsql
2025-05-10 09:53:34.903 [INFO] [INFO] ####### async - newsql: INSERT INTO test_users_25f3f711 (name, id, created_at, updated_at) VALUES ($1, $2, $3, $4) ON CONFLICT(id) DO UPDATE SET name=EXCLUDED.name, created_at=EXCLUDED.created_at, updated_at=EXCLUDED.updated_at
2025-05-10 09:53:34.906 [INFO] [INFO] convert_query_to_native - Postgres override .. Good!
2025-05-10 09:53:34.906 [INFO] [INFO] ####### async - newsql
2025-05-10 09:53:34.906 [INFO] [INFO] ####### async - newsql: SELECT MAX(version) FROM test_users_25f3f711_history WHERE id = $1
2025-05-10 09:53:34.908 [INFO] [INFO] convert_query_to_native - Postgres override .. Good!
2025-05-10 09:53:34.908 [INFO] [INFO] ####### async - newsql
2025-05-10 09:53:34.908 [INFO] [INFO] ####### async - newsql: INSERT INTO test_users_25f3f711_history (name, id, created_at, updated_at, version, history_timestamp, history_user_id, history_comment) VALUES ($1, $2, $3, $4, $5, $6, $7, $8)
2025-05-10 09:53:34.916 [INFO] [INFO] convert_query_to_native - Postgres override .. Good!
2025-05-10 09:53:34.917 [INFO] [INFO] ####### async - newsql
2025-05-10 09:53:34.917 [INFO] [INFO] ####### async - newsql: SELECT * FROM test_users_25f3f711 WHERE id = $1 AND deleted_at IS NULL
2025-05-10 09:53:34.921 [INFO] [INFO] convert_query_to_native - Postgres override .. Good!
2025-05-10 09:53:34.921 [INFO] [INFO] ####### async - newsql
2025-05-10 09:53:34.921 [INFO] [INFO] ####### async - newsql: DELETE FROM test_users_25f3f711 WHERE id = $1
2025-05-10 09:53:34.928 [INFO] [INFO] Pool status:
{"initialized": true, "alias": "testdb_postgres", "hash": "039aa5ab782c53fb1f9eb3596f4c49fe", "min_size": 3, "max_size": 20, "current_size": 20, "in_use": 0, "idle": 20, "active_connections": 1, "shutting_down": false, "metrics": {"total_acquired": 1, "total_released": 1, "current_active": 0, "peak_active": 1, "errors": 0, "timeouts": 0, "last_timeout": null, "avg_acquisition_time": 0.0}}
2025-05-10 09:53:34.929 [INFO] [INFO] Pool 039aa5ab782c53fb1f9eb3596f4c49fe marked as shutting down, no new connections allowed
2025-05-10 09:53:34.929 [ERROR] [ERROR] Error closing pool for 039aa5ab782c53fb1f9eb3596f4c49fe: Pool.close() got an unexpected keyword argument 'cancel_tasks'
2025-05-10 09:53:34.931 [INFO] [INFO] Tearing down test environment...
2025-05-10 09:54:05.173 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 09:54:05.173 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 09:54:05.201 [INFO] [INFO] Setting up test environment...
2025-05-10 09:54:05.201 [INFO] [INFO] Removing .\.pytest_cache
2025-05-10 09:54:05.232 [INFO] [INFO] Test files in this session: {'c:\\Users\\Phil\\Desktop\\Projects\\shared-libs\\python\\databases\\tests\\test_dal.py'}
2025-05-10 09:54:05.232 [INFO] [INFO] Found Docker Compose file for c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\test_dal.py: c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml
2025-05-10 09:54:05.239 [INFO] [INFO] Detected the following services in c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml:
2025-05-10 09:54:05.239 [INFO] [INFO]   - mysql: localhost:3307 (container port: 3306)
2025-05-10 09:54:05.239 [INFO] [INFO]   - postgres: localhost:5433 (container port: 5432)
2025-05-10 09:54:05.240 [INFO] [INFO] Running command: docker-compose -f c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml -p test-databases up -d
2025-05-10 09:54:05.562 [INFO] [INFO] Command error:  Container test-databases-postgres-1  Running
 Container test-databases-mysql-1  Running

2025-05-10 09:54:05.571 [INFO] [INFO] Thread 16116: Requesting sync connection for testdb_postgres
2025-05-10 09:54:05.596 [INFO] [INFO] Thread 16116: Sync connection created and cached for testdb_postgres in 0.02s
2025-05-10 09:54:05.771 [INFO] [INFO] testdb_postgres - 039aa5ab782c53fb1f9eb3596f4c49fe async pool initialized in 0.17s
2025-05-10 09:54:05.772 [INFO] [INFO] Pool status:
{"initialized": true, "alias": "testdb_postgres", "hash": "039aa5ab782c53fb1f9eb3596f4c49fe", "min_size": 3, "max_size": 20, "current_size": 20, "in_use": 1, "idle": 19, "active_connections": 0, "shutting_down": false, "metrics": {"total_acquired": 1, "total_released": 0, "current_active": 1, "peak_active": 1, "errors": 0, "timeouts": 0, "last_timeout": null, "avg_acquisition_time": 0.0}}
2025-05-10 09:54:05.772 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 09:54:05.772 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 09:54:05.783 [INFO] [INFO] convert_query_to_native - Postgres override .. Good!
2025-05-10 09:54:05.783 [INFO] [INFO] ####### async - newsql
2025-05-10 09:54:05.783 [INFO] [INFO] ####### async - newsql: SELECT table_name FROM information_schema.tables WHERE table_name = $1
2025-05-10 09:54:05.792 [INFO] [INFO] convert_query_to_native - Postgres override .. Good!
2025-05-10 09:54:05.792 [INFO] [INFO] ####### async - newsql
2025-05-10 09:54:05.793 [INFO] [INFO] ####### async - newsql: 
            CREATE TABLE IF NOT EXISTS test_users_d7b0b580 (
                name TEXT, age TEXT, id TEXT PRIMARY KEY, created_at TEXT, updated_at TEXT, created_by TEXT, updated_by TEXT, deleted_at TEXT
            )
        
2025-05-10 09:54:05.813 [INFO] [INFO] convert_query_to_native - Postgres override .. Good!
2025-05-10 09:54:05.813 [INFO] [INFO] ####### async - newsql
2025-05-10 09:54:05.813 [INFO] [INFO] ####### async - newsql: 
            CREATE TABLE IF NOT EXISTS test_users_d7b0b580_meta (
                name TEXT PRIMARY KEY,
                type TEXT
            )
        
2025-05-10 09:54:05.824 [INFO] [INFO] convert_query_to_native - Postgres override .. Good!
2025-05-10 09:54:05.824 [INFO] [INFO] ####### async - newsql
2025-05-10 09:54:05.824 [INFO] [INFO] ####### async - newsql: 
            CREATE TABLE IF NOT EXISTS test_users_d7b0b580_history (
                name TEXT, age TEXT, id TEXT, created_at TEXT, updated_at TEXT, created_by TEXT, updated_by TEXT, deleted_at TEXT, version INTEGER, history_timestamp TEXT, history_user_id TEXT, history_comment TEXT,
                PRIMARY KEY (id, version)
            )
        
2025-05-10 09:54:05.841 [INFO] [INFO] convert_query_to_native - Postgres override .. Good!
2025-05-10 09:54:05.841 [INFO] [INFO] ####### async - newsql
2025-05-10 09:54:05.841 [INFO] [INFO] ####### async - newsql: SELECT name, type FROM test_users_d7b0b580_meta
2025-05-10 09:54:05.845 [INFO] [INFO] convert_query_to_native - Postgres override .. Good!
2025-05-10 09:54:05.845 [INFO] [INFO] ####### async - newsql
2025-05-10 09:54:05.845 [INFO] [INFO] ####### async - newsql: INSERT INTO test_users_d7b0b580_meta VALUES ($1, $2) ON CONFLICT(name) DO UPDATE SET type=EXCLUDED.type
2025-05-10 09:54:05.856 [INFO] [INFO] convert_query_to_native - Postgres override .. Good!
2025-05-10 09:54:05.856 [INFO] [INFO] ####### async - newsql
2025-05-10 09:54:05.857 [INFO] [INFO] ####### async - newsql: INSERT INTO test_users_d7b0b580 (name, age, id, created_at, updated_at) VALUES ($1, $2, $3, $4, $5) ON CONFLICT(id) DO UPDATE SET name=EXCLUDED.name, age=EXCLUDED.age, created_at=EXCLUDED.created_at, updated_at=EXCLUDED.updated_at
2025-05-10 09:54:05.861 [INFO] [INFO] convert_query_to_native - Postgres override .. Good!
2025-05-10 09:54:05.861 [INFO] [INFO] ####### async - newsql
2025-05-10 09:54:05.861 [INFO] [INFO] ####### async - newsql: SELECT MAX(version) FROM test_users_d7b0b580_history WHERE id = $1
2025-05-10 09:54:05.865 [INFO] [INFO] convert_query_to_native - Postgres override .. Good!
2025-05-10 09:54:05.865 [INFO] [INFO] ####### async - newsql
2025-05-10 09:54:05.865 [INFO] [INFO] ####### async - newsql: INSERT INTO test_users_d7b0b580_history (name, age, id, created_at, updated_at, version, history_timestamp, history_user_id, history_comment) VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9)
2025-05-10 09:54:05.873 [INFO] [INFO] convert_query_to_native - Postgres override .. Good!
2025-05-10 09:54:05.873 [INFO] [INFO] ####### async - newsql
2025-05-10 09:54:05.873 [INFO] [INFO] ####### async - newsql: SELECT column_name, data_type FROM information_schema.columns WHERE table_name = $1
2025-05-10 09:54:05.893 [INFO] [INFO] convert_query_to_native - Postgres override .. Good!
2025-05-10 09:54:05.893 [INFO] [INFO] ####### async - newsql
2025-05-10 09:54:05.893 [INFO] [INFO] ####### async - newsql: INSERT INTO test_users_d7b0b580 (id, name, age, created_at, updated_at) VALUES ($1, $2, $3, $4, $5) ON CONFLICT(id) DO UPDATE SET name=EXCLUDED.name, age=EXCLUDED.age, created_at=EXCLUDED.created_at, updated_at=EXCLUDED.updated_at
2025-05-10 09:54:05.897 [INFO] [INFO] convert_query_to_native - Postgres override .. Good!
2025-05-10 09:54:05.897 [INFO] [INFO] ####### async - newsql
2025-05-10 09:54:05.897 [INFO] [INFO] ####### async - newsql: INSERT INTO test_users_d7b0b580_history (id, name, age, created_at, updated_at, version, history_timestamp, history_user_id, history_comment) VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9)
2025-05-10 09:54:05.904 [INFO] [INFO] convert_query_to_native - Postgres override .. Good!
2025-05-10 09:54:05.904 [INFO] [INFO] ####### async - newsql
2025-05-10 09:54:05.904 [INFO] [INFO] ####### async - newsql: SELECT * FROM test_users_d7b0b580 WHERE id = $1 AND deleted_at IS NULL
2025-05-10 09:54:05.908 [INFO] [INFO] convert_query_to_native - Postgres override .. Good!
2025-05-10 09:54:05.908 [INFO] [INFO] ####### async - newsql
2025-05-10 09:54:05.908 [INFO] [INFO] ####### async - newsql: DELETE FROM test_users_d7b0b580 WHERE id = $1
2025-05-10 09:54:05.914 [INFO] [INFO] Pool status:
{"initialized": true, "alias": "testdb_postgres", "hash": "039aa5ab782c53fb1f9eb3596f4c49fe", "min_size": 3, "max_size": 20, "current_size": 20, "in_use": 0, "idle": 20, "active_connections": 1, "shutting_down": false, "metrics": {"total_acquired": 1, "total_released": 1, "current_active": 0, "peak_active": 1, "errors": 0, "timeouts": 0, "last_timeout": null, "avg_acquisition_time": 0.0}}
2025-05-10 09:54:05.920 [INFO] [INFO] Pool 039aa5ab782c53fb1f9eb3596f4c49fe marked as shutting down, no new connections allowed
2025-05-10 09:54:05.920 [ERROR] [ERROR] Error closing pool for 039aa5ab782c53fb1f9eb3596f4c49fe: Pool.close() got an unexpected keyword argument 'cancel_tasks'
2025-05-10 09:54:05.921 [INFO] [INFO] Tearing down test environment...
2025-05-10 09:54:57.078 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 09:54:57.078 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 09:54:57.101 [INFO] [INFO] Setting up test environment...
2025-05-10 09:54:57.102 [INFO] [INFO] Removing .\.pytest_cache
2025-05-10 09:54:57.134 [INFO] [INFO] Test files in this session: {'c:\\Users\\Phil\\Desktop\\Projects\\shared-libs\\python\\databases\\tests\\test_dal.py'}
2025-05-10 09:54:57.135 [INFO] [INFO] Found Docker Compose file for c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\test_dal.py: c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml
2025-05-10 09:54:57.142 [INFO] [INFO] Detected the following services in c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml:
2025-05-10 09:54:57.142 [INFO] [INFO]   - mysql: localhost:3307 (container port: 3306)
2025-05-10 09:54:57.142 [INFO] [INFO]   - postgres: localhost:5433 (container port: 5432)
2025-05-10 09:54:57.142 [INFO] [INFO] Running command: docker-compose -f c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml -p test-databases up -d
2025-05-10 09:54:57.474 [INFO] [INFO] Command error:  Container test-databases-mysql-1  Running
 Container test-databases-postgres-1  Running

2025-05-10 09:54:57.484 [INFO] [INFO] Thread 11172: Requesting sync connection for testdb_postgres
2025-05-10 09:54:57.510 [INFO] [INFO] Thread 11172: Sync connection created and cached for testdb_postgres in 0.02s
2025-05-10 09:54:57.683 [INFO] [INFO] testdb_postgres - 039aa5ab782c53fb1f9eb3596f4c49fe async pool initialized in 0.17s
2025-05-10 09:54:57.684 [INFO] [INFO] Pool status:
{"initialized": true, "alias": "testdb_postgres", "hash": "039aa5ab782c53fb1f9eb3596f4c49fe", "min_size": 3, "max_size": 20, "current_size": 20, "in_use": 1, "idle": 19, "active_connections": 0, "shutting_down": false, "metrics": {"total_acquired": 1, "total_released": 0, "current_active": 1, "peak_active": 1, "errors": 0, "timeouts": 0, "last_timeout": null, "avg_acquisition_time": 0.0}}
2025-05-10 09:54:57.685 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 09:54:57.685 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 09:54:57.695 [INFO] [INFO] convert_query_to_native - Postgres override .. Good!
2025-05-10 09:54:57.695 [INFO] [INFO] ####### async - newsql
2025-05-10 09:54:57.695 [INFO] [INFO] ####### async - newsql: SELECT table_name FROM information_schema.tables WHERE table_name = $1
2025-05-10 09:54:57.708 [INFO] [INFO] convert_query_to_native - Postgres override .. Good!
2025-05-10 09:54:57.708 [INFO] [INFO] ####### async - newsql
2025-05-10 09:54:57.708 [INFO] [INFO] ####### async - newsql: 
            CREATE TABLE IF NOT EXISTS test_users_002f8904 (
                name TEXT, id TEXT PRIMARY KEY, created_at TEXT, updated_at TEXT, update_comment TEXT, created_by TEXT, updated_by TEXT, deleted_at TEXT
            )
        
2025-05-10 09:54:57.725 [INFO] [INFO] convert_query_to_native - Postgres override .. Good!
2025-05-10 09:54:57.725 [INFO] [INFO] ####### async - newsql
2025-05-10 09:54:57.725 [INFO] [INFO] ####### async - newsql: 
            CREATE TABLE IF NOT EXISTS test_users_002f8904_meta (
                name TEXT PRIMARY KEY,
                type TEXT
            )
        
2025-05-10 09:54:57.737 [INFO] [INFO] convert_query_to_native - Postgres override .. Good!
2025-05-10 09:54:57.737 [INFO] [INFO] ####### async - newsql
2025-05-10 09:54:57.737 [INFO] [INFO] ####### async - newsql: 
            CREATE TABLE IF NOT EXISTS test_users_002f8904_history (
                name TEXT, id TEXT, created_at TEXT, updated_at TEXT, update_comment TEXT, created_by TEXT, updated_by TEXT, deleted_at TEXT, version INTEGER, history_timestamp TEXT, history_user_id TEXT, history_comment TEXT,
                PRIMARY KEY (id, version)
            )
        
2025-05-10 09:54:57.750 [INFO] [INFO] convert_query_to_native - Postgres override .. Good!
2025-05-10 09:54:57.751 [INFO] [INFO] ####### async - newsql
2025-05-10 09:54:57.751 [INFO] [INFO] ####### async - newsql: SELECT name, type FROM test_users_002f8904_meta
2025-05-10 09:54:57.753 [INFO] [INFO] convert_query_to_native - Postgres override .. Good!
2025-05-10 09:54:57.753 [INFO] [INFO] ####### async - newsql
2025-05-10 09:54:57.753 [INFO] [INFO] ####### async - newsql: INSERT INTO test_users_002f8904_meta VALUES ($1, $2) ON CONFLICT(name) DO UPDATE SET type=EXCLUDED.type
2025-05-10 09:54:57.764 [INFO] [INFO] convert_query_to_native - Postgres override .. Good!
2025-05-10 09:54:57.764 [INFO] [INFO] ####### async - newsql
2025-05-10 09:54:57.764 [INFO] [INFO] ####### async - newsql: INSERT INTO test_users_002f8904 (name, id, created_at, updated_at, update_comment) VALUES ($1, $2, $3, $4, $5) ON CONFLICT(id) DO UPDATE SET name=EXCLUDED.name, created_at=EXCLUDED.created_at, updated_at=EXCLUDED.updated_at, update_comment=EXCLUDED.update_comment
2025-05-10 09:54:57.767 [INFO] [INFO] convert_query_to_native - Postgres override .. Good!
2025-05-10 09:54:57.767 [INFO] [INFO] ####### async - newsql
2025-05-10 09:54:57.767 [INFO] [INFO] ####### async - newsql: SELECT MAX(version) FROM test_users_002f8904_history WHERE id = $1
2025-05-10 09:54:57.770 [INFO] [INFO] convert_query_to_native - Postgres override .. Good!
2025-05-10 09:54:57.770 [INFO] [INFO] ####### async - newsql
2025-05-10 09:54:57.770 [INFO] [INFO] ####### async - newsql: INSERT INTO test_users_002f8904_history (name, id, created_at, updated_at, update_comment, version, history_timestamp, history_user_id, history_comment) VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9)
2025-05-10 09:54:57.781 [INFO] [INFO] convert_query_to_native - Postgres override .. Good!
2025-05-10 09:54:57.781 [INFO] [INFO] ####### async - newsql
2025-05-10 09:54:57.781 [INFO] [INFO] ####### async - newsql: SELECT column_name, data_type FROM information_schema.columns WHERE table_name = $1
2025-05-10 09:54:57.799 [INFO] [INFO] convert_query_to_native - Postgres override .. Good!
2025-05-10 09:54:57.799 [INFO] [INFO] ####### async - newsql
2025-05-10 09:54:57.799 [INFO] [INFO] ####### async - newsql: INSERT INTO test_users_002f8904 (id, name, department, created_at, updated_at, update_comment) VALUES ($1, $2, $3, $4, $5, $6) ON CONFLICT(id) DO UPDATE SET name=EXCLUDED.name, department=EXCLUDED.department, created_at=EXCLUDED.created_at, updated_at=EXCLUDED.updated_at, update_comment=EXCLUDED.update_comment
2025-05-10 09:54:57.801 [ERROR] [ERROR] Error while Postgres async driver tried to prepare this: INSERT INTO test_users_002f8904 (id, name, department, created_at, updated_at, update_comment) VALUES ($1, $2, $3, $4, $5, $6) ON CONFLICT(id) DO UPDATE SET name=EXCLUDED.name, department=EXCLUDED.department, created_at=EXCLUDED.created_at, updated_at=EXCLUDED.updated_at, update_comment=EXCLUDED.update_comment: column "department" of relation "test_users_002f8904" does not exist
2025-05-10 09:54:57.804 [INFO] [INFO] Pool status:
{"initialized": true, "alias": "testdb_postgres", "hash": "039aa5ab782c53fb1f9eb3596f4c49fe", "min_size": 3, "max_size": 20, "current_size": 20, "in_use": 0, "idle": 20, "active_connections": 1, "shutting_down": false, "metrics": {"total_acquired": 1, "total_released": 1, "current_active": 0, "peak_active": 1, "errors": 0, "timeouts": 0, "last_timeout": null, "avg_acquisition_time": 0.0}}
2025-05-10 09:54:58.580 [INFO] [INFO] Pool 039aa5ab782c53fb1f9eb3596f4c49fe marked as shutting down, no new connections allowed
2025-05-10 09:54:58.581 [ERROR] [ERROR] Error closing pool for 039aa5ab782c53fb1f9eb3596f4c49fe: Pool.close() got an unexpected keyword argument 'cancel_tasks'
2025-05-10 09:54:58.581 [INFO] [INFO] Tearing down test environment...
2025-05-10 10:02:32.719 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 10:02:32.719 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 10:03:42.966 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 10:03:42.966 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 10:11:29.494 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 10:11:29.494 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 10:13:48.288 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 10:13:48.289 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 10:13:57.986 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 10:13:57.986 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 10:13:58.014 [INFO] [INFO] Setting up test environment...
2025-05-10 10:13:58.014 [INFO] [INFO] Removing .\.pytest_cache
2025-05-10 10:13:58.053 [INFO] [INFO] Test files in this session: {'c:\\Users\\Phil\\Desktop\\Projects\\shared-libs\\python\\databases\\tests\\test_dal.py'}
2025-05-10 10:13:58.054 [INFO] [INFO] Found Docker Compose file for c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\test_dal.py: c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml
2025-05-10 10:13:58.063 [INFO] [INFO] Detected the following services in c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml:
2025-05-10 10:13:58.063 [INFO] [INFO]   - mysql: localhost:3307 (container port: 3306)
2025-05-10 10:13:58.063 [INFO] [INFO]   - postgres: localhost:5433 (container port: 5432)
2025-05-10 10:13:58.063 [INFO] [INFO] Running command: docker-compose -f c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml -p test-databases up -d
2025-05-10 10:13:58.446 [INFO] [INFO] Command error:  Container test-databases-mysql-1  Running
 Container test-databases-postgres-1  Running

2025-05-10 10:13:58.457 [INFO] [INFO] Thread 16636: Requesting sync connection for testdb_postgres
2025-05-10 10:13:58.481 [INFO] [INFO] Thread 16636: Sync connection created and cached for testdb_postgres in 0.02s
2025-05-10 10:13:58.666 [INFO] [INFO] testdb_postgres - 039aa5ab782c53fb1f9eb3596f4c49fe async pool initialized in 0.18s
2025-05-10 10:13:58.667 [INFO] [INFO] Pool status:
{"initialized": true, "alias": "testdb_postgres", "hash": "039aa5ab782c53fb1f9eb3596f4c49fe", "min_size": 3, "max_size": 20, "current_size": 20, "in_use": 1, "idle": 19, "active_connections": 0, "shutting_down": false, "metrics": {"total_acquired": 1, "total_released": 0, "current_active": 1, "peak_active": 1, "errors": 0, "timeouts": 0, "last_timeout": null, "avg_acquisition_time": 0.0}}
2025-05-10 10:13:58.668 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 10:13:58.668 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 10:13:58.687 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_name = ?
params: ('test_users_a4e40409',)
timeout: None
tags: None
result: []
2025-05-10 10:13:58.689 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_name = ?
params: ('test_users_a4e40409_meta',)
timeout: None
tags: None
result: []
2025-05-10 10:13:58.691 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_name = ?
params: ('test_users_a4e40409_history',)
timeout: None
tags: None
result: []
2025-05-10 10:13:58.709 [INFO] [INFO] AsyncConnection.execute:
SQL: 
            CREATE TABLE IF NOT EXISTS test_users_a4e40409 (
                name TEXT, id TEXT PRIMARY KEY, created_at TEXT, updated_at TEXT, update_comment TEXT, created_by TEXT, updated_by TEXT, d
params: ()
timeout: None
tags: None
result: []
2025-05-10 10:13:58.723 [INFO] [INFO] AsyncConnection.execute:
SQL: 
            CREATE TABLE IF NOT EXISTS test_users_a4e40409_meta (
                name TEXT PRIMARY KEY,
                type TEXT
            )
        
params: ()
timeout: None
tags: None
result: []
2025-05-10 10:13:58.734 [INFO] [INFO] AsyncConnection.execute:
SQL: 
            CREATE TABLE IF NOT EXISTS test_users_a4e40409_history (
                name TEXT, id TEXT, created_at TEXT, updated_at TEXT, update_comment TEXT, created_by TEXT, updated_by TEXT, delet
params: ()
timeout: None
tags: None
result: []
2025-05-10 10:13:58.738 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_name = ?
params: ('test_users_a4e40409_meta',)
timeout: None
tags: None
result: [('test_users_a4e40409_meta',)]
2025-05-10 10:13:58.740 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_name = ?
params: ('test_users_a4e40409_meta',)
timeout: None
tags: None
result: [('test_users_a4e40409_meta',)]
2025-05-10 10:13:58.742 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT name, type FROM test_users_a4e40409_meta
params: ()
timeout: None
tags: None
result: []
2025-05-10 10:13:58.742 [INFO] [INFO] We need to add a new field to test_users_a4e40409: name
2025-05-10 10:13:58.745 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_users_a4e40409_meta VALUES (?, ?) ON CONFLICT(name) DO UPDATE SET type=EXCLUDED.type
params: ('name', 'str')
timeout: None
tags: None
result: []
2025-05-10 10:13:58.745 [INFO] [INFO] We need to add a new field to test_users_a4e40409: id
2025-05-10 10:13:58.746 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_users_a4e40409_meta VALUES (?, ?) ON CONFLICT(name) DO UPDATE SET type=EXCLUDED.type
params: ('id', 'str')
timeout: None
tags: None
result: []
2025-05-10 10:13:58.746 [INFO] [INFO] We need to add a new field to test_users_a4e40409: created_at
2025-05-10 10:13:58.747 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_users_a4e40409_meta VALUES (?, ?) ON CONFLICT(name) DO UPDATE SET type=EXCLUDED.type
params: ('created_at', 'str')
timeout: None
tags: None
result: []
2025-05-10 10:13:58.747 [INFO] [INFO] We need to add a new field to test_users_a4e40409: updated_at
2025-05-10 10:13:58.748 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_users_a4e40409_meta VALUES (?, ?) ON CONFLICT(name) DO UPDATE SET type=EXCLUDED.type
params: ('updated_at', 'str')
timeout: None
tags: None
result: []
2025-05-10 10:13:58.748 [INFO] [INFO] We need to add a new field to test_users_a4e40409: update_comment
2025-05-10 10:13:58.749 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_users_a4e40409_meta VALUES (?, ?) ON CONFLICT(name) DO UPDATE SET type=EXCLUDED.type
params: ('update_comment', 'str')
timeout: None
tags: None
result: []
2025-05-10 10:13:58.751 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_name = ?
params: ('test_users_a4e40409_meta',)
timeout: None
tags: None
result: [('test_users_a4e40409_meta',)]
2025-05-10 10:13:58.752 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_name = ?
params: ('test_users_a4e40409_meta',)
timeout: None
tags: None
result: [('test_users_a4e40409_meta',)]
2025-05-10 10:13:58.753 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT name, type FROM test_users_a4e40409_meta
params: ()
timeout: None
tags: None
result: [('name', 'str'), ('id', 'str'), ('created_at', 'str'), ('updated_at', 'str'), ('update_comment', 'str')]
2025-05-10 10:13:58.756 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_users_a4e40409 (name, id, created_at, updated_at, update_comment) VALUES (?, ?, ?, ?, ?) ON CONFLICT(id) DO UPDATE SET name=EXCLUDED.name, created_at=EXCLUDED.created_at, updated_at=E
params: ('Charlie', 'e8e765b0-ccb5-4881-86b2-7ffcddb08a49', '2025-05-10T09:13:58.679960', '2025-05-10T09:13:58.679960', 'Initial creation')
timeout: None
tags: None
result: []
2025-05-10 10:13:58.761 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT MAX(version) FROM test_users_a4e40409_history WHERE id = ?
params: ('e8e765b0-ccb5-4881-86b2-7ffcddb08a49',)
timeout: None
tags: None
result: [(None,)]
2025-05-10 10:13:58.763 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_users_a4e40409_history (name, id, created_at, updated_at, update_comment, version, history_timestamp, history_user_id, history_comment) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)
params: ('Charlie', 'e8e765b0-ccb5-4881-86b2-7ffcddb08a49', '2025-05-10T09:13:58.679960', '2025-05-10T09:13:58.679960', 'Initial creation', 1, '2025-05-10T09:13:58.761625', None, 'Initial creation')
timeout: None
tags: None
result: []
2025-05-10 10:13:58.769 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_name = ?
params: ('test_users_a4e40409',)
timeout: None
tags: None
result: [('test_users_a4e40409',)]
2025-05-10 10:13:58.770 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_name = ?
params: ('test_users_a4e40409_meta',)
timeout: None
tags: None
result: [('test_users_a4e40409_meta',)]
2025-05-10 10:13:58.771 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_name = ?
params: ('test_users_a4e40409_history',)
timeout: None
tags: None
result: [('test_users_a4e40409_history',)]
2025-05-10 10:13:58.783 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT column_name, data_type FROM information_schema.columns WHERE table_name = ?
params: ('test_users_a4e40409',)
timeout: None
tags: None
result: [('name', 'text'), ('id', 'text'), ('created_at', 'text'), ('updated_at', 'text'), ('update_comment', 'text'), ('created_by', 'text'), ('updated_by', 'text'), ('deleted_at', 'text')]
2025-05-10 10:13:58.784 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_name = ?
params: ('test_users_a4e40409_meta',)
timeout: None
tags: None
result: [('test_users_a4e40409_meta',)]
2025-05-10 10:13:58.785 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_name = ?
params: ('test_users_a4e40409_meta',)
timeout: None
tags: None
result: [('test_users_a4e40409_meta',)]
2025-05-10 10:13:58.786 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT name, type FROM test_users_a4e40409_meta
params: ()
timeout: None
tags: None
result: [('name', 'str'), ('id', 'str'), ('created_at', 'str'), ('updated_at', 'str'), ('update_comment', 'str')]
2025-05-10 10:13:58.787 [INFO] [INFO] We need to add a new field to test_users_a4e40409: department
2025-05-10 10:13:58.788 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_users_a4e40409_meta VALUES (?, ?) ON CONFLICT(name) DO UPDATE SET type=EXCLUDED.type
params: ('department', 'str')
timeout: None
tags: None
result: []
2025-05-10 10:13:58.789 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_name = ?
params: ('test_users_a4e40409_meta',)
timeout: None
tags: None
result: [('test_users_a4e40409_meta',)]
2025-05-10 10:13:58.790 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_name = ?
params: ('test_users_a4e40409_meta',)
timeout: None
tags: None
result: [('test_users_a4e40409_meta',)]
2025-05-10 10:13:58.791 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT name, type FROM test_users_a4e40409_meta
params: ()
timeout: None
tags: None
result: [('name', 'str'), ('id', 'str'), ('created_at', 'str'), ('updated_at', 'str'), ('update_comment', 'str'), ('department', 'str')]
2025-05-10 10:13:58.793 [ERROR] [ERROR] Error while Postgres async driver tried to prepare this: INSERT INTO test_users_a4e40409 (id, name, department, created_at, updated_at, update_comment) VALUES ($1, $2, $3, $4, $5, $6) ON CONFLICT(id) DO UPDATE SET name=EXCLUDED.name, department=EXCLUDED.department, created_at=EXCLUDED.created_at, updated_at=EXCLUDED.updated_at, update_comment=EXCLUDED.update_comment: column "department" of relation "test_users_a4e40409" does not exist
2025-05-10 10:13:58.799 [INFO] [INFO] Pool status:
{"initialized": true, "alias": "testdb_postgres", "hash": "039aa5ab782c53fb1f9eb3596f4c49fe", "min_size": 3, "max_size": 20, "current_size": 20, "in_use": 0, "idle": 20, "active_connections": 1, "shutting_down": false, "metrics": {"total_acquired": 1, "total_released": 1, "current_active": 0, "peak_active": 1, "errors": 0, "timeouts": 0, "last_timeout": null, "avg_acquisition_time": 0.0}}
2025-05-10 10:13:59.572 [INFO] [INFO] Pool 039aa5ab782c53fb1f9eb3596f4c49fe marked as shutting down, no new connections allowed
2025-05-10 10:13:59.572 [ERROR] [ERROR] Error closing pool for 039aa5ab782c53fb1f9eb3596f4c49fe: Pool.close() got an unexpected keyword argument 'cancel_tasks'
2025-05-10 10:13:59.572 [INFO] [INFO] Tearing down test environment...
2025-05-10 10:15:23.024 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 10:15:23.024 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 10:15:27.424 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 10:15:27.424 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 10:15:27.448 [INFO] [INFO] Setting up test environment...
2025-05-10 10:15:27.448 [INFO] [INFO] Removing .\.pytest_cache
2025-05-10 10:15:27.481 [INFO] [INFO] Test files in this session: {'c:\\Users\\Phil\\Desktop\\Projects\\shared-libs\\python\\databases\\tests\\test_dal.py'}
2025-05-10 10:15:27.482 [INFO] [INFO] Found Docker Compose file for c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\test_dal.py: c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml
2025-05-10 10:15:27.489 [INFO] [INFO] Detected the following services in c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml:
2025-05-10 10:15:27.489 [INFO] [INFO]   - mysql: localhost:3307 (container port: 3306)
2025-05-10 10:15:27.489 [INFO] [INFO]   - postgres: localhost:5433 (container port: 5432)
2025-05-10 10:15:27.489 [INFO] [INFO] Running command: docker-compose -f c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml -p test-databases up -d
2025-05-10 10:15:27.815 [INFO] [INFO] Command error:  Container test-databases-postgres-1  Running
 Container test-databases-mysql-1  Running

2025-05-10 10:15:27.827 [INFO] [INFO] Thread 9848: Requesting sync connection for testdb_postgres
2025-05-10 10:15:27.848 [INFO] [INFO] Thread 9848: Sync connection created and cached for testdb_postgres in 0.02s
2025-05-10 10:15:28.026 [INFO] [INFO] testdb_postgres - 039aa5ab782c53fb1f9eb3596f4c49fe async pool initialized in 0.17s
2025-05-10 10:15:28.028 [INFO] [INFO] Pool status:
{"initialized": true, "alias": "testdb_postgres", "hash": "039aa5ab782c53fb1f9eb3596f4c49fe", "min_size": 3, "max_size": 20, "current_size": 20, "in_use": 1, "idle": 19, "active_connections": 0, "shutting_down": false, "metrics": {"total_acquired": 1, "total_released": 0, "current_active": 1, "peak_active": 1, "errors": 0, "timeouts": 0, "last_timeout": null, "avg_acquisition_time": 0.0}}
2025-05-10 10:15:28.028 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 10:15:28.028 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 10:15:28.042 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_name = ?
params: ('test_users_fc48b3f4',)
timeout: None
tags: None
result: []
2025-05-10 10:15:28.045 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_name = ?
params: ('test_users_fc48b3f4_meta',)
timeout: None
tags: None
result: []
2025-05-10 10:15:28.047 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_name = ?
params: ('test_users_fc48b3f4_history',)
timeout: None
tags: None
result: []
2025-05-10 10:15:28.064 [INFO] [INFO] AsyncConnection.execute:
SQL: 
            CREATE TABLE IF NOT EXISTS test_users_fc48b3f4 (
                name TEXT, id TEXT PRIMARY KEY, created_at TEXT, updated_at TEXT, update_comment TEXT, created_by TEXT, updated_by TEXT, d
params: ()
timeout: None
tags: None
result: []
2025-05-10 10:15:28.075 [INFO] [INFO] AsyncConnection.execute:
SQL: 
            CREATE TABLE IF NOT EXISTS test_users_fc48b3f4_meta (
                name TEXT PRIMARY KEY,
                type TEXT
            )
        
params: ()
timeout: None
tags: None
result: []
2025-05-10 10:15:28.091 [INFO] [INFO] AsyncConnection.execute:
SQL: 
            CREATE TABLE IF NOT EXISTS test_users_fc48b3f4_history (
                name TEXT, id TEXT, created_at TEXT, updated_at TEXT, update_comment TEXT, created_by TEXT, updated_by TEXT, delet
params: ()
timeout: None
tags: None
result: []
2025-05-10 10:15:28.093 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_name = ?
params: ('test_users_fc48b3f4_meta',)
timeout: None
tags: None
result: [('test_users_fc48b3f4_meta',)]
2025-05-10 10:15:28.094 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_name = ?
params: ('test_users_fc48b3f4_meta',)
timeout: None
tags: None
result: [('test_users_fc48b3f4_meta',)]
2025-05-10 10:15:28.096 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT name, type FROM test_users_fc48b3f4_meta
params: ()
timeout: None
tags: None
result: []
2025-05-10 10:15:28.096 [INFO] [INFO] We need to add a new field to test_users_fc48b3f4: name
2025-05-10 10:15:28.099 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_users_fc48b3f4_meta VALUES (?, ?) ON CONFLICT(name) DO UPDATE SET type=EXCLUDED.type
params: ('name', 'str')
timeout: None
tags: None
result: []
2025-05-10 10:15:28.099 [INFO] [INFO] We need to add a new field to test_users_fc48b3f4: id
2025-05-10 10:15:28.100 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_users_fc48b3f4_meta VALUES (?, ?) ON CONFLICT(name) DO UPDATE SET type=EXCLUDED.type
params: ('id', 'str')
timeout: None
tags: None
result: []
2025-05-10 10:15:28.100 [INFO] [INFO] We need to add a new field to test_users_fc48b3f4: created_at
2025-05-10 10:15:28.102 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_users_fc48b3f4_meta VALUES (?, ?) ON CONFLICT(name) DO UPDATE SET type=EXCLUDED.type
params: ('created_at', 'str')
timeout: None
tags: None
result: []
2025-05-10 10:15:28.102 [INFO] [INFO] We need to add a new field to test_users_fc48b3f4: updated_at
2025-05-10 10:15:28.104 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_users_fc48b3f4_meta VALUES (?, ?) ON CONFLICT(name) DO UPDATE SET type=EXCLUDED.type
params: ('updated_at', 'str')
timeout: None
tags: None
result: []
2025-05-10 10:15:28.104 [INFO] [INFO] We need to add a new field to test_users_fc48b3f4: update_comment
2025-05-10 10:15:28.106 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_users_fc48b3f4_meta VALUES (?, ?) ON CONFLICT(name) DO UPDATE SET type=EXCLUDED.type
params: ('update_comment', 'str')
timeout: None
tags: None
result: []
2025-05-10 10:15:28.107 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_name = ?
params: ('test_users_fc48b3f4_meta',)
timeout: None
tags: None
result: [('test_users_fc48b3f4_meta',)]
2025-05-10 10:15:28.109 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_name = ?
params: ('test_users_fc48b3f4_meta',)
timeout: None
tags: None
result: [('test_users_fc48b3f4_meta',)]
2025-05-10 10:15:28.110 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT name, type FROM test_users_fc48b3f4_meta
params: ()
timeout: None
tags: None
result: [('name', 'str'), ('id', 'str'), ('created_at', 'str'), ('updated_at', 'str'), ('update_comment', 'str')]
2025-05-10 10:15:28.112 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_users_fc48b3f4 (name, id, created_at, updated_at, update_comment) VALUES (?, ?, ?, ?, ?) ON CONFLICT(id) DO UPDATE SET name=EXCLUDED.name, created_at=EXCLUDED.created_at, updated_at=E
params: ('Charlie', 'ae379382-5dba-44c2-a611-fe32920a1e51', '2025-05-10T09:15:28.035738', '2025-05-10T09:15:28.035738', 'Initial creation')
timeout: None
tags: None
result: []
2025-05-10 10:15:28.115 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT MAX(version) FROM test_users_fc48b3f4_history WHERE id = ?
params: ('ae379382-5dba-44c2-a611-fe32920a1e51',)
timeout: None
tags: None
result: [(None,)]
2025-05-10 10:15:28.118 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_users_fc48b3f4_history (name, id, created_at, updated_at, update_comment, version, history_timestamp, history_user_id, history_comment) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)
params: ('Charlie', 'ae379382-5dba-44c2-a611-fe32920a1e51', '2025-05-10T09:15:28.035738', '2025-05-10T09:15:28.035738', 'Initial creation', 1, '2025-05-10T09:15:28.115488', None, 'Initial creation')
timeout: None
tags: None
result: []
2025-05-10 10:15:28.126 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_name = ?
params: ('test_users_fc48b3f4',)
timeout: None
tags: None
result: [('test_users_fc48b3f4',)]
2025-05-10 10:15:28.128 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_name = ?
params: ('test_users_fc48b3f4_meta',)
timeout: None
tags: None
result: [('test_users_fc48b3f4_meta',)]
2025-05-10 10:15:28.130 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_name = ?
params: ('test_users_fc48b3f4_history',)
timeout: None
tags: None
result: [('test_users_fc48b3f4_history',)]
2025-05-10 10:15:28.140 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT column_name, data_type FROM information_schema.columns WHERE table_name = ?
params: ('test_users_fc48b3f4',)
timeout: None
tags: None
result: [('name', 'text'), ('id', 'text'), ('created_at', 'text'), ('updated_at', 'text'), ('update_comment', 'text'), ('created_by', 'text'), ('updated_by', 'text'), ('deleted_at', 'text')]
2025-05-10 10:15:28.142 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_name = ?
params: ('test_users_fc48b3f4_meta',)
timeout: None
tags: None
result: [('test_users_fc48b3f4_meta',)]
2025-05-10 10:15:28.144 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_name = ?
params: ('test_users_fc48b3f4_meta',)
timeout: None
tags: None
result: [('test_users_fc48b3f4_meta',)]
2025-05-10 10:15:28.146 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT name, type FROM test_users_fc48b3f4_meta
params: ()
timeout: None
tags: None
result: [('name', 'str'), ('id', 'str'), ('created_at', 'str'), ('updated_at', 'str'), ('update_comment', 'str')]
2025-05-10 10:15:28.146 [INFO] [INFO] We need to add a new field to test_users_fc48b3f4: department
2025-05-10 10:15:28.148 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_users_fc48b3f4_meta VALUES (?, ?) ON CONFLICT(name) DO UPDATE SET type=EXCLUDED.type
params: ('department', 'str')
timeout: None
tags: None
result: []
2025-05-10 10:15:28.149 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_name = ?
params: ('test_users_fc48b3f4_meta',)
timeout: None
tags: None
result: [('test_users_fc48b3f4_meta',)]
2025-05-10 10:15:28.150 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_name = ?
params: ('test_users_fc48b3f4_meta',)
timeout: None
tags: None
result: [('test_users_fc48b3f4_meta',)]
2025-05-10 10:15:28.151 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT name, type FROM test_users_fc48b3f4_meta
params: ()
timeout: None
tags: None
result: [('name', 'str'), ('id', 'str'), ('created_at', 'str'), ('updated_at', 'str'), ('update_comment', 'str'), ('department', 'str')]
2025-05-10 10:15:28.153 [ERROR] [ERROR] Error while Postgres async driver tried to prepare this: INSERT INTO test_users_fc48b3f4 (id, name, department, created_at, updated_at, update_comment) VALUES ($1, $2, $3, $4, $5, $6) ON CONFLICT(id) DO UPDATE SET name=EXCLUDED.name, department=EXCLUDED.department, created_at=EXCLUDED.created_at, updated_at=EXCLUDED.updated_at, update_comment=EXCLUDED.update_comment: column "department" of relation "test_users_fc48b3f4" does not exist
2025-05-10 10:15:28.156 [INFO] [INFO] Pool status:
{"initialized": true, "alias": "testdb_postgres", "hash": "039aa5ab782c53fb1f9eb3596f4c49fe", "min_size": 3, "max_size": 20, "current_size": 20, "in_use": 0, "idle": 20, "active_connections": 1, "shutting_down": false, "metrics": {"total_acquired": 1, "total_released": 1, "current_active": 0, "peak_active": 1, "errors": 0, "timeouts": 0, "last_timeout": null, "avg_acquisition_time": 0.0}}
2025-05-10 10:15:28.900 [INFO] [INFO] Pool 039aa5ab782c53fb1f9eb3596f4c49fe marked as shutting down, no new connections allowed
2025-05-10 10:15:28.900 [ERROR] [ERROR] Error closing pool for 039aa5ab782c53fb1f9eb3596f4c49fe: Pool.close() got an unexpected keyword argument 'cancel_tasks'
2025-05-10 10:15:28.900 [INFO] [INFO] Tearing down test environment...
2025-05-10 10:15:49.804 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 10:15:49.804 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 10:15:51.656 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 10:15:51.656 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 10:15:51.688 [INFO] [INFO] Setting up test environment...
2025-05-10 10:15:51.689 [INFO] [INFO] Removing .\.pytest_cache
2025-05-10 10:15:51.733 [INFO] [INFO] Test files in this session: {'c:\\Users\\Phil\\Desktop\\Projects\\shared-libs\\python\\databases\\tests\\test_dal.py'}
2025-05-10 10:15:51.734 [INFO] [INFO] Found Docker Compose file for c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\test_dal.py: c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml
2025-05-10 10:15:51.744 [INFO] [INFO] Detected the following services in c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml:
2025-05-10 10:15:51.745 [INFO] [INFO]   - mysql: localhost:3307 (container port: 3306)
2025-05-10 10:15:51.745 [INFO] [INFO]   - postgres: localhost:5433 (container port: 5432)
2025-05-10 10:15:51.745 [INFO] [INFO] Running command: docker-compose -f c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml -p test-databases up -d
2025-05-10 10:15:52.185 [INFO] [INFO] Command error:  Container test-databases-mysql-1  Running
 Container test-databases-postgres-1  Running

2025-05-10 10:15:52.194 [INFO] [INFO] Thread 6328: Requesting sync connection for testdb_postgres
2025-05-10 10:15:52.223 [INFO] [INFO] Thread 6328: Sync connection created and cached for testdb_postgres in 0.03s
2025-05-10 10:15:52.398 [INFO] [INFO] testdb_postgres - 039aa5ab782c53fb1f9eb3596f4c49fe async pool initialized in 0.17s
2025-05-10 10:15:52.399 [INFO] [INFO] Pool status:
{"initialized": true, "alias": "testdb_postgres", "hash": "039aa5ab782c53fb1f9eb3596f4c49fe", "min_size": 3, "max_size": 20, "current_size": 20, "in_use": 1, "idle": 19, "active_connections": 0, "shutting_down": false, "metrics": {"total_acquired": 1, "total_released": 0, "current_active": 1, "peak_active": 1, "errors": 0, "timeouts": 0, "last_timeout": null, "avg_acquisition_time": 0.0}}
2025-05-10 10:15:52.400 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 10:15:52.400 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 10:15:52.415 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_name = ?
params: ('test_users_3590f022',)
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:15:52.417 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_name = ?
params: ('test_users_3590f022_meta',)
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:15:52.418 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_name = ?
params: ('test_users_3590f022_history',)
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:15:52.437 [INFO] [INFO] AsyncConnection.execute:
SQL: 
            CREATE TABLE IF NOT EXISTS test_users_3590f022 (
                name TEXT, id TEXT PRIMARY KEY, created_at TEXT, updated_at TEXT, update_comment TEXT, created_by TEXT, updated_by TEXT, d
params: ()
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:15:52.450 [INFO] [INFO] AsyncConnection.execute:
SQL: 
            CREATE TABLE IF NOT EXISTS test_users_3590f022_meta (
                name TEXT PRIMARY KEY,
                type TEXT
            )
        
params: ()
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:15:52.468 [INFO] [INFO] AsyncConnection.execute:
SQL: 
            CREATE TABLE IF NOT EXISTS test_users_3590f022_history (
                name TEXT, id TEXT, created_at TEXT, updated_at TEXT, update_comment TEXT, created_by TEXT, updated_by TEXT, delet
params: ()
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:15:52.471 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_name = ?
params: ('test_users_3590f022_meta',)
timeout: None
tags: None
result: [('test_users_3590f022_meta',)]
----------------------
2025-05-10 10:15:52.473 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_name = ?
params: ('test_users_3590f022_meta',)
timeout: None
tags: None
result: [('test_users_3590f022_meta',)]
----------------------
2025-05-10 10:15:52.476 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT name, type FROM test_users_3590f022_meta
params: ()
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:15:52.477 [INFO] [INFO] We need to add a new field to test_users_3590f022: name
2025-05-10 10:15:52.482 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_users_3590f022_meta VALUES (?, ?) ON CONFLICT(name) DO UPDATE SET type=EXCLUDED.type
params: ('name', 'str')
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:15:52.483 [INFO] [INFO] We need to add a new field to test_users_3590f022: id
2025-05-10 10:15:52.484 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_users_3590f022_meta VALUES (?, ?) ON CONFLICT(name) DO UPDATE SET type=EXCLUDED.type
params: ('id', 'str')
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:15:52.485 [INFO] [INFO] We need to add a new field to test_users_3590f022: created_at
2025-05-10 10:15:52.486 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_users_3590f022_meta VALUES (?, ?) ON CONFLICT(name) DO UPDATE SET type=EXCLUDED.type
params: ('created_at', 'str')
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:15:52.486 [INFO] [INFO] We need to add a new field to test_users_3590f022: updated_at
2025-05-10 10:15:52.487 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_users_3590f022_meta VALUES (?, ?) ON CONFLICT(name) DO UPDATE SET type=EXCLUDED.type
params: ('updated_at', 'str')
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:15:52.488 [INFO] [INFO] We need to add a new field to test_users_3590f022: update_comment
2025-05-10 10:15:52.489 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_users_3590f022_meta VALUES (?, ?) ON CONFLICT(name) DO UPDATE SET type=EXCLUDED.type
params: ('update_comment', 'str')
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:15:52.491 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_name = ?
params: ('test_users_3590f022_meta',)
timeout: None
tags: None
result: [('test_users_3590f022_meta',)]
----------------------
2025-05-10 10:15:52.492 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_name = ?
params: ('test_users_3590f022_meta',)
timeout: None
tags: None
result: [('test_users_3590f022_meta',)]
----------------------
2025-05-10 10:15:52.494 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT name, type FROM test_users_3590f022_meta
params: ()
timeout: None
tags: None
result: [('name', 'str'), ('id', 'str'), ('created_at', 'str'), ('updated_at', 'str'), ('update_comment', 'str')]
----------------------
2025-05-10 10:15:52.498 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_users_3590f022 (name, id, created_at, updated_at, update_comment) VALUES (?, ?, ?, ?, ?) ON CONFLICT(id) DO UPDATE SET name=EXCLUDED.name, created_at=EXCLUDED.created_at, updated_at=E
params: ('Charlie', 'd295495e-8783-4303-bc19-47551d6e2c20', '2025-05-10T09:15:52.409629', '2025-05-10T09:15:52.409629', 'Initial creation')
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:15:52.504 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT MAX(version) FROM test_users_3590f022_history WHERE id = ?
params: ('d295495e-8783-4303-bc19-47551d6e2c20',)
timeout: None
tags: None
result: [(None,)]
----------------------
2025-05-10 10:15:52.509 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_users_3590f022_history (name, id, created_at, updated_at, update_comment, version, history_timestamp, history_user_id, history_comment) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)
params: ('Charlie', 'd295495e-8783-4303-bc19-47551d6e2c20', '2025-05-10T09:15:52.409629', '2025-05-10T09:15:52.409629', 'Initial creation', 1, '2025-05-10T09:15:52.504659', None, 'Initial creation')
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:15:52.515 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_name = ?
params: ('test_users_3590f022',)
timeout: None
tags: None
result: [('test_users_3590f022',)]
----------------------
2025-05-10 10:15:52.516 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_name = ?
params: ('test_users_3590f022_meta',)
timeout: None
tags: None
result: [('test_users_3590f022_meta',)]
----------------------
2025-05-10 10:15:52.518 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_name = ?
params: ('test_users_3590f022_history',)
timeout: None
tags: None
result: [('test_users_3590f022_history',)]
----------------------
2025-05-10 10:15:52.529 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT column_name, data_type FROM information_schema.columns WHERE table_name = ?
params: ('test_users_3590f022',)
timeout: None
tags: None
result: [('name', 'text'), ('id', 'text'), ('created_at', 'text'), ('updated_at', 'text'), ('update_comment', 'text'), ('created_by', 'text'), ('updated_by', 'text'), ('deleted_at', 'text')]
----------------------
2025-05-10 10:15:52.531 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_name = ?
params: ('test_users_3590f022_meta',)
timeout: None
tags: None
result: [('test_users_3590f022_meta',)]
----------------------
2025-05-10 10:15:52.532 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_name = ?
params: ('test_users_3590f022_meta',)
timeout: None
tags: None
result: [('test_users_3590f022_meta',)]
----------------------
2025-05-10 10:15:52.533 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT name, type FROM test_users_3590f022_meta
params: ()
timeout: None
tags: None
result: [('name', 'str'), ('id', 'str'), ('created_at', 'str'), ('updated_at', 'str'), ('update_comment', 'str')]
----------------------
2025-05-10 10:15:52.533 [INFO] [INFO] We need to add a new field to test_users_3590f022: department
2025-05-10 10:15:52.534 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_users_3590f022_meta VALUES (?, ?) ON CONFLICT(name) DO UPDATE SET type=EXCLUDED.type
params: ('department', 'str')
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:15:52.536 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_name = ?
params: ('test_users_3590f022_meta',)
timeout: None
tags: None
result: [('test_users_3590f022_meta',)]
----------------------
2025-05-10 10:15:52.537 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_name = ?
params: ('test_users_3590f022_meta',)
timeout: None
tags: None
result: [('test_users_3590f022_meta',)]
----------------------
2025-05-10 10:15:52.538 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT name, type FROM test_users_3590f022_meta
params: ()
timeout: None
tags: None
result: [('name', 'str'), ('id', 'str'), ('created_at', 'str'), ('updated_at', 'str'), ('update_comment', 'str'), ('department', 'str')]
----------------------
2025-05-10 10:15:52.543 [ERROR] [ERROR] Error while Postgres async driver tried to prepare this: INSERT INTO test_users_3590f022 (id, name, department, created_at, updated_at, update_comment) VALUES ($1, $2, $3, $4, $5, $6) ON CONFLICT(id) DO UPDATE SET name=EXCLUDED.name, department=EXCLUDED.department, created_at=EXCLUDED.created_at, updated_at=EXCLUDED.updated_at, update_comment=EXCLUDED.update_comment: column "department" of relation "test_users_3590f022" does not exist
2025-05-10 10:15:52.548 [INFO] [INFO] Pool status:
{"initialized": true, "alias": "testdb_postgres", "hash": "039aa5ab782c53fb1f9eb3596f4c49fe", "min_size": 3, "max_size": 20, "current_size": 20, "in_use": 0, "idle": 20, "active_connections": 1, "shutting_down": false, "metrics": {"total_acquired": 1, "total_released": 1, "current_active": 0, "peak_active": 1, "errors": 0, "timeouts": 0, "last_timeout": null, "avg_acquisition_time": 0.0}}
2025-05-10 10:15:53.411 [INFO] [INFO] Pool 039aa5ab782c53fb1f9eb3596f4c49fe marked as shutting down, no new connections allowed
2025-05-10 10:15:53.411 [ERROR] [ERROR] Error closing pool for 039aa5ab782c53fb1f9eb3596f4c49fe: Pool.close() got an unexpected keyword argument 'cancel_tasks'
2025-05-10 10:15:53.412 [INFO] [INFO] Tearing down test environment...
2025-05-10 10:20:51.277 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 10:20:51.277 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 10:21:32.686 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 10:21:32.686 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 10:21:40.961 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 10:21:40.961 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 10:21:40.986 [INFO] [INFO] Setting up test environment...
2025-05-10 10:21:40.987 [INFO] [INFO] Removing .\.pytest_cache
2025-05-10 10:21:41.019 [INFO] [INFO] Test files in this session: {'c:\\Users\\Phil\\Desktop\\Projects\\shared-libs\\python\\databases\\tests\\test_dal.py'}
2025-05-10 10:21:41.020 [INFO] [INFO] Found Docker Compose file for c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\test_dal.py: c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml
2025-05-10 10:21:41.025 [INFO] [INFO] Detected the following services in c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml:
2025-05-10 10:21:41.025 [INFO] [INFO]   - mysql: localhost:3307 (container port: 3306)
2025-05-10 10:21:41.025 [INFO] [INFO]   - postgres: localhost:5433 (container port: 5432)
2025-05-10 10:21:41.025 [INFO] [INFO] Running command: docker-compose -f c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml -p test-databases up -d
2025-05-10 10:21:41.346 [INFO] [INFO] Command error:  Container test-databases-mysql-1  Running
 Container test-databases-postgres-1  Running

2025-05-10 10:21:41.355 [INFO] [INFO] Thread 12132: Requesting sync connection for testdb_postgres
2025-05-10 10:21:41.381 [INFO] [INFO] Thread 12132: Sync connection created and cached for testdb_postgres in 0.03s
2025-05-10 10:21:41.546 [INFO] [INFO] testdb_postgres - 039aa5ab782c53fb1f9eb3596f4c49fe async pool initialized in 0.16s
2025-05-10 10:21:41.548 [INFO] [INFO] Pool status:
{"initialized": true, "alias": "testdb_postgres", "hash": "039aa5ab782c53fb1f9eb3596f4c49fe", "min_size": 3, "max_size": 20, "current_size": 20, "in_use": 1, "idle": 19, "active_connections": 0, "shutting_down": false, "metrics": {"total_acquired": 1, "total_released": 0, "current_active": 1, "peak_active": 1, "errors": 0, "timeouts": 0, "last_timeout": null, "avg_acquisition_time": 0.0}}
2025-05-10 10:21:41.548 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 10:21:41.548 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 10:21:41.564 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_name = ?
params: ('test_users_9723966d',)
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:21:41.566 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_name = ?
params: ('test_users_9723966d_meta',)
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:21:41.568 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_name = ?
params: ('test_users_9723966d_history',)
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:21:41.584 [INFO] [INFO] AsyncConnection.execute:
SQL: 
            CREATE TABLE IF NOT EXISTS test_users_9723966d (
                name TEXT, id TEXT PRIMARY KEY, created_at TEXT, updated_at TEXT, update_comment TEXT, created_by TEXT, updated_by TEXT, d
params: ()
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:21:41.594 [INFO] [INFO] AsyncConnection.execute:
SQL: 
            CREATE TABLE IF NOT EXISTS test_users_9723966d_meta (
                name TEXT PRIMARY KEY,
                type TEXT
            )
        
params: ()
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:21:41.606 [INFO] [INFO] AsyncConnection.execute:
SQL: 
            CREATE TABLE IF NOT EXISTS test_users_9723966d_history (
                name TEXT, id TEXT, created_at TEXT, updated_at TEXT, update_comment TEXT, created_by TEXT, updated_by TEXT, delet
params: ()
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:21:41.609 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_name = ?
params: ('test_users_9723966d_meta',)
timeout: None
tags: None
result: [('test_users_9723966d_meta',)]
----------------------
2025-05-10 10:21:41.610 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_name = ?
params: ('test_users_9723966d_meta',)
timeout: None
tags: None
result: [('test_users_9723966d_meta',)]
----------------------
2025-05-10 10:21:41.612 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT name, type FROM test_users_9723966d_meta
params: ()
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:21:41.613 [INFO] [INFO] We need to add a new field to test_users_9723966d: name
2025-05-10 10:21:41.615 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_users_9723966d_meta VALUES (?, ?) ON CONFLICT(name) DO UPDATE SET type=EXCLUDED.type
params: ('name', 'str')
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:21:41.618 [INFO] [INFO] AsyncConnection.execute:
SQL: ALTER TABLE test_users_9723966d ADD COLUMN IF NOT EXISTS name TEXT
params: ()
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:21:41.618 [INFO] [INFO] We need to add a new field to test_users_9723966d: id
2025-05-10 10:21:41.620 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_users_9723966d_meta VALUES (?, ?) ON CONFLICT(name) DO UPDATE SET type=EXCLUDED.type
params: ('id', 'str')
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:21:41.622 [INFO] [INFO] AsyncConnection.execute:
SQL: ALTER TABLE test_users_9723966d ADD COLUMN IF NOT EXISTS id TEXT
params: ()
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:21:41.622 [INFO] [INFO] We need to add a new field to test_users_9723966d: created_at
2025-05-10 10:21:41.623 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_users_9723966d_meta VALUES (?, ?) ON CONFLICT(name) DO UPDATE SET type=EXCLUDED.type
params: ('created_at', 'str')
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:21:41.625 [INFO] [INFO] AsyncConnection.execute:
SQL: ALTER TABLE test_users_9723966d ADD COLUMN IF NOT EXISTS created_at TEXT
params: ()
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:21:41.625 [INFO] [INFO] We need to add a new field to test_users_9723966d: updated_at
2025-05-10 10:21:41.626 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_users_9723966d_meta VALUES (?, ?) ON CONFLICT(name) DO UPDATE SET type=EXCLUDED.type
params: ('updated_at', 'str')
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:21:41.628 [INFO] [INFO] AsyncConnection.execute:
SQL: ALTER TABLE test_users_9723966d ADD COLUMN IF NOT EXISTS updated_at TEXT
params: ()
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:21:41.628 [INFO] [INFO] We need to add a new field to test_users_9723966d: update_comment
2025-05-10 10:21:41.629 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_users_9723966d_meta VALUES (?, ?) ON CONFLICT(name) DO UPDATE SET type=EXCLUDED.type
params: ('update_comment', 'str')
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:21:41.631 [INFO] [INFO] AsyncConnection.execute:
SQL: ALTER TABLE test_users_9723966d ADD COLUMN IF NOT EXISTS update_comment TEXT
params: ()
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:21:41.633 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_name = ?
params: ('test_users_9723966d_meta',)
timeout: None
tags: None
result: [('test_users_9723966d_meta',)]
----------------------
2025-05-10 10:21:41.634 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_name = ?
params: ('test_users_9723966d_meta',)
timeout: None
tags: None
result: [('test_users_9723966d_meta',)]
----------------------
2025-05-10 10:21:41.635 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT name, type FROM test_users_9723966d_meta
params: ()
timeout: None
tags: None
result: [('name', 'str'), ('id', 'str'), ('created_at', 'str'), ('updated_at', 'str'), ('update_comment', 'str')]
----------------------
2025-05-10 10:21:41.639 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_users_9723966d (name, id, created_at, updated_at, update_comment) VALUES (?, ?, ?, ?, ?) ON CONFLICT(id) DO UPDATE SET name=EXCLUDED.name, created_at=EXCLUDED.created_at, updated_at=E
params: ('Charlie', '4f6d4171-6b98-4619-b384-d1967300408b', '2025-05-10T09:21:41.557830', '2025-05-10T09:21:41.557830', 'Initial creation')
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:21:41.643 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT MAX(version) FROM test_users_9723966d_history WHERE id = ?
params: ('4f6d4171-6b98-4619-b384-d1967300408b',)
timeout: None
tags: None
result: [(None,)]
----------------------
2025-05-10 10:21:41.645 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_users_9723966d_history (name, id, created_at, updated_at, update_comment, version, history_timestamp, history_user_id, history_comment) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)
params: ('Charlie', '4f6d4171-6b98-4619-b384-d1967300408b', '2025-05-10T09:21:41.557830', '2025-05-10T09:21:41.557830', 'Initial creation', 1, '2025-05-10T09:21:41.643250', None, 'Initial creation')
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:21:41.650 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_name = ?
params: ('test_users_9723966d',)
timeout: None
tags: None
result: [('test_users_9723966d',)]
----------------------
2025-05-10 10:21:41.651 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_name = ?
params: ('test_users_9723966d_meta',)
timeout: None
tags: None
result: [('test_users_9723966d_meta',)]
----------------------
2025-05-10 10:21:41.652 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_name = ?
params: ('test_users_9723966d_history',)
timeout: None
tags: None
result: [('test_users_9723966d_history',)]
----------------------
2025-05-10 10:21:41.663 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT column_name, data_type FROM information_schema.columns WHERE table_name = ?
params: ('test_users_9723966d',)
timeout: None
tags: None
result: [('name', 'text'), ('id', 'text'), ('created_at', 'text'), ('updated_at', 'text'), ('update_comment', 'text'), ('created_by', 'text'), ('updated_by', 'text'), ('deleted_at', 'text')]
----------------------
2025-05-10 10:21:41.665 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_name = ?
params: ('test_users_9723966d_meta',)
timeout: None
tags: None
result: [('test_users_9723966d_meta',)]
----------------------
2025-05-10 10:21:41.666 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_name = ?
params: ('test_users_9723966d_meta',)
timeout: None
tags: None
result: [('test_users_9723966d_meta',)]
----------------------
2025-05-10 10:21:41.667 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT name, type FROM test_users_9723966d_meta
params: ()
timeout: None
tags: None
result: [('name', 'str'), ('id', 'str'), ('created_at', 'str'), ('updated_at', 'str'), ('update_comment', 'str')]
----------------------
2025-05-10 10:21:41.667 [INFO] [INFO] We need to add a new field to test_users_9723966d: department
2025-05-10 10:21:41.668 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_users_9723966d_meta VALUES (?, ?) ON CONFLICT(name) DO UPDATE SET type=EXCLUDED.type
params: ('department', 'str')
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:21:41.671 [INFO] [INFO] AsyncConnection.execute:
SQL: ALTER TABLE test_users_9723966d ADD COLUMN IF NOT EXISTS department TEXT
params: ()
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:21:41.672 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_name = ?
params: ('test_users_9723966d_meta',)
timeout: None
tags: None
result: [('test_users_9723966d_meta',)]
----------------------
2025-05-10 10:21:41.672 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_name = ?
params: ('test_users_9723966d_meta',)
timeout: None
tags: None
result: [('test_users_9723966d_meta',)]
----------------------
2025-05-10 10:21:41.674 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT name, type FROM test_users_9723966d_meta
params: ()
timeout: None
tags: None
result: [('name', 'str'), ('id', 'str'), ('created_at', 'str'), ('updated_at', 'str'), ('update_comment', 'str'), ('department', 'str')]
----------------------
2025-05-10 10:21:41.676 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_users_9723966d (id, name, department, created_at, updated_at, update_comment) VALUES (?, ?, ?, ?, ?, ?) ON CONFLICT(id) DO UPDATE SET name=EXCLUDED.name, department=EXCLUDED.departmen
params: ('4f6d4171-6b98-4619-b384-d1967300408b', 'Charlie', 'Engineering', '2025-05-10T09:21:41.649648', '2025-05-10T09:21:41.649648', 'Added department')
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:21:41.679 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT MAX(version) FROM test_users_9723966d_history WHERE id = ?
params: ('4f6d4171-6b98-4619-b384-d1967300408b',)
timeout: None
tags: None
result: [(1,)]
----------------------
2025-05-10 10:21:41.681 [ERROR] [ERROR] Error while Postgres async driver tried to prepare this: INSERT INTO test_users_9723966d_history (id, name, department, created_at, updated_at, update_comment, version, history_timestamp, history_user_id, history_comment) VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10): column "department" of relation "test_users_9723966d_history" does not exist
2025-05-10 10:21:41.685 [INFO] [INFO] Pool status:
{"initialized": true, "alias": "testdb_postgres", "hash": "039aa5ab782c53fb1f9eb3596f4c49fe", "min_size": 3, "max_size": 20, "current_size": 20, "in_use": 0, "idle": 20, "active_connections": 1, "shutting_down": false, "metrics": {"total_acquired": 1, "total_released": 1, "current_active": 0, "peak_active": 1, "errors": 0, "timeouts": 0, "last_timeout": null, "avg_acquisition_time": 0.0}}
2025-05-10 10:21:42.544 [INFO] [INFO] Pool 039aa5ab782c53fb1f9eb3596f4c49fe marked as shutting down, no new connections allowed
2025-05-10 10:21:42.545 [ERROR] [ERROR] Error closing pool for 039aa5ab782c53fb1f9eb3596f4c49fe: Pool.close() got an unexpected keyword argument 'cancel_tasks'
2025-05-10 10:21:42.545 [INFO] [INFO] Tearing down test environment...
2025-05-10 10:22:57.772 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 10:22:57.772 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 10:23:17.332 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 10:23:17.333 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 10:23:17.354 [INFO] [INFO] Setting up test environment...
2025-05-10 10:23:17.355 [INFO] [INFO] Removing .\.pytest_cache
2025-05-10 10:23:17.386 [INFO] [INFO] Test files in this session: {'c:\\Users\\Phil\\Desktop\\Projects\\shared-libs\\python\\databases\\tests\\test_dal.py'}
2025-05-10 10:23:17.386 [INFO] [INFO] Found Docker Compose file for c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\test_dal.py: c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml
2025-05-10 10:23:17.393 [INFO] [INFO] Detected the following services in c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml:
2025-05-10 10:23:17.393 [INFO] [INFO]   - mysql: localhost:3307 (container port: 3306)
2025-05-10 10:23:17.393 [INFO] [INFO]   - postgres: localhost:5433 (container port: 5432)
2025-05-10 10:23:17.393 [INFO] [INFO] Running command: docker-compose -f c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml -p test-databases up -d
2025-05-10 10:23:17.714 [INFO] [INFO] Command error:  Container test-databases-mysql-1  Running
 Container test-databases-postgres-1  Running

2025-05-10 10:23:17.726 [INFO] [INFO] Thread 2700: Requesting sync connection for testdb_postgres
2025-05-10 10:23:17.756 [INFO] [INFO] Thread 2700: Sync connection created and cached for testdb_postgres in 0.03s
2025-05-10 10:23:17.921 [INFO] [INFO] testdb_postgres - 039aa5ab782c53fb1f9eb3596f4c49fe async pool initialized in 0.16s
2025-05-10 10:23:17.922 [INFO] [INFO] Pool status:
{"initialized": true, "alias": "testdb_postgres", "hash": "039aa5ab782c53fb1f9eb3596f4c49fe", "min_size": 3, "max_size": 20, "current_size": 20, "in_use": 1, "idle": 19, "active_connections": 0, "shutting_down": false, "metrics": {"total_acquired": 1, "total_released": 0, "current_active": 1, "peak_active": 1, "errors": 0, "timeouts": 0, "last_timeout": null, "avg_acquisition_time": 0.0}}
2025-05-10 10:23:17.922 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 10:23:17.923 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 10:23:17.940 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_name = ?
params: ('test_users_9e46d45f',)
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:23:17.942 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_name = ?
params: ('test_users_9e46d45f_meta',)
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:23:17.943 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_name = ?
params: ('test_users_9e46d45f_history',)
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:23:17.959 [INFO] [INFO] AsyncConnection.execute:
SQL: 
            CREATE TABLE IF NOT EXISTS test_users_9e46d45f (
                name TEXT, id TEXT PRIMARY KEY, created_at TEXT, updated_at TEXT, update_comment TEXT, created_by TEXT, updated_by TEXT, d
params: ()
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:23:17.972 [INFO] [INFO] AsyncConnection.execute:
SQL: 
            CREATE TABLE IF NOT EXISTS test_users_9e46d45f_meta (
                name TEXT PRIMARY KEY,
                type TEXT
            )
        
params: ()
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:23:17.983 [INFO] [INFO] AsyncConnection.execute:
SQL: 
            CREATE TABLE IF NOT EXISTS test_users_9e46d45f_history (
                name TEXT, id TEXT, created_at TEXT, updated_at TEXT, update_comment TEXT, created_by TEXT, updated_by TEXT, delet
params: ()
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:23:17.985 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_name = ?
params: ('test_users_9e46d45f_meta',)
timeout: None
tags: None
result: [('test_users_9e46d45f_meta',)]
----------------------
2025-05-10 10:23:17.986 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_name = ?
params: ('test_users_9e46d45f_meta',)
timeout: None
tags: None
result: [('test_users_9e46d45f_meta',)]
----------------------
2025-05-10 10:23:17.990 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT name, type FROM test_users_9e46d45f_meta
params: ()
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:23:17.990 [INFO] [INFO] We need to add a new field to test_users_9e46d45f: name
2025-05-10 10:23:17.993 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_users_9e46d45f_meta VALUES (?, ?) ON CONFLICT(name) DO UPDATE SET type=EXCLUDED.type
params: ('name', 'str')
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:23:17.995 [INFO] [INFO] AsyncConnection.execute:
SQL: ALTER TABLE test_users_9e46d45f ADD COLUMN IF NOT EXISTS name TEXT
params: ()
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:23:17.997 [INFO] [INFO] AsyncConnection.execute:
SQL: ALTER TABLE test_users_9e46d45f_history ADD COLUMN IF NOT EXISTS name TEXT
params: ()
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:23:17.997 [INFO] [INFO] We need to add a new field to test_users_9e46d45f: id
2025-05-10 10:23:17.998 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_users_9e46d45f_meta VALUES (?, ?) ON CONFLICT(name) DO UPDATE SET type=EXCLUDED.type
params: ('id', 'str')
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:23:18.000 [INFO] [INFO] AsyncConnection.execute:
SQL: ALTER TABLE test_users_9e46d45f ADD COLUMN IF NOT EXISTS id TEXT
params: ()
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:23:18.002 [INFO] [INFO] AsyncConnection.execute:
SQL: ALTER TABLE test_users_9e46d45f_history ADD COLUMN IF NOT EXISTS id TEXT
params: ()
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:23:18.002 [INFO] [INFO] We need to add a new field to test_users_9e46d45f: created_at
2025-05-10 10:23:18.003 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_users_9e46d45f_meta VALUES (?, ?) ON CONFLICT(name) DO UPDATE SET type=EXCLUDED.type
params: ('created_at', 'str')
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:23:18.005 [INFO] [INFO] AsyncConnection.execute:
SQL: ALTER TABLE test_users_9e46d45f ADD COLUMN IF NOT EXISTS created_at TEXT
params: ()
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:23:18.007 [INFO] [INFO] AsyncConnection.execute:
SQL: ALTER TABLE test_users_9e46d45f_history ADD COLUMN IF NOT EXISTS created_at TEXT
params: ()
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:23:18.007 [INFO] [INFO] We need to add a new field to test_users_9e46d45f: updated_at
2025-05-10 10:23:18.008 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_users_9e46d45f_meta VALUES (?, ?) ON CONFLICT(name) DO UPDATE SET type=EXCLUDED.type
params: ('updated_at', 'str')
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:23:18.012 [INFO] [INFO] AsyncConnection.execute:
SQL: ALTER TABLE test_users_9e46d45f ADD COLUMN IF NOT EXISTS updated_at TEXT
params: ()
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:23:18.015 [INFO] [INFO] AsyncConnection.execute:
SQL: ALTER TABLE test_users_9e46d45f_history ADD COLUMN IF NOT EXISTS updated_at TEXT
params: ()
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:23:18.015 [INFO] [INFO] We need to add a new field to test_users_9e46d45f: update_comment
2025-05-10 10:23:18.017 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_users_9e46d45f_meta VALUES (?, ?) ON CONFLICT(name) DO UPDATE SET type=EXCLUDED.type
params: ('update_comment', 'str')
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:23:18.019 [INFO] [INFO] AsyncConnection.execute:
SQL: ALTER TABLE test_users_9e46d45f ADD COLUMN IF NOT EXISTS update_comment TEXT
params: ()
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:23:18.021 [INFO] [INFO] AsyncConnection.execute:
SQL: ALTER TABLE test_users_9e46d45f_history ADD COLUMN IF NOT EXISTS update_comment TEXT
params: ()
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:23:18.022 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_name = ?
params: ('test_users_9e46d45f_meta',)
timeout: None
tags: None
result: [('test_users_9e46d45f_meta',)]
----------------------
2025-05-10 10:23:18.023 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_name = ?
params: ('test_users_9e46d45f_meta',)
timeout: None
tags: None
result: [('test_users_9e46d45f_meta',)]
----------------------
2025-05-10 10:23:18.024 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT name, type FROM test_users_9e46d45f_meta
params: ()
timeout: None
tags: None
result: [('name', 'str'), ('id', 'str'), ('created_at', 'str'), ('updated_at', 'str'), ('update_comment', 'str')]
----------------------
2025-05-10 10:23:18.027 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_users_9e46d45f (name, id, created_at, updated_at, update_comment) VALUES (?, ?, ?, ?, ?) ON CONFLICT(id) DO UPDATE SET name=EXCLUDED.name, created_at=EXCLUDED.created_at, updated_at=E
params: ('Charlie', '0dcab126-d3f5-4b64-b04e-bd3c660cd15b', '2025-05-10T09:23:17.934110', '2025-05-10T09:23:17.934110', 'Initial creation')
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:23:18.032 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT MAX(version) FROM test_users_9e46d45f_history WHERE id = ?
params: ('0dcab126-d3f5-4b64-b04e-bd3c660cd15b',)
timeout: None
tags: None
result: [(None,)]
----------------------
2025-05-10 10:23:18.034 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_users_9e46d45f_history (name, id, created_at, updated_at, update_comment, version, history_timestamp, history_user_id, history_comment) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)
params: ('Charlie', '0dcab126-d3f5-4b64-b04e-bd3c660cd15b', '2025-05-10T09:23:17.934110', '2025-05-10T09:23:17.934110', 'Initial creation', 1, '2025-05-10T09:23:18.032112', None, 'Initial creation')
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:23:18.039 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_name = ?
params: ('test_users_9e46d45f',)
timeout: None
tags: None
result: [('test_users_9e46d45f',)]
----------------------
2025-05-10 10:23:18.040 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_name = ?
params: ('test_users_9e46d45f_meta',)
timeout: None
tags: None
result: [('test_users_9e46d45f_meta',)]
----------------------
2025-05-10 10:23:18.041 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_name = ?
params: ('test_users_9e46d45f_history',)
timeout: None
tags: None
result: [('test_users_9e46d45f_history',)]
----------------------
2025-05-10 10:23:18.051 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT column_name, data_type FROM information_schema.columns WHERE table_name = ?
params: ('test_users_9e46d45f',)
timeout: None
tags: None
result: [('name', 'text'), ('id', 'text'), ('created_at', 'text'), ('updated_at', 'text'), ('update_comment', 'text'), ('created_by', 'text'), ('updated_by', 'text'), ('deleted_at', 'text')]
----------------------
2025-05-10 10:23:18.052 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_name = ?
params: ('test_users_9e46d45f_meta',)
timeout: None
tags: None
result: [('test_users_9e46d45f_meta',)]
----------------------
2025-05-10 10:23:18.054 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_name = ?
params: ('test_users_9e46d45f_meta',)
timeout: None
tags: None
result: [('test_users_9e46d45f_meta',)]
----------------------
2025-05-10 10:23:18.056 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT name, type FROM test_users_9e46d45f_meta
params: ()
timeout: None
tags: None
result: [('name', 'str'), ('id', 'str'), ('created_at', 'str'), ('updated_at', 'str'), ('update_comment', 'str')]
----------------------
2025-05-10 10:23:18.056 [INFO] [INFO] We need to add a new field to test_users_9e46d45f: department
2025-05-10 10:23:18.057 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_users_9e46d45f_meta VALUES (?, ?) ON CONFLICT(name) DO UPDATE SET type=EXCLUDED.type
params: ('department', 'str')
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:23:18.059 [INFO] [INFO] AsyncConnection.execute:
SQL: ALTER TABLE test_users_9e46d45f ADD COLUMN IF NOT EXISTS department TEXT
params: ()
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:23:18.062 [INFO] [INFO] AsyncConnection.execute:
SQL: ALTER TABLE test_users_9e46d45f_history ADD COLUMN IF NOT EXISTS department TEXT
params: ()
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:23:18.063 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_name = ?
params: ('test_users_9e46d45f_meta',)
timeout: None
tags: None
result: [('test_users_9e46d45f_meta',)]
----------------------
2025-05-10 10:23:18.064 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_name = ?
params: ('test_users_9e46d45f_meta',)
timeout: None
tags: None
result: [('test_users_9e46d45f_meta',)]
----------------------
2025-05-10 10:23:18.065 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT name, type FROM test_users_9e46d45f_meta
params: ()
timeout: None
tags: None
result: [('name', 'str'), ('id', 'str'), ('created_at', 'str'), ('updated_at', 'str'), ('update_comment', 'str'), ('department', 'str')]
----------------------
2025-05-10 10:23:18.067 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_users_9e46d45f (id, name, department, created_at, updated_at, update_comment) VALUES (?, ?, ?, ?, ?, ?) ON CONFLICT(id) DO UPDATE SET name=EXCLUDED.name, department=EXCLUDED.departmen
params: ('0dcab126-d3f5-4b64-b04e-bd3c660cd15b', 'Charlie', 'Engineering', '2025-05-10T09:23:18.038557', '2025-05-10T09:23:18.038557', 'Added department')
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:23:18.068 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT MAX(version) FROM test_users_9e46d45f_history WHERE id = ?
params: ('0dcab126-d3f5-4b64-b04e-bd3c660cd15b',)
timeout: None
tags: None
result: [(1,)]
----------------------
2025-05-10 10:23:18.072 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_users_9e46d45f_history (id, name, department, created_at, updated_at, update_comment, version, history_timestamp, history_user_id, history_comment) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, 
params: ('0dcab126-d3f5-4b64-b04e-bd3c660cd15b', 'Charlie', 'Engineering', '2025-05-10T09:23:18.038557', '2025-05-10T09:23:18.038557', 'Added department', 2, '2025-05-10T09:23:18.068966', None, 'Added departm
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:23:18.077 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT * FROM test_users_9e46d45f_history WHERE id = ? ORDER BY version DESC
params: ('0dcab126-d3f5-4b64-b04e-bd3c660cd15b',)
timeout: None
tags: None
result: [('Charlie', '0dcab126-d3f5-4b64-b04e-bd3c660cd15b', '2025-05-10T09:23:18.038557', '2025-05-10T09:23:18.038557', 'Added department', None, None, None, 2, '2025-05-10T09:23:18.068966', None, 'Added dep
----------------------
2025-05-10 10:23:18.080 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT * FROM test_users_9e46d45f_history WHERE id = ? AND version = ?
params: ('0dcab126-d3f5-4b64-b04e-bd3c660cd15b', 1)
timeout: None
tags: None
result: [('Charlie', '0dcab126-d3f5-4b64-b04e-bd3c660cd15b', '2025-05-10T09:23:17.934110', '2025-05-10T09:23:17.934110', 'Initial creation', None, None, None, 1, '2025-05-10T09:23:18.032112', None, 'Initial c
----------------------
2025-05-10 10:23:18.084 [INFO] [INFO] Pool status:
{"initialized": true, "alias": "testdb_postgres", "hash": "039aa5ab782c53fb1f9eb3596f4c49fe", "min_size": 3, "max_size": 20, "current_size": 20, "in_use": 0, "idle": 20, "active_connections": 1, "shutting_down": false, "metrics": {"total_acquired": 1, "total_released": 1, "current_active": 0, "peak_active": 1, "errors": 0, "timeouts": 0, "last_timeout": null, "avg_acquisition_time": 0.0}}
2025-05-10 10:23:18.221 [INFO] [INFO] Pool 039aa5ab782c53fb1f9eb3596f4c49fe marked as shutting down, no new connections allowed
2025-05-10 10:23:18.221 [ERROR] [ERROR] Error closing pool for 039aa5ab782c53fb1f9eb3596f4c49fe: Pool.close() got an unexpected keyword argument 'cancel_tasks'
2025-05-10 10:23:18.221 [INFO] [INFO] Tearing down test environment...
2025-05-10 10:35:33.597 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 10:35:33.597 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 10:35:38.784 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 10:35:38.784 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 10:35:38.813 [INFO] [INFO] Setting up test environment...
2025-05-10 10:35:38.813 [INFO] [INFO] Removing .\.pytest_cache
2025-05-10 10:35:38.852 [INFO] [INFO] Test files in this session: {'c:\\Users\\Phil\\Desktop\\Projects\\shared-libs\\python\\databases\\tests\\test_dal.py'}
2025-05-10 10:35:38.852 [INFO] [INFO] Found Docker Compose file for c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\test_dal.py: c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml
2025-05-10 10:35:38.858 [INFO] [INFO] Detected the following services in c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml:
2025-05-10 10:35:38.858 [INFO] [INFO]   - mysql: localhost:3307 (container port: 3306)
2025-05-10 10:35:38.858 [INFO] [INFO]   - postgres: localhost:5433 (container port: 5432)
2025-05-10 10:35:38.858 [INFO] [INFO] Running command: docker-compose -f c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml -p test-databases up -d
2025-05-10 10:35:39.190 [INFO] [INFO] Command error:  Container test-databases-mysql-1  Running
 Container test-databases-postgres-1  Running

2025-05-10 10:35:39.202 [INFO] [INFO] Thread 16380: Requesting sync connection for testdb_postgres
2025-05-10 10:35:39.227 [INFO] [INFO] Thread 16380: Sync connection created and cached for testdb_postgres in 0.02s
2025-05-10 10:35:39.419 [INFO] [INFO] testdb_postgres - 039aa5ab782c53fb1f9eb3596f4c49fe async pool initialized in 0.19s
2025-05-10 10:35:39.420 [INFO] [INFO] Pool status:
{"initialized": true, "alias": "testdb_postgres", "hash": "039aa5ab782c53fb1f9eb3596f4c49fe", "min_size": 3, "max_size": 20, "current_size": 20, "in_use": 1, "idle": 19, "active_connections": 0, "shutting_down": false, "metrics": {"total_acquired": 1, "total_released": 0, "current_active": 1, "peak_active": 1, "errors": 0, "timeouts": 0, "last_timeout": null, "avg_acquisition_time": 0.0}}
2025-05-10 10:35:39.420 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 10:35:39.420 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 10:35:39.440 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_name = ?
params: ('test_users_096150b4',)
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:35:39.441 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_name = ?
params: ('test_users_096150b4_meta',)
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:35:39.443 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_name = ?
params: ('test_users_096150b4_history',)
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:35:39.463 [INFO] [INFO] AsyncConnection.execute:
SQL: 
            CREATE TABLE IF NOT EXISTS test_users_096150b4 (
                name TEXT, id TEXT PRIMARY KEY, created_at TEXT, updated_at TEXT, update_comment TEXT, created_by TEXT, updated_by TEXT, d
params: ()
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:35:39.474 [INFO] [INFO] AsyncConnection.execute:
SQL: 
            CREATE TABLE IF NOT EXISTS test_users_096150b4_meta (
                name TEXT PRIMARY KEY,
                type TEXT
            )
        
params: ()
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:35:39.488 [INFO] [INFO] AsyncConnection.execute:
SQL: 
            CREATE TABLE IF NOT EXISTS test_users_096150b4_history (
                name TEXT, id TEXT, created_at TEXT, updated_at TEXT, update_comment TEXT, created_by TEXT, updated_by TEXT, delet
params: ()
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:35:39.490 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_name = ?
params: ('test_users_096150b4_meta',)
timeout: None
tags: None
result: [('test_users_096150b4_meta',)]
----------------------
2025-05-10 10:35:39.492 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_name = ?
params: ('test_users_096150b4_meta',)
timeout: None
tags: None
result: [('test_users_096150b4_meta',)]
----------------------
2025-05-10 10:35:39.495 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT name, type FROM test_users_096150b4_meta
params: ()
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:35:39.495 [INFO] [INFO] We need to add a new field to test_users_096150b4: name
2025-05-10 10:35:39.499 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_users_096150b4_meta VALUES (?, ?) ON CONFLICT(name) DO UPDATE SET type=EXCLUDED.type
params: ('name', 'str')
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:35:39.501 [INFO] [INFO] AsyncConnection.execute:
SQL: ALTER TABLE test_users_096150b4 ADD COLUMN IF NOT EXISTS name TEXT
params: ()
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:35:39.503 [INFO] [INFO] AsyncConnection.execute:
SQL: ALTER TABLE test_users_096150b4_history ADD COLUMN IF NOT EXISTS name TEXT
params: ()
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:35:39.503 [INFO] [INFO] We need to add a new field to test_users_096150b4: id
2025-05-10 10:35:39.504 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_users_096150b4_meta VALUES (?, ?) ON CONFLICT(name) DO UPDATE SET type=EXCLUDED.type
params: ('id', 'str')
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:35:39.506 [INFO] [INFO] AsyncConnection.execute:
SQL: ALTER TABLE test_users_096150b4 ADD COLUMN IF NOT EXISTS id TEXT
params: ()
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:35:39.507 [INFO] [INFO] AsyncConnection.execute:
SQL: ALTER TABLE test_users_096150b4_history ADD COLUMN IF NOT EXISTS id TEXT
params: ()
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:35:39.507 [INFO] [INFO] We need to add a new field to test_users_096150b4: created_at
2025-05-10 10:35:39.509 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_users_096150b4_meta VALUES (?, ?) ON CONFLICT(name) DO UPDATE SET type=EXCLUDED.type
params: ('created_at', 'str')
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:35:39.511 [INFO] [INFO] AsyncConnection.execute:
SQL: ALTER TABLE test_users_096150b4 ADD COLUMN IF NOT EXISTS created_at TEXT
params: ()
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:35:39.512 [INFO] [INFO] AsyncConnection.execute:
SQL: ALTER TABLE test_users_096150b4_history ADD COLUMN IF NOT EXISTS created_at TEXT
params: ()
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:35:39.512 [INFO] [INFO] We need to add a new field to test_users_096150b4: updated_at
2025-05-10 10:35:39.513 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_users_096150b4_meta VALUES (?, ?) ON CONFLICT(name) DO UPDATE SET type=EXCLUDED.type
params: ('updated_at', 'str')
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:35:39.517 [INFO] [INFO] AsyncConnection.execute:
SQL: ALTER TABLE test_users_096150b4 ADD COLUMN IF NOT EXISTS updated_at TEXT
params: ()
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:35:39.519 [INFO] [INFO] AsyncConnection.execute:
SQL: ALTER TABLE test_users_096150b4_history ADD COLUMN IF NOT EXISTS updated_at TEXT
params: ()
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:35:39.519 [INFO] [INFO] We need to add a new field to test_users_096150b4: update_comment
2025-05-10 10:35:39.520 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_users_096150b4_meta VALUES (?, ?) ON CONFLICT(name) DO UPDATE SET type=EXCLUDED.type
params: ('update_comment', 'str')
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:35:39.522 [INFO] [INFO] AsyncConnection.execute:
SQL: ALTER TABLE test_users_096150b4 ADD COLUMN IF NOT EXISTS update_comment TEXT
params: ()
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:35:39.524 [INFO] [INFO] AsyncConnection.execute:
SQL: ALTER TABLE test_users_096150b4_history ADD COLUMN IF NOT EXISTS update_comment TEXT
params: ()
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:35:39.528 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_name = ?
params: ('test_users_096150b4_meta',)
timeout: None
tags: None
result: [('test_users_096150b4_meta',)]
----------------------
2025-05-10 10:35:39.529 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_name = ?
params: ('test_users_096150b4_meta',)
timeout: None
tags: None
result: [('test_users_096150b4_meta',)]
----------------------
2025-05-10 10:35:39.530 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT name, type FROM test_users_096150b4_meta
params: ()
timeout: None
tags: None
result: [('name', 'str'), ('id', 'str'), ('created_at', 'str'), ('updated_at', 'str'), ('update_comment', 'str')]
----------------------
2025-05-10 10:35:39.532 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_users_096150b4 (name, id, created_at, updated_at, update_comment) VALUES (?, ?, ?, ?, ?) ON CONFLICT(id) DO UPDATE SET name=EXCLUDED.name, created_at=EXCLUDED.created_at, updated_at=E
params: ('Charlie', '60621b64-b635-4d96-a20a-c214195b763e', '2025-05-10T09:35:39.429811', '2025-05-10T09:35:39.429811', 'Initial creation')
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:35:39.536 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT MAX(version) FROM test_users_096150b4_history WHERE id = ?
params: ('60621b64-b635-4d96-a20a-c214195b763e',)
timeout: None
tags: None
result: [(None,)]
----------------------
2025-05-10 10:35:39.539 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_users_096150b4_history (name, id, created_at, updated_at, update_comment, version, history_timestamp, history_user_id, history_comment) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)
params: ('Charlie', '60621b64-b635-4d96-a20a-c214195b763e', '2025-05-10T09:35:39.429811', '2025-05-10T09:35:39.429811', 'Initial creation', 1, '2025-05-10T09:35:39.536838', None, 'Initial creation')
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:35:39.544 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_name = ?
params: ('test_users_096150b4',)
timeout: None
tags: None
result: [('test_users_096150b4',)]
----------------------
2025-05-10 10:35:39.545 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_name = ?
params: ('test_users_096150b4_meta',)
timeout: None
tags: None
result: [('test_users_096150b4_meta',)]
----------------------
2025-05-10 10:35:39.546 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_name = ?
params: ('test_users_096150b4_history',)
timeout: None
tags: None
result: [('test_users_096150b4_history',)]
----------------------
2025-05-10 10:35:39.557 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT column_name, data_type FROM information_schema.columns WHERE table_name = ?
params: ('test_users_096150b4',)
timeout: None
tags: None
result: [('name', 'text'), ('id', 'text'), ('created_at', 'text'), ('updated_at', 'text'), ('update_comment', 'text'), ('created_by', 'text'), ('updated_by', 'text'), ('deleted_at', 'text')]
----------------------
2025-05-10 10:35:39.559 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_name = ?
params: ('test_users_096150b4_meta',)
timeout: None
tags: None
result: [('test_users_096150b4_meta',)]
----------------------
2025-05-10 10:35:39.560 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_name = ?
params: ('test_users_096150b4_meta',)
timeout: None
tags: None
result: [('test_users_096150b4_meta',)]
----------------------
2025-05-10 10:35:39.561 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT name, type FROM test_users_096150b4_meta
params: ()
timeout: None
tags: None
result: [('name', 'str'), ('id', 'str'), ('created_at', 'str'), ('updated_at', 'str'), ('update_comment', 'str')]
----------------------
2025-05-10 10:35:39.561 [INFO] [INFO] We need to add a new field to test_users_096150b4: department
2025-05-10 10:35:39.562 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_users_096150b4_meta VALUES (?, ?) ON CONFLICT(name) DO UPDATE SET type=EXCLUDED.type
params: ('department', 'str')
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:35:39.564 [INFO] [INFO] AsyncConnection.execute:
SQL: ALTER TABLE test_users_096150b4 ADD COLUMN IF NOT EXISTS department TEXT
params: ()
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:35:39.566 [INFO] [INFO] AsyncConnection.execute:
SQL: ALTER TABLE test_users_096150b4_history ADD COLUMN IF NOT EXISTS department TEXT
params: ()
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:35:39.567 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_name = ?
params: ('test_users_096150b4_meta',)
timeout: None
tags: None
result: [('test_users_096150b4_meta',)]
----------------------
2025-05-10 10:35:39.568 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_name = ?
params: ('test_users_096150b4_meta',)
timeout: None
tags: None
result: [('test_users_096150b4_meta',)]
----------------------
2025-05-10 10:35:39.569 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT name, type FROM test_users_096150b4_meta
params: ()
timeout: None
tags: None
result: [('name', 'str'), ('id', 'str'), ('created_at', 'str'), ('updated_at', 'str'), ('update_comment', 'str'), ('department', 'str')]
----------------------
2025-05-10 10:35:39.571 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_users_096150b4 (id, name, department, created_at, updated_at, update_comment) VALUES (?, ?, ?, ?, ?, ?) ON CONFLICT(id) DO UPDATE SET name=EXCLUDED.name, department=EXCLUDED.departmen
params: ('60621b64-b635-4d96-a20a-c214195b763e', 'Charlie', 'Engineering', '2025-05-10T09:35:39.543922', '2025-05-10T09:35:39.543922', 'Added department')
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:35:39.573 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT MAX(version) FROM test_users_096150b4_history WHERE id = ?
params: ('60621b64-b635-4d96-a20a-c214195b763e',)
timeout: None
tags: None
result: [(1,)]
----------------------
2025-05-10 10:35:39.576 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_users_096150b4_history (id, name, department, created_at, updated_at, update_comment, version, history_timestamp, history_user_id, history_comment) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, 
params: ('60621b64-b635-4d96-a20a-c214195b763e', 'Charlie', 'Engineering', '2025-05-10T09:35:39.543922', '2025-05-10T09:35:39.543922', 'Added department', 2, '2025-05-10T09:35:39.573232', None, 'Added departm
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:35:39.581 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT * FROM test_users_096150b4_history WHERE id = ? ORDER BY version DESC
params: ('60621b64-b635-4d96-a20a-c214195b763e',)
timeout: None
tags: None
result: [('Charlie', '60621b64-b635-4d96-a20a-c214195b763e', '2025-05-10T09:35:39.543922', '2025-05-10T09:35:39.543922', 'Added department', None, None, None, 2, '2025-05-10T09:35:39.573232', None, 'Added dep
----------------------
2025-05-10 10:35:39.585 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT * FROM test_users_096150b4_history WHERE id = ? AND version = ?
params: ('60621b64-b635-4d96-a20a-c214195b763e', 1)
timeout: None
tags: None
result: [('Charlie', '60621b64-b635-4d96-a20a-c214195b763e', '2025-05-10T09:35:39.429811', '2025-05-10T09:35:39.429811', 'Initial creation', None, None, None, 1, '2025-05-10T09:35:39.536838', None, 'Initial c
----------------------
2025-05-10 10:35:39.590 [INFO] [INFO] AsyncConnection.execute:
SQL: DELETE FROM test_users_096150b4 WHERE id = ?
params: ('60621b64-b635-4d96-a20a-c214195b763e',)
timeout: None
tags: None
result: []
----------------------
2025-05-10 10:35:39.594 [INFO] [INFO] Pool status:
{"initialized": true, "alias": "testdb_postgres", "hash": "039aa5ab782c53fb1f9eb3596f4c49fe", "min_size": 3, "max_size": 20, "current_size": 20, "in_use": 0, "idle": 20, "active_connections": 1, "shutting_down": false, "metrics": {"total_acquired": 1, "total_released": 1, "current_active": 0, "peak_active": 1, "errors": 0, "timeouts": 0, "last_timeout": null, "avg_acquisition_time": 0.0}}
2025-05-10 10:35:39.600 [INFO] [INFO] Pool 039aa5ab782c53fb1f9eb3596f4c49fe marked as shutting down, no new connections allowed
2025-05-10 10:35:39.600 [ERROR] [ERROR] Error closing pool for 039aa5ab782c53fb1f9eb3596f4c49fe: Pool.close() got an unexpected keyword argument 'cancel_tasks'
2025-05-10 10:35:39.600 [INFO] [INFO] Tearing down test environment...
2025-05-10 10:35:47.124 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 10:35:47.125 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 10:35:47.156 [INFO] [INFO] Setting up test environment...
2025-05-10 10:35:47.157 [INFO] [INFO] Removing .\.pytest_cache
2025-05-10 10:35:47.193 [INFO] [INFO] Test files in this session: {'c:\\Users\\Phil\\Desktop\\Projects\\shared-libs\\python\\databases\\tests\\test_dal.py'}
2025-05-10 10:35:47.193 [INFO] [INFO] Found Docker Compose file for c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\test_dal.py: c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml
2025-05-10 10:35:47.198 [INFO] [INFO] Detected the following services in c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml:
2025-05-10 10:35:47.198 [INFO] [INFO]   - mysql: localhost:3307 (container port: 3306)
2025-05-10 10:35:47.199 [INFO] [INFO]   - postgres: localhost:5433 (container port: 5432)
2025-05-10 10:35:47.199 [INFO] [INFO] Running command: docker-compose -f c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml -p test-databases up -d
2025-05-10 10:35:47.529 [INFO] [INFO] Command error:  Container test-databases-mysql-1  Running
 Container test-databases-postgres-1  Running

2025-05-10 10:35:47.538 [INFO] [INFO] Thread 17828: Requesting sync connection for testdb_mysql
2025-05-10 10:35:47.564 [INFO] [INFO] Thread 17828: Sync connection created and cached for testdb_mysql in 0.03s
2025-05-10 10:35:47.569 [ERROR] [ERROR] testdb_mysql - a38f6583c7ceb10c7107caf0e8484dd2 async pool creation failed: MySqlPoolManager._create_pool() takes 2 positional arguments but 3 were given
2025-05-10 10:35:47.570 [ERROR] [ERROR] testdb_mysql - a38f6583c7ceb10c7107caf0e8484dd2 async pool creation failed: MySqlPoolManager._create_pool() takes 2 positional arguments but 3 were given
2025-05-10 10:35:47.937 [INFO] [INFO] Pool a38f6583c7ceb10c7107caf0e8484dd2 marked as shutting down, no new connections allowed
2025-05-10 10:35:47.938 [INFO] [INFO] Tearing down test environment...
2025-05-10 10:38:10.026 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 10:38:10.026 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 10:38:24.239 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 10:38:24.239 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 10:38:24.268 [INFO] [INFO] Setting up test environment...
2025-05-10 10:38:24.268 [INFO] [INFO] Removing .\.pytest_cache
2025-05-10 10:38:24.310 [INFO] [INFO] Test files in this session: {'c:\\Users\\Phil\\Desktop\\Projects\\shared-libs\\python\\databases\\tests\\test_dal.py'}
2025-05-10 10:38:24.311 [INFO] [INFO] Found Docker Compose file for c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\test_dal.py: c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml
2025-05-10 10:38:24.315 [INFO] [INFO] Detected the following services in c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml:
2025-05-10 10:38:24.315 [INFO] [INFO]   - mysql: localhost:3307 (container port: 3306)
2025-05-10 10:38:24.315 [INFO] [INFO]   - postgres: localhost:5433 (container port: 5432)
2025-05-10 10:38:24.315 [INFO] [INFO] Running command: docker-compose -f c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml -p test-databases up -d
2025-05-10 10:38:24.660 [INFO] [INFO] Command error:  Container test-databases-postgres-1  Running
 Container test-databases-mysql-1  Running

2025-05-10 10:38:24.669 [INFO] [INFO] Thread 14148: Requesting sync connection for testdb_mysql
2025-05-10 10:38:24.679 [INFO] [INFO] Thread 14148: Sync connection created and cached for testdb_mysql in 0.01s
2025-05-10 10:38:24.719 [INFO] [INFO] testdb_mysql - a38f6583c7ceb10c7107caf0e8484dd2 async pool initialized in 0.04s
2025-05-10 10:38:24.723 [INFO] [INFO] Pool status:
{"initialized": true, "alias": "testdb_mysql", "hash": "a38f6583c7ceb10c7107caf0e8484dd2", "min_size": 3, "max_size": 20, "current_size": 3, "in_use": 1, "idle": 2, "active_connections": 0, "shutting_down": false, "metrics": {"total_acquired": 1, "total_released": 0, "current_active": 1, "peak_active": 1, "errors": 0, "timeouts": 0, "last_timeout": null, "avg_acquisition_time": 0.0}}
2025-05-10 10:38:24.732 [INFO] [INFO] Pool status:
{"initialized": true, "alias": "testdb_mysql", "hash": "a38f6583c7ceb10c7107caf0e8484dd2", "min_size": 3, "max_size": 20, "current_size": 3, "in_use": 0, "idle": 3, "active_connections": 1, "shutting_down": false, "metrics": {"total_acquired": 1, "total_released": 1, "current_active": 0, "peak_active": 1, "errors": 0, "timeouts": 0, "last_timeout": null, "avg_acquisition_time": 0.0}}
2025-05-10 10:38:24.899 [INFO] [INFO] Pool a38f6583c7ceb10c7107caf0e8484dd2 marked as shutting down, no new connections allowed
2025-05-10 10:38:24.899 [ERROR] [ERROR] Error closing pool for a38f6583c7ceb10c7107caf0e8484dd2: 'NoneType' object has no attribute 'call_soon'
2025-05-10 10:38:24.900 [INFO] [INFO] Tearing down test environment...
2025-05-10 10:41:55.600 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 10:41:55.600 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 10:42:02.241 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 10:42:02.241 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 10:42:02.263 [INFO] [INFO] Setting up test environment...
2025-05-10 10:42:02.263 [INFO] [INFO] Removing .\.pytest_cache
2025-05-10 10:42:02.296 [INFO] [INFO] Test files in this session: {'c:\\Users\\Phil\\Desktop\\Projects\\shared-libs\\python\\databases\\tests\\test_dal.py'}
2025-05-10 10:42:02.296 [INFO] [INFO] Found Docker Compose file for c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\test_dal.py: c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml
2025-05-10 10:42:02.303 [INFO] [INFO] Detected the following services in c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml:
2025-05-10 10:42:02.303 [INFO] [INFO]   - mysql: localhost:3307 (container port: 3306)
2025-05-10 10:42:02.303 [INFO] [INFO]   - postgres: localhost:5433 (container port: 5432)
2025-05-10 10:42:02.303 [INFO] [INFO] Running command: docker-compose -f c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml -p test-databases up -d
2025-05-10 10:42:02.613 [INFO] [INFO] Command error:  Container test-databases-postgres-1  Running
 Container test-databases-mysql-1  Running

2025-05-10 10:42:02.627 [INFO] [INFO] Thread 16904: Requesting sync connection for testdb_mysql
2025-05-10 10:42:02.636 [INFO] [INFO] Thread 16904: Sync connection created and cached for testdb_mysql in 0.01s
2025-05-10 10:42:02.671 [INFO] [INFO] testdb_mysql - a38f6583c7ceb10c7107caf0e8484dd2 async pool initialized in 0.03s
2025-05-10 10:42:02.672 [INFO] [INFO] Pool status:
{"initialized": true, "alias": "testdb_mysql", "hash": "a38f6583c7ceb10c7107caf0e8484dd2", "min_size": 3, "max_size": 20, "current_size": 3, "in_use": 1, "idle": 2, "active_connections": 0, "shutting_down": false, "metrics": {"total_acquired": 1, "total_released": 0, "current_active": 1, "peak_active": 1, "errors": 0, "timeouts": 0, "last_timeout": null, "avg_acquisition_time": 0.0}}
2025-05-10 10:42:02.682 [INFO] [INFO] Pool status:
{"initialized": true, "alias": "testdb_mysql", "hash": "a38f6583c7ceb10c7107caf0e8484dd2", "min_size": 3, "max_size": 20, "current_size": 3, "in_use": 0, "idle": 3, "active_connections": 1, "shutting_down": false, "metrics": {"total_acquired": 1, "total_released": 1, "current_active": 0, "peak_active": 1, "errors": 0, "timeouts": 0, "last_timeout": null, "avg_acquisition_time": 0.0}}
2025-05-10 10:42:02.832 [INFO] [INFO] Pool a38f6583c7ceb10c7107caf0e8484dd2 marked as shutting down, no new connections allowed
2025-05-10 10:42:02.832 [ERROR] [ERROR] Error closing pool for a38f6583c7ceb10c7107caf0e8484dd2: object NoneType can't be used in 'await' expression
2025-05-10 10:42:02.832 [INFO] [INFO] Tearing down test environment...
2025-05-10 10:42:44.177 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 10:42:44.177 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 10:46:40.841 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 10:46:40.841 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 10:46:43.703 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 10:46:43.703 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 10:46:43.729 [INFO] [INFO] Setting up test environment...
2025-05-10 10:46:43.729 [INFO] [INFO] Removing .\.pytest_cache
2025-05-10 10:46:43.763 [INFO] [INFO] Test files in this session: {'c:\\Users\\Phil\\Desktop\\Projects\\shared-libs\\python\\databases\\tests\\test_dal.py'}
2025-05-10 10:46:43.763 [INFO] [INFO] Found Docker Compose file for c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\test_dal.py: c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml
2025-05-10 10:46:43.771 [INFO] [INFO] Detected the following services in c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml:
2025-05-10 10:46:43.771 [INFO] [INFO]   - mysql: localhost:3307 (container port: 3306)
2025-05-10 10:46:43.771 [INFO] [INFO]   - postgres: localhost:5433 (container port: 5432)
2025-05-10 10:46:43.771 [INFO] [INFO] Running command: docker-compose -f c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml -p test-databases up -d
2025-05-10 10:46:44.082 [INFO] [INFO] Command error:  Container test-databases-postgres-1  Running
 Container test-databases-mysql-1  Running

2025-05-10 10:46:44.093 [INFO] [INFO] Thread 12428: Requesting sync connection for testdb_mysql
2025-05-10 10:46:44.102 [INFO] [INFO] Thread 12428: Sync connection created and cached for testdb_mysql in 0.01s
2025-05-10 10:46:44.135 [INFO] [INFO] testdb_mysql - a38f6583c7ceb10c7107caf0e8484dd2 async pool initialized in 0.03s
2025-05-10 10:46:44.137 [INFO] [INFO] Pool status:
{"initialized": true, "alias": "testdb_mysql", "hash": "a38f6583c7ceb10c7107caf0e8484dd2", "min_size": 3, "max_size": 20, "current_size": 3, "in_use": 1, "idle": 2, "active_connections": 0, "shutting_down": false, "metrics": {"total_acquired": 1, "total_released": 0, "current_active": 1, "peak_active": 1, "errors": 0, "timeouts": 0, "last_timeout": null, "avg_acquisition_time": 0.0}}
2025-05-10 10:46:44.145 [INFO] [INFO] Pool status:
{"initialized": true, "alias": "testdb_mysql", "hash": "a38f6583c7ceb10c7107caf0e8484dd2", "min_size": 3, "max_size": 20, "current_size": 3, "in_use": 0, "idle": 3, "active_connections": 1, "shutting_down": false, "metrics": {"total_acquired": 1, "total_released": 1, "current_active": 0, "peak_active": 1, "errors": 0, "timeouts": 0, "last_timeout": null, "avg_acquisition_time": 0.0}}
2025-05-10 10:46:44.290 [INFO] [INFO] Pool a38f6583c7ceb10c7107caf0e8484dd2 marked as shutting down, no new connections allowed
2025-05-10 10:46:44.291 [ERROR] [ERROR] Error closing pool for a38f6583c7ceb10c7107caf0e8484dd2: 'NoneType' object has no attribute 'call_soon'
2025-05-10 10:46:44.291 [INFO] [INFO] Tearing down test environment...
2025-05-10 11:24:53.625 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 11:24:53.625 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 11:25:13.120 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 11:25:13.120 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 11:30:57.276 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 11:30:57.277 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 11:31:00.369 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 11:31:00.369 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 11:31:00.397 [INFO] [INFO] Setting up test environment...
2025-05-10 11:31:00.398 [INFO] [INFO] Removing .\.pytest_cache
2025-05-10 11:31:00.468 [INFO] [INFO] Test files in this session: {'c:\\Users\\Phil\\Desktop\\Projects\\shared-libs\\python\\databases\\tests\\test_dal.py'}
2025-05-10 11:31:00.469 [INFO] [INFO] Found Docker Compose file for c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\test_dal.py: c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml
2025-05-10 11:31:00.477 [INFO] [INFO] Detected the following services in c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml:
2025-05-10 11:31:00.477 [INFO] [INFO]   - mysql: localhost:3307 (container port: 3306)
2025-05-10 11:31:00.478 [INFO] [INFO]   - postgres: localhost:5433 (container port: 5432)
2025-05-10 11:31:00.478 [INFO] [INFO] Running command: docker-compose -f c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml -p test-databases up -d
2025-05-10 11:31:00.912 [INFO] [INFO] Command error:  Container test-databases-mysql-1  Running
 Container test-databases-postgres-1  Running

2025-05-10 11:31:00.962 [INFO] [INFO] testdb_mysql - a38f6583c7ceb10c7107caf0e8484dd2 async pool initialized in 0.03s
2025-05-10 11:31:00.963 [INFO] [INFO] Pool status:
{"initialized": true, "alias": "testdb_mysql", "hash": "a38f6583c7ceb10c7107caf0e8484dd2", "min_size": 3, "max_size": 20, "current_size": 3, "in_use": 1, "idle": 2, "active_connections": 0, "shutting_down": false, "metrics": {"total_acquired": 1, "total_released": 0, "current_active": 1, "peak_active": 1, "errors": 0, "timeouts": 0, "last_timeout": null, "avg_acquisition_time": 0.0}}
2025-05-10 11:31:00.979 [INFO] [INFO] Pool status:
{"initialized": true, "alias": "testdb_mysql", "hash": "a38f6583c7ceb10c7107caf0e8484dd2", "min_size": 3, "max_size": 20, "current_size": 3, "in_use": 0, "idle": 3, "active_connections": 1, "shutting_down": false, "metrics": {"total_acquired": 1, "total_released": 1, "current_active": 0, "peak_active": 1, "errors": 0, "timeouts": 0, "last_timeout": null, "avg_acquisition_time": 0.0}}
2025-05-10 11:31:01.174 [INFO] [INFO] Pool a38f6583c7ceb10c7107caf0e8484dd2 marked as shutting down, no new connections allowed
2025-05-10 11:31:01.175 [ERROR] [ERROR] Error closing pool for a38f6583c7ceb10c7107caf0e8484dd2: 'NoneType' object has no attribute 'call_soon'
2025-05-10 11:31:01.180 [INFO] [INFO] Tearing down test environment...
2025-05-10 11:33:27.497 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 11:33:27.497 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 11:33:27.504 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 11:33:27.504 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 11:33:27.508 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 11:33:27.508 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 11:33:29.609 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 11:33:29.609 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 11:33:29.619 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 11:33:29.619 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 11:33:29.622 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 11:33:29.622 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 11:33:29.645 [INFO] [INFO] Setting up test environment...
2025-05-10 11:33:29.645 [INFO] [INFO] Removing .\.pytest_cache
2025-05-10 11:33:29.686 [INFO] [INFO] Test files in this session: {'c:\\Users\\Phil\\Desktop\\Projects\\shared-libs\\python\\databases\\tests\\test_dal.py'}
2025-05-10 11:33:29.686 [INFO] [INFO] Found Docker Compose file for c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\test_dal.py: c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml
2025-05-10 11:33:29.691 [INFO] [INFO] Detected the following services in c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml:
2025-05-10 11:33:29.691 [INFO] [INFO]   - mysql: localhost:3307 (container port: 3306)
2025-05-10 11:33:29.691 [INFO] [INFO]   - postgres: localhost:5433 (container port: 5432)
2025-05-10 11:33:29.691 [INFO] [INFO] Running command: docker-compose -f c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml -p test-databases up -d
2025-05-10 11:33:30.121 [INFO] [INFO] Command error:  Container test-databases-postgres-1  Running
 Container test-databases-mysql-1  Running

2025-05-10 11:33:30.177 [INFO] [INFO] testdb_mysql - a38f6583c7ceb10c7107caf0e8484dd2 async pool initialized in 0.04s
2025-05-10 11:33:30.177 [INFO] [INFO] Pool status:
{"initialized": true, "alias": "testdb_mysql", "hash": "a38f6583c7ceb10c7107caf0e8484dd2", "min_size": 3, "max_size": 20, "current_size": 3, "in_use": 1, "idle": 2, "active_connections": 0, "shutting_down": false, "metrics": {"total_acquired": 1, "total_released": 0, "current_active": 1, "peak_active": 1, "errors": 0, "timeouts": 0, "last_timeout": null, "avg_acquisition_time": 0.0}}
2025-05-10 11:33:30.178 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 11:33:30.178 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 11:33:30.187 [INFO] [INFO] Pool status:
{"initialized": true, "alias": "testdb_mysql", "hash": "a38f6583c7ceb10c7107caf0e8484dd2", "min_size": 3, "max_size": 20, "current_size": 3, "in_use": 0, "idle": 3, "active_connections": 1, "shutting_down": false, "metrics": {"total_acquired": 1, "total_released": 1, "current_active": 0, "peak_active": 1, "errors": 0, "timeouts": 0, "last_timeout": null, "avg_acquisition_time": 0.0}}
2025-05-10 11:33:31.070 [INFO] [INFO] Pool a38f6583c7ceb10c7107caf0e8484dd2 marked as shutting down, no new connections allowed
2025-05-10 11:33:31.070 [ERROR] [ERROR] Error closing pool for a38f6583c7ceb10c7107caf0e8484dd2: 'NoneType' object has no attribute 'call_soon'
2025-05-10 11:33:31.075 [INFO] [INFO] Tearing down test environment...
2025-05-10 11:34:53.606 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 11:34:53.606 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 11:34:53.612 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 11:34:53.612 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 11:34:53.616 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 11:34:53.617 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 11:34:58.147 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 11:34:58.147 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 11:34:58.155 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 11:34:58.155 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 11:34:58.158 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 11:34:58.159 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 11:34:58.176 [INFO] [INFO] Setting up test environment...
2025-05-10 11:34:58.176 [INFO] [INFO] Removing .\.pytest_cache
2025-05-10 11:34:58.213 [INFO] [INFO] Test files in this session: {'c:\\Users\\Phil\\Desktop\\Projects\\shared-libs\\python\\databases\\tests\\test_dal.py'}
2025-05-10 11:34:58.214 [INFO] [INFO] Found Docker Compose file for c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\test_dal.py: c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml
2025-05-10 11:34:58.218 [INFO] [INFO] Detected the following services in c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml:
2025-05-10 11:34:58.218 [INFO] [INFO]   - mysql: localhost:3307 (container port: 3306)
2025-05-10 11:34:58.218 [INFO] [INFO]   - postgres: localhost:5433 (container port: 5432)
2025-05-10 11:34:58.218 [INFO] [INFO] Running command: docker-compose -f c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml -p test-databases up -d
2025-05-10 11:34:58.540 [INFO] [INFO] Command error:  Container test-databases-postgres-1  Running
 Container test-databases-mysql-1  Running

2025-05-10 11:34:58.586 [INFO] [INFO] testdb_mysql - a38f6583c7ceb10c7107caf0e8484dd2 async pool initialized in 0.03s
2025-05-10 11:34:58.587 [INFO] [INFO] Pool status:
{"initialized": true, "alias": "testdb_mysql", "hash": "a38f6583c7ceb10c7107caf0e8484dd2", "min_size": 3, "max_size": 20, "current_size": 3, "in_use": 1, "idle": 2, "active_connections": 0, "shutting_down": false, "metrics": {"total_acquired": 1, "total_released": 0, "current_active": 1, "peak_active": 1, "errors": 0, "timeouts": 0, "last_timeout": null, "avg_acquisition_time": 0.0}}
2025-05-10 11:34:58.587 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 11:34:58.587 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 11:34:58.595 [INFO] [INFO] Pool status:
{"initialized": true, "alias": "testdb_mysql", "hash": "a38f6583c7ceb10c7107caf0e8484dd2", "min_size": 3, "max_size": 20, "current_size": 3, "in_use": 0, "idle": 3, "active_connections": 1, "shutting_down": false, "metrics": {"total_acquired": 1, "total_released": 1, "current_active": 0, "peak_active": 1, "errors": 0, "timeouts": 0, "last_timeout": null, "avg_acquisition_time": 0.0}}
2025-05-10 11:34:59.350 [INFO] [INFO] Pool a38f6583c7ceb10c7107caf0e8484dd2 marked as shutting down, no new connections allowed
2025-05-10 11:34:59.350 [ERROR] [ERROR] Error closing pool for a38f6583c7ceb10c7107caf0e8484dd2: object NoneType can't be used in 'await' expression
2025-05-10 11:34:59.356 [INFO] [INFO] Tearing down test environment...
2025-05-10 11:35:24.115 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 11:35:24.115 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 11:35:24.122 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 11:35:24.122 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 11:35:24.125 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 11:35:24.126 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 11:35:26.896 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 11:35:26.896 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 11:35:26.906 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 11:35:26.906 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 11:35:26.909 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 11:35:26.909 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 11:35:26.931 [INFO] [INFO] Setting up test environment...
2025-05-10 11:35:26.931 [INFO] [INFO] Removing .\.pytest_cache
2025-05-10 11:35:26.967 [INFO] [INFO] Test files in this session: {'c:\\Users\\Phil\\Desktop\\Projects\\shared-libs\\python\\databases\\tests\\test_dal.py'}
2025-05-10 11:35:26.967 [INFO] [INFO] Found Docker Compose file for c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\test_dal.py: c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml
2025-05-10 11:35:26.972 [INFO] [INFO] Detected the following services in c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml:
2025-05-10 11:35:26.972 [INFO] [INFO]   - mysql: localhost:3307 (container port: 3306)
2025-05-10 11:35:26.972 [INFO] [INFO]   - postgres: localhost:5433 (container port: 5432)
2025-05-10 11:35:26.972 [INFO] [INFO] Running command: docker-compose -f c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml -p test-databases up -d
2025-05-10 11:35:27.288 [INFO] [INFO] Command error:  Container test-databases-mysql-1  Running
 Container test-databases-postgres-1  Running

2025-05-10 11:35:27.334 [INFO] [INFO] testdb_mysql - a38f6583c7ceb10c7107caf0e8484dd2 async pool initialized in 0.03s
2025-05-10 11:35:27.335 [INFO] [INFO] Pool status:
{"initialized": true, "alias": "testdb_mysql", "hash": "a38f6583c7ceb10c7107caf0e8484dd2", "min_size": 3, "max_size": 20, "current_size": 3, "in_use": 1, "idle": 2, "active_connections": 0, "shutting_down": false, "metrics": {"total_acquired": 1, "total_released": 0, "current_active": 1, "peak_active": 1, "errors": 0, "timeouts": 0, "last_timeout": null, "avg_acquisition_time": 0.0}}
2025-05-10 11:35:27.335 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 11:35:27.335 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 11:35:27.344 [INFO] [INFO] Pool status:
{"initialized": true, "alias": "testdb_mysql", "hash": "a38f6583c7ceb10c7107caf0e8484dd2", "min_size": 3, "max_size": 20, "current_size": 3, "in_use": 0, "idle": 3, "active_connections": 1, "shutting_down": false, "metrics": {"total_acquired": 1, "total_released": 1, "current_active": 0, "peak_active": 1, "errors": 0, "timeouts": 0, "last_timeout": null, "avg_acquisition_time": 0.0}}
2025-05-10 11:35:28.180 [INFO] [INFO] Pool a38f6583c7ceb10c7107caf0e8484dd2 marked as shutting down, no new connections allowed
2025-05-10 11:35:28.180 [ERROR] [ERROR] Error closing pool for a38f6583c7ceb10c7107caf0e8484dd2: object NoneType can't be used in 'await' expression
2025-05-10 11:35:28.187 [INFO] [INFO] Tearing down test environment...
2025-05-10 11:48:15.701 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 11:48:15.702 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 11:48:15.716 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 11:48:15.716 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 11:48:15.720 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 11:48:15.720 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 11:48:19.915 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 11:48:19.916 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 11:48:19.923 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 11:48:19.923 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 11:48:19.926 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 11:48:19.926 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 11:48:19.949 [INFO] [INFO] Setting up test environment...
2025-05-10 11:48:19.949 [INFO] [INFO] Removing .\.pytest_cache
2025-05-10 11:48:19.989 [INFO] [INFO] Test files in this session: {'c:\\Users\\Phil\\Desktop\\Projects\\shared-libs\\python\\databases\\tests\\test_dal.py'}
2025-05-10 11:48:19.989 [INFO] [INFO] Found Docker Compose file for c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\test_dal.py: c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml
2025-05-10 11:48:19.997 [INFO] [INFO] Detected the following services in c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml:
2025-05-10 11:48:19.998 [INFO] [INFO]   - mysql: localhost:3307 (container port: 3306)
2025-05-10 11:48:19.998 [INFO] [INFO]   - postgres: localhost:5433 (container port: 5432)
2025-05-10 11:48:19.998 [INFO] [INFO] Running command: docker-compose -f c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml -p test-databases up -d
2025-05-10 11:48:20.318 [INFO] [INFO] Command error:  Container test-databases-mysql-1  Running
 Container test-databases-postgres-1  Running

2025-05-10 11:48:20.366 [INFO] [INFO] testdb_mysql - a38f6583c7ceb10c7107caf0e8484dd2 async pool initialized in 0.03s
2025-05-10 11:48:20.366 [INFO] [INFO] Pool status:
{"initialized": true, "alias": "testdb_mysql", "hash": "a38f6583c7ceb10c7107caf0e8484dd2", "min_size": 3, "max_size": 20, "current_size": 3, "in_use": 1, "idle": 2, "active_connections": 0, "shutting_down": false, "metrics": {"total_acquired": 1, "total_released": 0, "current_active": 1, "peak_active": 1, "errors": 0, "timeouts": 0, "last_timeout": null, "avg_acquisition_time": 0.0}}
2025-05-10 11:48:20.367 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 11:48:20.367 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 11:48:20.379 [INFO] [INFO] Pool status:
{"initialized": true, "alias": "testdb_mysql", "hash": "a38f6583c7ceb10c7107caf0e8484dd2", "min_size": 3, "max_size": 20, "current_size": 3, "in_use": 0, "idle": 3, "active_connections": 1, "shutting_down": false, "metrics": {"total_acquired": 1, "total_released": 1, "current_active": 0, "peak_active": 1, "errors": 0, "timeouts": 0, "last_timeout": null, "avg_acquisition_time": 0.0}}
2025-05-10 11:48:21.266 [INFO] [INFO] Pool a38f6583c7ceb10c7107caf0e8484dd2 marked as shutting down, no new connections allowed
2025-05-10 11:48:21.266 [ERROR] [ERROR] Error closing pool for a38f6583c7ceb10c7107caf0e8484dd2: object NoneType can't be used in 'await' expression
2025-05-10 11:48:21.273 [INFO] [INFO] Tearing down test environment...
2025-05-10 11:49:06.251 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 11:49:06.252 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 11:49:06.261 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 11:49:06.261 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 11:49:06.266 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 11:49:06.266 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 12:01:31.652 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 12:01:31.652 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 12:01:31.660 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 12:01:31.660 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 12:01:31.665 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 12:01:31.665 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 12:01:43.269 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 12:01:43.269 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 12:01:43.278 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 12:01:43.278 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 12:01:43.282 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 12:01:43.282 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 12:01:43.301 [INFO] [INFO] Setting up test environment...
2025-05-10 12:01:43.302 [INFO] [INFO] Removing .\.pytest_cache
2025-05-10 12:01:43.340 [INFO] [INFO] Test files in this session: {'c:\\Users\\Phil\\Desktop\\Projects\\shared-libs\\python\\databases\\tests\\test_dal.py'}
2025-05-10 12:01:43.341 [INFO] [INFO] Found Docker Compose file for c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\test_dal.py: c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml
2025-05-10 12:01:43.349 [INFO] [INFO] Detected the following services in c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml:
2025-05-10 12:01:43.349 [INFO] [INFO]   - mysql: localhost:3307 (container port: 3306)
2025-05-10 12:01:43.349 [INFO] [INFO]   - postgres: localhost:5433 (container port: 5432)
2025-05-10 12:01:43.350 [INFO] [INFO] Running command: docker-compose -f c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml -p test-databases up -d
2025-05-10 12:01:43.712 [INFO] [INFO] Command error:  Container test-databases-mysql-1  Running
 Container test-databases-postgres-1  Running

2025-05-10 12:01:43.763 [INFO] [INFO] testdb_mysql - a38f6583c7ceb10c7107caf0e8484dd2 async pool initialized in 0.03s
2025-05-10 12:01:43.763 [INFO] [INFO] Pool status:
{"initialized": true, "alias": "testdb_mysql", "hash": "a38f6583c7ceb10c7107caf0e8484dd2", "min_size": 3, "max_size": 20, "current_size": 3, "in_use": 1, "idle": 2, "active_connections": 0, "shutting_down": false, "metrics": {"total_acquired": 1, "total_released": 0, "current_active": 1, "peak_active": 1, "errors": 0, "timeouts": 0, "last_timeout": null, "avg_acquisition_time": 0.0}}
2025-05-10 12:01:43.764 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 12:01:43.764 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 12:01:43.772 [INFO] [INFO] This sql shoudl be converted to bative backend: SELECT table_name FROM information_schema.tables WHERE table_schema = DATABASE() AND table_name = ?
2025-05-10 12:01:43.773 [INFO] [INFO] Pool status:
{"initialized": true, "alias": "testdb_mysql", "hash": "a38f6583c7ceb10c7107caf0e8484dd2", "min_size": 3, "max_size": 20, "current_size": 3, "in_use": 0, "idle": 3, "active_connections": 1, "shutting_down": false, "metrics": {"total_acquired": 1, "total_released": 1, "current_active": 0, "peak_active": 1, "errors": 0, "timeouts": 0, "last_timeout": null, "avg_acquisition_time": 0.0}}
2025-05-10 12:01:44.568 [INFO] [INFO] Pool a38f6583c7ceb10c7107caf0e8484dd2 marked as shutting down, no new connections allowed
2025-05-10 12:01:44.568 [ERROR] [ERROR] Error closing pool for a38f6583c7ceb10c7107caf0e8484dd2: object NoneType can't be used in 'await' expression
2025-05-10 12:01:44.573 [INFO] [INFO] Tearing down test environment...
2025-05-10 12:02:31.795 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 12:02:31.795 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 12:02:31.808 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 12:02:31.808 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 12:02:31.812 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 12:02:31.812 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 12:02:32.897 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 12:02:32.897 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 12:02:32.910 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 12:02:32.910 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 12:02:32.915 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 12:02:32.915 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 12:02:32.946 [INFO] [INFO] Setting up test environment...
2025-05-10 12:02:32.946 [INFO] [INFO] Removing .\.pytest_cache
2025-05-10 12:02:33.003 [INFO] [INFO] Test files in this session: {'c:\\Users\\Phil\\Desktop\\Projects\\shared-libs\\python\\databases\\tests\\test_dal.py'}
2025-05-10 12:02:33.004 [INFO] [INFO] Found Docker Compose file for c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\test_dal.py: c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml
2025-05-10 12:02:33.010 [INFO] [INFO] Detected the following services in c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml:
2025-05-10 12:02:33.010 [INFO] [INFO]   - mysql: localhost:3307 (container port: 3306)
2025-05-10 12:02:33.010 [INFO] [INFO]   - postgres: localhost:5433 (container port: 5432)
2025-05-10 12:02:33.011 [INFO] [INFO] Running command: docker-compose -f c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml -p test-databases up -d
2025-05-10 12:02:33.551 [INFO] [INFO] Command error:  Container test-databases-postgres-1  Running
 Container test-databases-mysql-1  Running

2025-05-10 12:02:33.612 [INFO] [INFO] testdb_mysql - a38f6583c7ceb10c7107caf0e8484dd2 async pool initialized in 0.04s
2025-05-10 12:02:33.612 [INFO] [INFO] Pool status:
{"initialized": true, "alias": "testdb_mysql", "hash": "a38f6583c7ceb10c7107caf0e8484dd2", "min_size": 3, "max_size": 20, "current_size": 3, "in_use": 1, "idle": 2, "active_connections": 0, "shutting_down": false, "metrics": {"total_acquired": 1, "total_released": 0, "current_active": 1, "peak_active": 1, "errors": 0, "timeouts": 0, "last_timeout": null, "avg_acquisition_time": 0.0}}
2025-05-10 12:02:33.612 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 12:02:33.612 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 12:02:33.623 [INFO] [INFO] This sql shoudl be converted to bative backend: SELECT table_name FROM information_schema.tables WHERE table_schema = DATABASE() AND table_name = ? vs SELECT table_name FROM information_schema.tables WHERE table_schema = DATABASE() AND table_name = ?
2025-05-10 12:02:33.624 [INFO] [INFO] Pool status:
{"initialized": true, "alias": "testdb_mysql", "hash": "a38f6583c7ceb10c7107caf0e8484dd2", "min_size": 3, "max_size": 20, "current_size": 3, "in_use": 0, "idle": 3, "active_connections": 1, "shutting_down": false, "metrics": {"total_acquired": 1, "total_released": 1, "current_active": 0, "peak_active": 1, "errors": 0, "timeouts": 0, "last_timeout": null, "avg_acquisition_time": 0.0}}
2025-05-10 12:02:34.546 [INFO] [INFO] Pool a38f6583c7ceb10c7107caf0e8484dd2 marked as shutting down, no new connections allowed
2025-05-10 12:02:34.546 [ERROR] [ERROR] Error closing pool for a38f6583c7ceb10c7107caf0e8484dd2: object NoneType can't be used in 'await' expression
2025-05-10 12:02:34.550 [INFO] [INFO] Tearing down test environment...
2025-05-10 12:03:59.395 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 12:03:59.395 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 12:03:59.408 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 12:03:59.408 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 12:03:59.411 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 12:03:59.411 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 12:04:03.118 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 12:04:03.118 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 12:04:03.130 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 12:04:03.130 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 12:04:03.133 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 12:04:03.133 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 12:04:03.151 [INFO] [INFO] Setting up test environment...
2025-05-10 12:04:03.152 [INFO] [INFO] Removing .\.pytest_cache
2025-05-10 12:04:03.191 [INFO] [INFO] Test files in this session: {'c:\\Users\\Phil\\Desktop\\Projects\\shared-libs\\python\\databases\\tests\\test_dal.py'}
2025-05-10 12:04:03.192 [INFO] [INFO] Found Docker Compose file for c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\test_dal.py: c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml
2025-05-10 12:04:03.196 [INFO] [INFO] Detected the following services in c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml:
2025-05-10 12:04:03.196 [INFO] [INFO]   - mysql: localhost:3307 (container port: 3306)
2025-05-10 12:04:03.197 [INFO] [INFO]   - postgres: localhost:5433 (container port: 5432)
2025-05-10 12:04:03.197 [INFO] [INFO] Running command: docker-compose -f c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml -p test-databases up -d
2025-05-10 12:04:03.530 [INFO] [INFO] Command error:  Container test-databases-postgres-1  Running
 Container test-databases-mysql-1  Running

2025-05-10 12:04:03.576 [INFO] [INFO] testdb_mysql - a38f6583c7ceb10c7107caf0e8484dd2 async pool initialized in 0.03s
2025-05-10 12:04:03.576 [INFO] [INFO] Pool status:
{"initialized": true, "alias": "testdb_mysql", "hash": "a38f6583c7ceb10c7107caf0e8484dd2", "min_size": 3, "max_size": 20, "current_size": 3, "in_use": 1, "idle": 2, "active_connections": 0, "shutting_down": false, "metrics": {"total_acquired": 1, "total_released": 0, "current_active": 1, "peak_active": 1, "errors": 0, "timeouts": 0, "last_timeout": null, "avg_acquisition_time": 0.0}}
2025-05-10 12:04:03.577 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 12:04:03.577 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 12:04:03.584 [INFO] [INFO] This sql shoudl be converted to bative backend: SELECT table_name FROM information_schema.tables WHERE table_schema = DATABASE() AND table_name = ? vs SELECT table_name FROM information_schema.tables WHERE table_schema = DATABASE() AND table_name = ?
2025-05-10 12:04:03.584 [INFO] [INFO] Pool status:
{"initialized": true, "alias": "testdb_mysql", "hash": "a38f6583c7ceb10c7107caf0e8484dd2", "min_size": 3, "max_size": 20, "current_size": 3, "in_use": 0, "idle": 3, "active_connections": 1, "shutting_down": false, "metrics": {"total_acquired": 1, "total_released": 1, "current_active": 0, "peak_active": 1, "errors": 0, "timeouts": 0, "last_timeout": null, "avg_acquisition_time": 0.0}}
2025-05-10 12:04:04.397 [INFO] [INFO] Pool a38f6583c7ceb10c7107caf0e8484dd2 marked as shutting down, no new connections allowed
2025-05-10 12:04:04.397 [ERROR] [ERROR] Error closing pool for a38f6583c7ceb10c7107caf0e8484dd2: object NoneType can't be used in 'await' expression
2025-05-10 12:04:04.401 [INFO] [INFO] Tearing down test environment...
2025-05-10 12:21:04.571 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 12:21:04.571 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 12:21:04.580 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 12:21:04.580 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 12:21:04.584 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 12:21:04.584 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 12:21:07.936 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 12:21:07.936 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 12:21:07.952 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 12:21:07.952 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 12:21:07.957 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 12:21:07.957 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 12:21:07.980 [INFO] [INFO] Setting up test environment...
2025-05-10 12:21:07.980 [INFO] [INFO] Removing .\.pytest_cache
2025-05-10 12:21:08.039 [INFO] [INFO] Test files in this session: {'c:\\Users\\Phil\\Desktop\\Projects\\shared-libs\\python\\databases\\tests\\test_dal.py'}
2025-05-10 12:21:08.039 [INFO] [INFO] Found Docker Compose file for c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\test_dal.py: c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml
2025-05-10 12:21:08.047 [INFO] [INFO] Detected the following services in c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml:
2025-05-10 12:21:08.047 [INFO] [INFO]   - mysql: localhost:3307 (container port: 3306)
2025-05-10 12:21:08.047 [INFO] [INFO]   - postgres: localhost:5433 (container port: 5432)
2025-05-10 12:21:08.047 [INFO] [INFO] Running command: docker-compose -f c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml -p test-databases up -d
2025-05-10 12:21:08.483 [INFO] [INFO] Command error:  Container test-databases-postgres-1  Running
 Container test-databases-mysql-1  Running

2025-05-10 12:21:08.551 [INFO] [INFO] testdb_mysql - a38f6583c7ceb10c7107caf0e8484dd2 async pool initialized in 0.05s
2025-05-10 12:21:08.552 [INFO] [INFO] Pool status:
{"initialized": true, "alias": "testdb_mysql", "hash": "a38f6583c7ceb10c7107caf0e8484dd2", "min_size": 3, "max_size": 20, "current_size": 3, "in_use": 1, "idle": 2, "active_connections": 0, "shutting_down": false, "metrics": {"total_acquired": 1, "total_released": 0, "current_active": 1, "peak_active": 1, "errors": 0, "timeouts": 0, "last_timeout": null, "avg_acquisition_time": 0.0}}
2025-05-10 12:21:08.552 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 12:21:08.552 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 12:21:08.561 [INFO] [INFO] This sql shoudl be converted to bative backend: SELECT table_name FROM information_schema.tables WHERE table_schema = DATABASE() AND table_name = %s vs SELECT table_name FROM information_schema.tables WHERE table_schema = DATABASE() AND table_name = %s
2025-05-10 12:21:08.690 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_schema = DATABASE() AND table_name = ?
params: ('test_products_d905e5b5',)
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:21:08.692 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_schema = DATABASE() AND table_name = ?
params: ('test_products_d905e5b5_meta',)
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:21:08.694 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_schema = DATABASE() AND table_name = ?
params: ('test_products_d905e5b5_history',)
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:21:08.694 [INFO] [INFO] This sql shoudl be converted to bative backend: 
            CREATE TABLE IF NOT EXISTS test_products_d905e5b5 (
                updated_at TEXT, price TEXT, id VARCHAR(36) PRIMARY KEY, name TEXT, created_at TEXT, created_by TEXT, updated_by TEXT, deleted_at TEXT
            ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
         vs 
            CREATE TABLE IF NOT EXISTS test_products_d905e5b5 (
                updated_at TEXT, price TEXT, id VARCHAR(36) PRIMARY KEY, name TEXT, created_at TEXT, created_by TEXT, updated_by TEXT, deleted_at TEXT
            ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
        
2025-05-10 12:21:08.804 [INFO] [INFO] AsyncConnection.execute:
SQL: 
            CREATE TABLE IF NOT EXISTS test_products_d905e5b5 (
                updated_at TEXT, price TEXT, id VARCHAR(36) PRIMARY KEY, name TEXT, created_at TEXT, created_by TEXT, updated_by TEXT, 
params: ()
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:21:08.805 [INFO] [INFO] This sql shoudl be converted to bative backend: 
            CREATE TABLE IF NOT EXISTS test_products_d905e5b5_meta (
                name VARCHAR(255) PRIMARY KEY,
                type VARCHAR(50)
            ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
         vs 
            CREATE TABLE IF NOT EXISTS test_products_d905e5b5_meta (
                name VARCHAR(255) PRIMARY KEY,
                type VARCHAR(50)
            ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
        
2025-05-10 12:21:08.845 [INFO] [INFO] AsyncConnection.execute:
SQL: 
            CREATE TABLE IF NOT EXISTS test_products_d905e5b5_meta (
                name VARCHAR(255) PRIMARY KEY,
                type VARCHAR(50)
            ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb
params: ()
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:21:08.846 [INFO] [INFO] This sql shoudl be converted to bative backend: 
            CREATE TABLE IF NOT EXISTS test_products_d905e5b5_history (
                updated_at TEXT, price TEXT, id VARCHAR(36), name TEXT, created_at TEXT, created_by TEXT, updated_by TEXT, deleted_at TEXT, version INT, history_timestamp TEXT, history_user_id TEXT, history_comment TEXT,
                PRIMARY KEY (id, version)
            ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
         vs 
            CREATE TABLE IF NOT EXISTS test_products_d905e5b5_history (
                updated_at TEXT, price TEXT, id VARCHAR(36), name TEXT, created_at TEXT, created_by TEXT, updated_by TEXT, deleted_at TEXT, version INT, history_timestamp TEXT, history_user_id TEXT, history_comment TEXT,
                PRIMARY KEY (id, version)
            ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
        
2025-05-10 12:21:08.889 [INFO] [INFO] AsyncConnection.execute:
SQL: 
            CREATE TABLE IF NOT EXISTS test_products_d905e5b5_history (
                updated_at TEXT, price TEXT, id VARCHAR(36), name TEXT, created_at TEXT, created_by TEXT, updated_by TEXT, dele
params: ()
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:21:08.892 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_schema = DATABASE() AND table_name = ?
params: ('test_products_d905e5b5_meta',)
timeout: None
tags: None
result: [('test_products_d905e5b5_meta',)]
----------------------
2025-05-10 12:21:08.894 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_schema = DATABASE() AND table_name = ?
params: ('test_products_d905e5b5_meta',)
timeout: None
tags: None
result: [('test_products_d905e5b5_meta',)]
----------------------
2025-05-10 12:21:08.895 [INFO] [INFO] This sql shoudl be converted to bative backend: SELECT name, type FROM test_products_d905e5b5_meta vs SELECT name, type FROM test_products_d905e5b5_meta
2025-05-10 12:21:08.909 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT name, type FROM test_products_d905e5b5_meta
params: ()
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:21:08.909 [INFO] [INFO] We need to add a new field to test_products_d905e5b5: updated_at
2025-05-10 12:21:08.910 [INFO] [INFO] This sql shoudl be converted to bative backend: INSERT INTO test_products_d905e5b5_meta VALUES (%s, %s) AS new ON DUPLICATE KEY UPDATE type=new.type vs INSERT INTO test_products_d905e5b5_meta VALUES (%s, %s) AS new ON DUPLICATE KEY UPDATE type=new.type
2025-05-10 12:21:08.915 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_products_d905e5b5_meta VALUES (?, ?) AS new ON DUPLICATE KEY UPDATE type=new.type
params: ('updated_at', 'str')
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:21:08.915 [INFO] [INFO] This sql shoudl be converted to bative backend: ALTER TABLE test_products_d905e5b5 ADD COLUMN updated_at TEXT vs ALTER TABLE test_products_d905e5b5 ADD COLUMN updated_at TEXT
2025-05-10 12:21:09.646 [WARN] [WARN] Max retries (3) exceeded for _execute_statement_async: (1060, "Duplicate column name 'updated_at'")
2025-05-10 12:21:09.647 [INFO] [INFO] Pool status:
{"initialized": true, "alias": "testdb_mysql", "hash": "a38f6583c7ceb10c7107caf0e8484dd2", "min_size": 3, "max_size": 20, "current_size": 2, "in_use": 0, "idle": 2, "active_connections": 1, "shutting_down": false, "metrics": {"total_acquired": 1, "total_released": 1, "current_active": 0, "peak_active": 1, "errors": 0, "timeouts": 0, "last_timeout": null, "avg_acquisition_time": 0.0}}
2025-05-10 12:21:10.599 [INFO] [INFO] Pool a38f6583c7ceb10c7107caf0e8484dd2 marked as shutting down, no new connections allowed
2025-05-10 12:21:10.599 [ERROR] [ERROR] Error closing pool for a38f6583c7ceb10c7107caf0e8484dd2: object NoneType can't be used in 'await' expression
2025-05-10 12:21:10.607 [INFO] [INFO] Tearing down test environment...
2025-05-10 12:25:45.403 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 12:25:45.403 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 12:25:45.414 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 12:25:45.414 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 12:25:45.418 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 12:25:45.418 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 12:25:48.888 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 12:25:48.889 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 12:25:48.897 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 12:25:48.897 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 12:25:48.900 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 12:25:48.900 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 12:25:48.918 [INFO] [INFO] Setting up test environment...
2025-05-10 12:25:48.918 [INFO] [INFO] Removing .\.pytest_cache
2025-05-10 12:25:48.955 [INFO] [INFO] Test files in this session: {'c:\\Users\\Phil\\Desktop\\Projects\\shared-libs\\python\\databases\\tests\\test_dal.py'}
2025-05-10 12:25:48.956 [INFO] [INFO] Found Docker Compose file for c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\test_dal.py: c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml
2025-05-10 12:25:48.960 [INFO] [INFO] Detected the following services in c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml:
2025-05-10 12:25:48.960 [INFO] [INFO]   - mysql: localhost:3307 (container port: 3306)
2025-05-10 12:25:48.960 [INFO] [INFO]   - postgres: localhost:5433 (container port: 5432)
2025-05-10 12:25:48.960 [INFO] [INFO] Running command: docker-compose -f c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml -p test-databases up -d
2025-05-10 12:25:49.426 [INFO] [INFO] Command error:  Container test-databases-mysql-1  Running
 Container test-databases-postgres-1  Running

2025-05-10 12:25:49.505 [INFO] [INFO] testdb_mysql - a38f6583c7ceb10c7107caf0e8484dd2 async pool initialized in 0.05s
2025-05-10 12:25:49.505 [INFO] [INFO] Pool status:
{"initialized": true, "alias": "testdb_mysql", "hash": "a38f6583c7ceb10c7107caf0e8484dd2", "min_size": 3, "max_size": 20, "current_size": 3, "in_use": 1, "idle": 2, "active_connections": 0, "shutting_down": false, "metrics": {"total_acquired": 1, "total_released": 0, "current_active": 1, "peak_active": 1, "errors": 0, "timeouts": 0, "last_timeout": null, "avg_acquisition_time": 0.0}}
2025-05-10 12:25:49.506 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 12:25:49.506 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 12:25:49.515 [INFO] [INFO] This sql shoudl be converted to bative backend: SELECT table_name FROM information_schema.tables WHERE table_schema = DATABASE() AND table_name = %s vs SELECT table_name FROM information_schema.tables WHERE table_schema = DATABASE() AND table_name = %s
2025-05-10 12:25:49.523 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_schema = DATABASE() AND table_name = ?
params: ('test_products_5d64041b',)
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:25:49.525 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_schema = DATABASE() AND table_name = ?
params: ('test_products_5d64041b_meta',)
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:25:49.527 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_schema = DATABASE() AND table_name = ?
params: ('test_products_5d64041b_history',)
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:25:49.527 [INFO] [INFO] This sql shoudl be converted to bative backend: 
            CREATE TABLE IF NOT EXISTS test_products_5d64041b (
                name TEXT, created_at TEXT, updated_at TEXT, price TEXT, id VARCHAR(36) PRIMARY KEY, created_by TEXT, updated_by TEXT, deleted_at TEXT
            ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
         vs 
            CREATE TABLE IF NOT EXISTS test_products_5d64041b (
                name TEXT, created_at TEXT, updated_at TEXT, price TEXT, id VARCHAR(36) PRIMARY KEY, created_by TEXT, updated_by TEXT, deleted_at TEXT
            ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
        
2025-05-10 12:25:49.585 [INFO] [INFO] AsyncConnection.execute:
SQL: 
            CREATE TABLE IF NOT EXISTS test_products_5d64041b (
                name TEXT, created_at TEXT, updated_at TEXT, price TEXT, id VARCHAR(36) PRIMARY KEY, created_by TEXT, updated_by TEXT, 
params: ()
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:25:49.585 [INFO] [INFO] This sql shoudl be converted to bative backend: 
            CREATE TABLE IF NOT EXISTS test_products_5d64041b_meta (
                name VARCHAR(255) PRIMARY KEY,
                type VARCHAR(50)
            ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
         vs 
            CREATE TABLE IF NOT EXISTS test_products_5d64041b_meta (
                name VARCHAR(255) PRIMARY KEY,
                type VARCHAR(50)
            ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
        
2025-05-10 12:25:49.624 [INFO] [INFO] AsyncConnection.execute:
SQL: 
            CREATE TABLE IF NOT EXISTS test_products_5d64041b_meta (
                name VARCHAR(255) PRIMARY KEY,
                type VARCHAR(50)
            ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb
params: ()
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:25:49.624 [INFO] [INFO] This sql shoudl be converted to bative backend: 
            CREATE TABLE IF NOT EXISTS test_products_5d64041b_history (
                name TEXT, created_at TEXT, updated_at TEXT, price TEXT, id VARCHAR(36), created_by TEXT, updated_by TEXT, deleted_at TEXT, version INT, history_timestamp TEXT, history_user_id TEXT, history_comment TEXT,
                PRIMARY KEY (id, version)
            ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
         vs 
            CREATE TABLE IF NOT EXISTS test_products_5d64041b_history (
                name TEXT, created_at TEXT, updated_at TEXT, price TEXT, id VARCHAR(36), created_by TEXT, updated_by TEXT, deleted_at TEXT, version INT, history_timestamp TEXT, history_user_id TEXT, history_comment TEXT,
                PRIMARY KEY (id, version)
            ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
        
2025-05-10 12:25:49.667 [INFO] [INFO] AsyncConnection.execute:
SQL: 
            CREATE TABLE IF NOT EXISTS test_products_5d64041b_history (
                name TEXT, created_at TEXT, updated_at TEXT, price TEXT, id VARCHAR(36), created_by TEXT, updated_by TEXT, dele
params: ()
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:25:49.669 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_schema = DATABASE() AND table_name = ?
params: ('test_products_5d64041b_meta',)
timeout: None
tags: None
result: [('test_products_5d64041b_meta',)]
----------------------
2025-05-10 12:25:49.674 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_schema = DATABASE() AND table_name = ?
params: ('test_products_5d64041b_meta',)
timeout: None
tags: None
result: [('test_products_5d64041b_meta',)]
----------------------
2025-05-10 12:25:49.674 [INFO] [INFO] This sql shoudl be converted to bative backend: SELECT name, type FROM test_products_5d64041b_meta vs SELECT name, type FROM test_products_5d64041b_meta
2025-05-10 12:25:49.679 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT name, type FROM test_products_5d64041b_meta
params: ()
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:25:49.679 [INFO] [INFO] We need to add a new field to test_products_5d64041b: name
2025-05-10 12:25:49.679 [INFO] [INFO] This sql shoudl be converted to bative backend: INSERT INTO test_products_5d64041b_meta VALUES (%s, %s) AS new ON DUPLICATE KEY UPDATE type=new.type vs INSERT INTO test_products_5d64041b_meta VALUES (%s, %s) AS new ON DUPLICATE KEY UPDATE type=new.type
2025-05-10 12:25:49.681 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_products_5d64041b_meta VALUES (?, ?) AS new ON DUPLICATE KEY UPDATE type=new.type
params: ('name', 'str')
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:25:49.681 [INFO] [INFO] We need to add a new field to test_products_5d64041b: created_at
2025-05-10 12:25:49.682 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_products_5d64041b_meta VALUES (?, ?) AS new ON DUPLICATE KEY UPDATE type=new.type
params: ('created_at', 'str')
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:25:49.683 [INFO] [INFO] We need to add a new field to test_products_5d64041b: updated_at
2025-05-10 12:25:49.684 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_products_5d64041b_meta VALUES (?, ?) AS new ON DUPLICATE KEY UPDATE type=new.type
params: ('updated_at', 'str')
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:25:49.684 [INFO] [INFO] We need to add a new field to test_products_5d64041b: price
2025-05-10 12:25:49.686 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_products_5d64041b_meta VALUES (?, ?) AS new ON DUPLICATE KEY UPDATE type=new.type
params: ('price', 'str')
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:25:49.686 [INFO] [INFO] We need to add a new field to test_products_5d64041b: id
2025-05-10 12:25:49.692 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_products_5d64041b_meta VALUES (?, ?) AS new ON DUPLICATE KEY UPDATE type=new.type
params: ('id', 'str')
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:25:49.693 [INFO] [INFO] This sql shoudl be converted to bative backend: SELECT COUNT(*) FROM information_schema.columns WHERE table_name = %s AND column_name = %s AND table_schema = DATABASE() vs SELECT COUNT(*) FROM information_schema.columns WHERE table_name = %s AND column_name = %s AND table_schema = DATABASE()
2025-05-10 12:25:49.702 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT COUNT(*) FROM information_schema.columns WHERE table_name = ? AND column_name = ? AND table_schema = DATABASE()
params: ('test_products_5d64041b', 'id')
timeout: None
tags: None
result: [(1,)]
----------------------
2025-05-10 12:25:49.708 [INFO] [INFO] AsyncConnection.executemany:
SQL: INSERT INTO test_products_5d64041b_meta VALUES (?, ?) AS new ON DUPLICATE KEY UPDATE type=new.type
params: [('name', 'str'), ('price', 'float'), ('id', 'str'), ('created_at', 'str'), ('updated_at', 'str')]
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:25:49.708 [INFO] [INFO] This sql shoudl be converted to bative backend: INSERT INTO test_products_5d64041b (name, created_at, updated_at, price, id) VALUES (%s, %s, %s, %s, %s) ON DUPLICATE KEY UPDATE name=VALUES(name), created_at=VALUES(created_at), updated_at=VALUES(updated_at), price=VALUES(price) vs INSERT INTO test_products_5d64041b (name, created_at, updated_at, price, id) VALUES (%s, %s, %s, %s, %s) ON DUPLICATE KEY UPDATE name=VALUES(name), created_at=VALUES(created_at), updated_at=VALUES(updated_at), price=VALUES(price)
2025-05-10 12:25:49.720 [INFO] [INFO] AsyncConnection.executemany:
SQL: INSERT INTO test_products_5d64041b (name, created_at, updated_at, price, id) VALUES (?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE name=VALUES(name), created_at=VALUES(created_at), updated_at=VALUES(updated_
params: [('Product A', '2025-05-10T11:25:49.515147', '2025-05-10T11:25:49.515147', 10.99, '67934411-dd2b-4a69-9fd9-2bc4cc63ad83'), ('Product B', '2025-05-10T11:25:49.515200', '2025-05-10T11:25:49.515200', 24.
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:25:49.721 [INFO] [INFO] This sql shoudl be converted to bative backend: SELECT id, MAX(version) as max_version FROM test_products_5d64041b_history WHERE id IN (%s,%s,%s) GROUP BY id vs SELECT id, MAX(version) as max_version FROM test_products_5d64041b_history WHERE id IN (%s,%s,%s) GROUP BY id
2025-05-10 12:25:49.728 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT id, MAX(version) as max_version FROM test_products_5d64041b_history WHERE id IN (?,?,?) GROUP BY id
params: ('67934411-dd2b-4a69-9fd9-2bc4cc63ad83', 'e81f5ca4-5626-4068-8894-3b0f1561993e', '7837e3e5-cacf-4490-a64c-40c8dda5b12f')
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:25:49.728 [INFO] [INFO] This sql shoudl be converted to bative backend: INSERT INTO test_products_5d64041b_history (name, created_at, updated_at, price, id, version, history_timestamp, history_user_id, history_comment) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s) vs INSERT INTO test_products_5d64041b_history (name, created_at, updated_at, price, id, version, history_timestamp, history_user_id, history_comment) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s)
2025-05-10 12:25:49.735 [INFO] [INFO] AsyncConnection.executemany:
SQL: INSERT INTO test_products_5d64041b_history (name, created_at, updated_at, price, id, version, history_timestamp, history_user_id, history_comment) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)
params: [('Product A', '2025-05-10T11:25:49.515147', '2025-05-10T11:25:49.515147', 10.99, '67934411-dd2b-4a69-9fd9-2bc4cc63ad83', 1, '2025-05-10T11:25:49.728204', None, None), ('Product B', '2025-05-10T11:25:
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:25:49.735 [INFO] [INFO] This sql shoudl be converted to bative backend: SELECT * FROM test_products_5d64041b WHERE deleted_at IS NULL AND price < %s vs SELECT * FROM test_products_5d64041b WHERE deleted_at IS NULL AND price < %s
2025-05-10 12:25:49.737 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT * FROM test_products_5d64041b WHERE deleted_at IS NULL AND price < ?
params: (20,)
timeout: None
tags: None
result: [('Product A', '2025-05-10T11:25:49.515147', '2025-05-10T11:25:49.515147', '10.99', '67934411-dd2b-4a69-9fd9-2bc4cc63ad83', None, None, None), ('Product C', '2025-05-10T11:25:49.515224', '2025-05-10T1
----------------------
2025-05-10 12:25:49.737 [INFO] [INFO] This sql shoudl be converted to bative backend: SELECT column_name, data_type FROM information_schema.columns WHERE table_name = %s AND table_schema = DATABASE() vs SELECT column_name, data_type FROM information_schema.columns WHERE table_name = %s AND table_schema = DATABASE()
2025-05-10 12:25:49.740 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT column_name, data_type FROM information_schema.columns WHERE table_name = ? AND table_schema = DATABASE()
params: ('test_products_5d64041b',)
timeout: None
tags: None
result: [('created_at', 'text'), ('created_by', 'text'), ('deleted_at', 'text'), ('id', 'varchar'), ('name', 'text'), ('price', 'text'), ('updated_at', 'text'), ('updated_by', 'text')]
----------------------
2025-05-10 12:25:49.740 [INFO] [INFO] This sql shoudl be converted to bative backend: DELETE FROM test_products_5d64041b WHERE id = %s vs DELETE FROM test_products_5d64041b WHERE id = %s
2025-05-10 12:25:49.742 [INFO] [INFO] AsyncConnection.execute:
SQL: DELETE FROM test_products_5d64041b WHERE id = ?
params: ('67934411-dd2b-4a69-9fd9-2bc4cc63ad83',)
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:25:49.744 [INFO] [INFO] AsyncConnection.execute:
SQL: DELETE FROM test_products_5d64041b WHERE id = ?
params: ('e81f5ca4-5626-4068-8894-3b0f1561993e',)
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:25:49.745 [INFO] [INFO] AsyncConnection.execute:
SQL: DELETE FROM test_products_5d64041b WHERE id = ?
params: ('7837e3e5-cacf-4490-a64c-40c8dda5b12f',)
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:25:49.746 [INFO] [INFO] Pool status:
{"initialized": true, "alias": "testdb_mysql", "hash": "a38f6583c7ceb10c7107caf0e8484dd2", "min_size": 3, "max_size": 20, "current_size": 2, "in_use": 0, "idle": 2, "active_connections": 1, "shutting_down": false, "metrics": {"total_acquired": 1, "total_released": 1, "current_active": 0, "peak_active": 1, "errors": 0, "timeouts": 0, "last_timeout": null, "avg_acquisition_time": 0.0}}
2025-05-10 12:25:49.748 [INFO] [INFO] Pool a38f6583c7ceb10c7107caf0e8484dd2 marked as shutting down, no new connections allowed
2025-05-10 12:25:49.749 [ERROR] [ERROR] Error closing pool for a38f6583c7ceb10c7107caf0e8484dd2: object NoneType can't be used in 'await' expression
2025-05-10 12:25:49.754 [INFO] [INFO] Tearing down test environment...
2025-05-10 12:25:58.820 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 12:25:58.820 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 12:25:58.830 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 12:25:58.830 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 12:25:58.833 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 12:25:58.833 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 12:25:58.852 [INFO] [INFO] Setting up test environment...
2025-05-10 12:25:58.852 [INFO] [INFO] Removing .\.pytest_cache
2025-05-10 12:25:58.889 [INFO] [INFO] Test files in this session: {'c:\\Users\\Phil\\Desktop\\Projects\\shared-libs\\python\\databases\\tests\\test_dal.py'}
2025-05-10 12:25:58.889 [INFO] [INFO] Found Docker Compose file for c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\test_dal.py: c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml
2025-05-10 12:25:58.893 [INFO] [INFO] Detected the following services in c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml:
2025-05-10 12:25:58.893 [INFO] [INFO]   - mysql: localhost:3307 (container port: 3306)
2025-05-10 12:25:58.894 [INFO] [INFO]   - postgres: localhost:5433 (container port: 5432)
2025-05-10 12:25:58.894 [INFO] [INFO] Running command: docker-compose -f c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml -p test-databases up -d
2025-05-10 12:25:59.222 [INFO] [INFO] Command error:  Container test-databases-postgres-1  Running
 Container test-databases-mysql-1  Running

2025-05-10 12:25:59.269 [INFO] [INFO] testdb_mysql - a38f6583c7ceb10c7107caf0e8484dd2 async pool initialized in 0.03s
2025-05-10 12:25:59.269 [INFO] [INFO] Pool status:
{"initialized": true, "alias": "testdb_mysql", "hash": "a38f6583c7ceb10c7107caf0e8484dd2", "min_size": 3, "max_size": 20, "current_size": 3, "in_use": 1, "idle": 2, "active_connections": 0, "shutting_down": false, "metrics": {"total_acquired": 1, "total_released": 0, "current_active": 1, "peak_active": 1, "errors": 0, "timeouts": 0, "last_timeout": null, "avg_acquisition_time": 0.0}}
2025-05-10 12:25:59.269 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 12:25:59.269 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 12:25:59.277 [INFO] [INFO] This sql shoudl be converted to bative backend: SELECT table_name FROM information_schema.tables WHERE table_schema = DATABASE() AND table_name = %s vs SELECT table_name FROM information_schema.tables WHERE table_schema = DATABASE() AND table_name = %s
2025-05-10 12:25:59.282 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_schema = DATABASE() AND table_name = ?
params: ('test_employees_587d9fd5',)
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:25:59.285 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_schema = DATABASE() AND table_name = ?
params: ('test_employees_587d9fd5_meta',)
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:25:59.286 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_schema = DATABASE() AND table_name = ?
params: ('test_employees_587d9fd5_history',)
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:25:59.287 [INFO] [INFO] This sql shoudl be converted to bative backend: 
            CREATE TABLE IF NOT EXISTS test_employees_587d9fd5 (
                updated_at TEXT, name TEXT, id VARCHAR(36) PRIMARY KEY, department TEXT, created_at TEXT, created_by TEXT, updated_by TEXT, deleted_at TEXT
            ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
         vs 
            CREATE TABLE IF NOT EXISTS test_employees_587d9fd5 (
                updated_at TEXT, name TEXT, id VARCHAR(36) PRIMARY KEY, department TEXT, created_at TEXT, created_by TEXT, updated_by TEXT, deleted_at TEXT
            ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
        
2025-05-10 12:25:59.329 [INFO] [INFO] AsyncConnection.execute:
SQL: 
            CREATE TABLE IF NOT EXISTS test_employees_587d9fd5 (
                updated_at TEXT, name TEXT, id VARCHAR(36) PRIMARY KEY, department TEXT, created_at TEXT, created_by TEXT, updated_by 
params: ()
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:25:59.330 [INFO] [INFO] This sql shoudl be converted to bative backend: 
            CREATE TABLE IF NOT EXISTS test_employees_587d9fd5_meta (
                name VARCHAR(255) PRIMARY KEY,
                type VARCHAR(50)
            ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
         vs 
            CREATE TABLE IF NOT EXISTS test_employees_587d9fd5_meta (
                name VARCHAR(255) PRIMARY KEY,
                type VARCHAR(50)
            ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
        
2025-05-10 12:25:59.369 [INFO] [INFO] AsyncConnection.execute:
SQL: 
            CREATE TABLE IF NOT EXISTS test_employees_587d9fd5_meta (
                name VARCHAR(255) PRIMARY KEY,
                type VARCHAR(50)
            ) ENGINE=InnoDB DEFAULT CHARSET=utf8m
params: ()
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:25:59.369 [INFO] [INFO] This sql shoudl be converted to bative backend: 
            CREATE TABLE IF NOT EXISTS test_employees_587d9fd5_history (
                updated_at TEXT, name TEXT, id VARCHAR(36), department TEXT, created_at TEXT, created_by TEXT, updated_by TEXT, deleted_at TEXT, version INT, history_timestamp TEXT, history_user_id TEXT, history_comment TEXT,
                PRIMARY KEY (id, version)
            ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
         vs 
            CREATE TABLE IF NOT EXISTS test_employees_587d9fd5_history (
                updated_at TEXT, name TEXT, id VARCHAR(36), department TEXT, created_at TEXT, created_by TEXT, updated_by TEXT, deleted_at TEXT, version INT, history_timestamp TEXT, history_user_id TEXT, history_comment TEXT,
                PRIMARY KEY (id, version)
            ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
        
2025-05-10 12:25:59.410 [INFO] [INFO] AsyncConnection.execute:
SQL: 
            CREATE TABLE IF NOT EXISTS test_employees_587d9fd5_history (
                updated_at TEXT, name TEXT, id VARCHAR(36), department TEXT, created_at TEXT, created_by TEXT, updated_by TEXT
params: ()
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:25:59.412 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_schema = DATABASE() AND table_name = ?
params: ('test_employees_587d9fd5_meta',)
timeout: None
tags: None
result: [('test_employees_587d9fd5_meta',)]
----------------------
2025-05-10 12:25:59.414 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_schema = DATABASE() AND table_name = ?
params: ('test_employees_587d9fd5_meta',)
timeout: None
tags: None
result: [('test_employees_587d9fd5_meta',)]
----------------------
2025-05-10 12:25:59.414 [INFO] [INFO] This sql shoudl be converted to bative backend: SELECT name, type FROM test_employees_587d9fd5_meta vs SELECT name, type FROM test_employees_587d9fd5_meta
2025-05-10 12:25:59.417 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT name, type FROM test_employees_587d9fd5_meta
params: ()
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:25:59.418 [INFO] [INFO] We need to add a new field to test_employees_587d9fd5: updated_at
2025-05-10 12:25:59.418 [INFO] [INFO] This sql shoudl be converted to bative backend: INSERT INTO test_employees_587d9fd5_meta VALUES (%s, %s) AS new ON DUPLICATE KEY UPDATE type=new.type vs INSERT INTO test_employees_587d9fd5_meta VALUES (%s, %s) AS new ON DUPLICATE KEY UPDATE type=new.type
2025-05-10 12:25:59.421 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_employees_587d9fd5_meta VALUES (?, ?) AS new ON DUPLICATE KEY UPDATE type=new.type
params: ('updated_at', 'str')
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:25:59.421 [INFO] [INFO] We need to add a new field to test_employees_587d9fd5: name
2025-05-10 12:25:59.423 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_employees_587d9fd5_meta VALUES (?, ?) AS new ON DUPLICATE KEY UPDATE type=new.type
params: ('name', 'str')
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:25:59.423 [INFO] [INFO] We need to add a new field to test_employees_587d9fd5: id
2025-05-10 12:25:59.425 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_employees_587d9fd5_meta VALUES (?, ?) AS new ON DUPLICATE KEY UPDATE type=new.type
params: ('id', 'str')
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:25:59.425 [INFO] [INFO] We need to add a new field to test_employees_587d9fd5: department
2025-05-10 12:25:59.427 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_employees_587d9fd5_meta VALUES (?, ?) AS new ON DUPLICATE KEY UPDATE type=new.type
params: ('department', 'str')
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:25:59.427 [INFO] [INFO] We need to add a new field to test_employees_587d9fd5: created_at
2025-05-10 12:25:59.429 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_employees_587d9fd5_meta VALUES (?, ?) AS new ON DUPLICATE KEY UPDATE type=new.type
params: ('created_at', 'str')
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:25:59.430 [INFO] [INFO] This sql shoudl be converted to bative backend: SELECT COUNT(*) FROM information_schema.columns WHERE table_name = %s AND column_name = %s AND table_schema = DATABASE() vs SELECT COUNT(*) FROM information_schema.columns WHERE table_name = %s AND column_name = %s AND table_schema = DATABASE()
2025-05-10 12:25:59.432 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT COUNT(*) FROM information_schema.columns WHERE table_name = ? AND column_name = ? AND table_schema = DATABASE()
params: ('test_employees_587d9fd5', 'created_at')
timeout: None
tags: None
result: [(1,)]
----------------------
2025-05-10 12:25:59.440 [INFO] [INFO] AsyncConnection.executemany:
SQL: INSERT INTO test_employees_587d9fd5_meta VALUES (?, ?) AS new ON DUPLICATE KEY UPDATE type=new.type
params: [('name', 'str'), ('department', 'str'), ('id', 'str'), ('created_at', 'str'), ('updated_at', 'str')]
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:25:59.440 [INFO] [INFO] This sql shoudl be converted to bative backend: INSERT INTO test_employees_587d9fd5 (updated_at, name, id, department, created_at) VALUES (%s, %s, %s, %s, %s) ON DUPLICATE KEY UPDATE updated_at=VALUES(updated_at), name=VALUES(name), department=VALUES(department), created_at=VALUES(created_at) vs INSERT INTO test_employees_587d9fd5 (updated_at, name, id, department, created_at) VALUES (%s, %s, %s, %s, %s) ON DUPLICATE KEY UPDATE updated_at=VALUES(updated_at), name=VALUES(name), department=VALUES(department), created_at=VALUES(created_at)
2025-05-10 12:25:59.450 [INFO] [INFO] AsyncConnection.executemany:
SQL: INSERT INTO test_employees_587d9fd5 (updated_at, name, id, department, created_at) VALUES (?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE updated_at=VALUES(updated_at), name=VALUES(name), department=VALUES(de
params: [('2025-05-10T11:25:59.276755', 'John', 'af0cc989-df6f-420f-bb0a-4bb2798f6c75', 'Engineering', '2025-05-10T11:25:59.276755'), ('2025-05-10T11:25:59.276810', 'Lisa', '9e140734-c4cb-435b-a978-f857867866
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:25:59.451 [INFO] [INFO] This sql shoudl be converted to bative backend: SELECT id, MAX(version) as max_version FROM test_employees_587d9fd5_history WHERE id IN (%s,%s,%s,%s) GROUP BY id vs SELECT id, MAX(version) as max_version FROM test_employees_587d9fd5_history WHERE id IN (%s,%s,%s,%s) GROUP BY id
2025-05-10 12:25:59.454 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT id, MAX(version) as max_version FROM test_employees_587d9fd5_history WHERE id IN (?,?,?,?) GROUP BY id
params: ('af0cc989-df6f-420f-bb0a-4bb2798f6c75', '9e140734-c4cb-435b-a978-f857867866b9', '431596a6-9c8d-4b68-a5f2-3f40e027733c', '5b85a9aa-75fe-423a-8443-1946a1d2dd8b')
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:25:59.454 [INFO] [INFO] This sql shoudl be converted to bative backend: INSERT INTO test_employees_587d9fd5_history (updated_at, name, id, department, created_at, version, history_timestamp, history_user_id, history_comment) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s) vs INSERT INTO test_employees_587d9fd5_history (updated_at, name, id, department, created_at, version, history_timestamp, history_user_id, history_comment) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s)
2025-05-10 12:25:59.462 [INFO] [INFO] AsyncConnection.executemany:
SQL: INSERT INTO test_employees_587d9fd5_history (updated_at, name, id, department, created_at, version, history_timestamp, history_user_id, history_comment) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)
params: [('2025-05-10T11:25:59.276755', 'John', 'af0cc989-df6f-420f-bb0a-4bb2798f6c75', 'Engineering', '2025-05-10T11:25:59.276755', 1, '2025-05-10T11:25:59.454125', None, None), ('2025-05-10T11:25:59.276810'
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:25:59.462 [INFO] [INFO] This sql shoudl be converted to bative backend: SELECT COUNT(*) FROM test_employees_587d9fd5 WHERE deleted_at IS NULL vs SELECT COUNT(*) FROM test_employees_587d9fd5 WHERE deleted_at IS NULL
2025-05-10 12:25:59.463 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT COUNT(*) FROM test_employees_587d9fd5 WHERE deleted_at IS NULL
params: ()
timeout: None
tags: None
result: [(4,)]
----------------------
2025-05-10 12:25:59.464 [INFO] [INFO] This sql shoudl be converted to bative backend: SELECT COUNT(*) FROM test_employees_587d9fd5 WHERE deleted_at IS NULL AND department = %s vs SELECT COUNT(*) FROM test_employees_587d9fd5 WHERE deleted_at IS NULL AND department = %s
2025-05-10 12:25:59.465 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT COUNT(*) FROM test_employees_587d9fd5 WHERE deleted_at IS NULL AND department = ?
params: ('Engineering',)
timeout: None
tags: None
result: [(2,)]
----------------------
2025-05-10 12:25:59.465 [INFO] [INFO] This sql shoudl be converted to bative backend: DELETE FROM test_employees_587d9fd5 WHERE id = %s vs DELETE FROM test_employees_587d9fd5 WHERE id = %s
2025-05-10 12:25:59.467 [INFO] [INFO] AsyncConnection.execute:
SQL: DELETE FROM test_employees_587d9fd5 WHERE id = ?
params: ('af0cc989-df6f-420f-bb0a-4bb2798f6c75',)
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:25:59.468 [INFO] [INFO] AsyncConnection.execute:
SQL: DELETE FROM test_employees_587d9fd5 WHERE id = ?
params: ('9e140734-c4cb-435b-a978-f857867866b9',)
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:25:59.470 [INFO] [INFO] AsyncConnection.execute:
SQL: DELETE FROM test_employees_587d9fd5 WHERE id = ?
params: ('431596a6-9c8d-4b68-a5f2-3f40e027733c',)
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:25:59.472 [INFO] [INFO] AsyncConnection.execute:
SQL: DELETE FROM test_employees_587d9fd5 WHERE id = ?
params: ('5b85a9aa-75fe-423a-8443-1946a1d2dd8b',)
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:25:59.473 [INFO] [INFO] Pool status:
{"initialized": true, "alias": "testdb_mysql", "hash": "a38f6583c7ceb10c7107caf0e8484dd2", "min_size": 3, "max_size": 20, "current_size": 2, "in_use": 0, "idle": 2, "active_connections": 1, "shutting_down": false, "metrics": {"total_acquired": 1, "total_released": 1, "current_active": 0, "peak_active": 1, "errors": 0, "timeouts": 0, "last_timeout": null, "avg_acquisition_time": 0.0}}
2025-05-10 12:25:59.475 [INFO] [INFO] Pool a38f6583c7ceb10c7107caf0e8484dd2 marked as shutting down, no new connections allowed
2025-05-10 12:25:59.475 [ERROR] [ERROR] Error closing pool for a38f6583c7ceb10c7107caf0e8484dd2: object NoneType can't be used in 'await' expression
2025-05-10 12:25:59.481 [INFO] [INFO] Tearing down test environment...
2025-05-10 12:26:07.554 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 12:26:07.554 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 12:26:07.566 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 12:26:07.567 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 12:26:07.571 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 12:26:07.571 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 12:26:07.595 [INFO] [INFO] Setting up test environment...
2025-05-10 12:26:07.595 [INFO] [INFO] Removing .\.pytest_cache
2025-05-10 12:26:07.639 [INFO] [INFO] Test files in this session: {'c:\\Users\\Phil\\Desktop\\Projects\\shared-libs\\python\\databases\\tests\\test_dal.py'}
2025-05-10 12:26:07.639 [INFO] [INFO] Found Docker Compose file for c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\test_dal.py: c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml
2025-05-10 12:26:07.645 [INFO] [INFO] Detected the following services in c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml:
2025-05-10 12:26:07.646 [INFO] [INFO]   - mysql: localhost:3307 (container port: 3306)
2025-05-10 12:26:07.646 [INFO] [INFO]   - postgres: localhost:5433 (container port: 5432)
2025-05-10 12:26:07.646 [INFO] [INFO] Running command: docker-compose -f c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml -p test-databases up -d
2025-05-10 12:26:08.000 [INFO] [INFO] Command error:  Container test-databases-mysql-1  Running
 Container test-databases-postgres-1  Running

2025-05-10 12:26:08.047 [INFO] [INFO] testdb_mysql - a38f6583c7ceb10c7107caf0e8484dd2 async pool initialized in 0.03s
2025-05-10 12:26:08.048 [INFO] [INFO] Pool status:
{"initialized": true, "alias": "testdb_mysql", "hash": "a38f6583c7ceb10c7107caf0e8484dd2", "min_size": 3, "max_size": 20, "current_size": 3, "in_use": 1, "idle": 2, "active_connections": 0, "shutting_down": false, "metrics": {"total_acquired": 1, "total_released": 0, "current_active": 1, "peak_active": 1, "errors": 0, "timeouts": 0, "last_timeout": null, "avg_acquisition_time": 0.0}}
2025-05-10 12:26:08.048 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 12:26:08.048 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 12:26:08.055 [INFO] [INFO] This sql shoudl be converted to bative backend: SELECT table_name FROM information_schema.tables WHERE table_schema = DATABASE() AND table_name = %s vs SELECT table_name FROM information_schema.tables WHERE table_schema = DATABASE() AND table_name = %s
2025-05-10 12:26:08.059 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_schema = DATABASE() AND table_name = ?
params: ('test_users_3ba4e272',)
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:26:08.061 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_schema = DATABASE() AND table_name = ?
params: ('test_users_3ba4e272_meta',)
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:26:08.065 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_schema = DATABASE() AND table_name = ?
params: ('test_users_3ba4e272_history',)
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:26:08.065 [INFO] [INFO] This sql shoudl be converted to bative backend: 
            CREATE TABLE IF NOT EXISTS test_users_3ba4e272 (
                name TEXT, id VARCHAR(36) PRIMARY KEY, created_at TEXT, updated_at TEXT, created_by TEXT, updated_by TEXT, deleted_at TEXT
            ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
         vs 
            CREATE TABLE IF NOT EXISTS test_users_3ba4e272 (
                name TEXT, id VARCHAR(36) PRIMARY KEY, created_at TEXT, updated_at TEXT, created_by TEXT, updated_by TEXT, deleted_at TEXT
            ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
        
2025-05-10 12:26:08.114 [INFO] [INFO] AsyncConnection.execute:
SQL: 
            CREATE TABLE IF NOT EXISTS test_users_3ba4e272 (
                name TEXT, id VARCHAR(36) PRIMARY KEY, created_at TEXT, updated_at TEXT, created_by TEXT, updated_by TEXT, deleted_at TEXT
params: ()
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:26:08.114 [INFO] [INFO] This sql shoudl be converted to bative backend: 
            CREATE TABLE IF NOT EXISTS test_users_3ba4e272_meta (
                name VARCHAR(255) PRIMARY KEY,
                type VARCHAR(50)
            ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
         vs 
            CREATE TABLE IF NOT EXISTS test_users_3ba4e272_meta (
                name VARCHAR(255) PRIMARY KEY,
                type VARCHAR(50)
            ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
        
2025-05-10 12:26:08.157 [INFO] [INFO] AsyncConnection.execute:
SQL: 
            CREATE TABLE IF NOT EXISTS test_users_3ba4e272_meta (
                name VARCHAR(255) PRIMARY KEY,
                type VARCHAR(50)
            ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 C
params: ()
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:26:08.157 [INFO] [INFO] This sql shoudl be converted to bative backend: 
            CREATE TABLE IF NOT EXISTS test_users_3ba4e272_history (
                name TEXT, id VARCHAR(36), created_at TEXT, updated_at TEXT, created_by TEXT, updated_by TEXT, deleted_at TEXT, version INT, history_timestamp TEXT, history_user_id TEXT, history_comment TEXT,
                PRIMARY KEY (id, version)
            ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
         vs 
            CREATE TABLE IF NOT EXISTS test_users_3ba4e272_history (
                name TEXT, id VARCHAR(36), created_at TEXT, updated_at TEXT, created_by TEXT, updated_by TEXT, deleted_at TEXT, version INT, history_timestamp TEXT, history_user_id TEXT, history_comment TEXT,
                PRIMARY KEY (id, version)
            ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
        
2025-05-10 12:26:08.208 [INFO] [INFO] AsyncConnection.execute:
SQL: 
            CREATE TABLE IF NOT EXISTS test_users_3ba4e272_history (
                name TEXT, id VARCHAR(36), created_at TEXT, updated_at TEXT, created_by TEXT, updated_by TEXT, deleted_at TEXT, ve
params: ()
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:26:08.211 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_schema = DATABASE() AND table_name = ?
params: ('test_users_3ba4e272_meta',)
timeout: None
tags: None
result: [('test_users_3ba4e272_meta',)]
----------------------
2025-05-10 12:26:08.213 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_schema = DATABASE() AND table_name = ?
params: ('test_users_3ba4e272_meta',)
timeout: None
tags: None
result: [('test_users_3ba4e272_meta',)]
----------------------
2025-05-10 12:26:08.213 [INFO] [INFO] This sql shoudl be converted to bative backend: SELECT name, type FROM test_users_3ba4e272_meta vs SELECT name, type FROM test_users_3ba4e272_meta
2025-05-10 12:26:08.216 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT name, type FROM test_users_3ba4e272_meta
params: ()
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:26:08.216 [INFO] [INFO] We need to add a new field to test_users_3ba4e272: name
2025-05-10 12:26:08.216 [INFO] [INFO] This sql shoudl be converted to bative backend: INSERT INTO test_users_3ba4e272_meta VALUES (%s, %s) AS new ON DUPLICATE KEY UPDATE type=new.type vs INSERT INTO test_users_3ba4e272_meta VALUES (%s, %s) AS new ON DUPLICATE KEY UPDATE type=new.type
2025-05-10 12:26:08.218 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_users_3ba4e272_meta VALUES (?, ?) AS new ON DUPLICATE KEY UPDATE type=new.type
params: ('name', 'str')
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:26:08.218 [INFO] [INFO] We need to add a new field to test_users_3ba4e272: id
2025-05-10 12:26:08.219 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_users_3ba4e272_meta VALUES (?, ?) AS new ON DUPLICATE KEY UPDATE type=new.type
params: ('id', 'str')
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:26:08.220 [INFO] [INFO] We need to add a new field to test_users_3ba4e272: created_at
2025-05-10 12:26:08.221 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_users_3ba4e272_meta VALUES (?, ?) AS new ON DUPLICATE KEY UPDATE type=new.type
params: ('created_at', 'str')
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:26:08.222 [INFO] [INFO] We need to add a new field to test_users_3ba4e272: updated_at
2025-05-10 12:26:08.225 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_users_3ba4e272_meta VALUES (?, ?) AS new ON DUPLICATE KEY UPDATE type=new.type
params: ('updated_at', 'str')
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:26:08.225 [INFO] [INFO] This sql shoudl be converted to bative backend: SELECT COUNT(*) FROM information_schema.columns WHERE table_name = %s AND column_name = %s AND table_schema = DATABASE() vs SELECT COUNT(*) FROM information_schema.columns WHERE table_name = %s AND column_name = %s AND table_schema = DATABASE()
2025-05-10 12:26:08.228 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT COUNT(*) FROM information_schema.columns WHERE table_name = ? AND column_name = ? AND table_schema = DATABASE()
params: ('test_users_3ba4e272', 'updated_at')
timeout: None
tags: None
result: [(1,)]
----------------------
2025-05-10 12:26:08.231 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_schema = DATABASE() AND table_name = ?
params: ('test_users_3ba4e272_meta',)
timeout: None
tags: None
result: [('test_users_3ba4e272_meta',)]
----------------------
2025-05-10 12:26:08.233 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_schema = DATABASE() AND table_name = ?
params: ('test_users_3ba4e272_meta',)
timeout: None
tags: None
result: [('test_users_3ba4e272_meta',)]
----------------------
2025-05-10 12:26:08.234 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT name, type FROM test_users_3ba4e272_meta
params: ()
timeout: None
tags: None
result: [('created_at', 'str'), ('id', 'str'), ('name', 'str'), ('updated_at', 'str')]
----------------------
2025-05-10 12:26:08.236 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT COUNT(*) FROM information_schema.columns WHERE table_name = ? AND column_name = ? AND table_schema = DATABASE()
params: ('test_users_3ba4e272', 'updated_at')
timeout: None
tags: None
result: [(1,)]
----------------------
2025-05-10 12:26:08.237 [INFO] [INFO] This sql shoudl be converted to bative backend: INSERT INTO test_users_3ba4e272 (name, id, created_at, updated_at) VALUES (%s, %s, %s, %s) ON DUPLICATE KEY UPDATE name=VALUES(name), created_at=VALUES(created_at), updated_at=VALUES(updated_at) vs INSERT INTO test_users_3ba4e272 (name, id, created_at, updated_at) VALUES (%s, %s, %s, %s) ON DUPLICATE KEY UPDATE name=VALUES(name), created_at=VALUES(created_at), updated_at=VALUES(updated_at)
2025-05-10 12:26:08.241 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_users_3ba4e272 (name, id, created_at, updated_at) VALUES (?, ?, ?, ?) ON DUPLICATE KEY UPDATE name=VALUES(name), created_at=VALUES(created_at), updated_at=VALUES(updated_at)
params: ('David', '042bed26-f818-4d0a-a95c-9d99126915f9', '2025-05-10T11:26:08.055645', '2025-05-10T11:26:08.055645')
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:26:08.242 [INFO] [INFO] This sql shoudl be converted to bative backend: SELECT MAX(version) FROM test_users_3ba4e272_history WHERE id = %s vs SELECT MAX(version) FROM test_users_3ba4e272_history WHERE id = %s
2025-05-10 12:26:08.247 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT MAX(version) FROM test_users_3ba4e272_history WHERE id = ?
params: ('042bed26-f818-4d0a-a95c-9d99126915f9',)
timeout: None
tags: None
result: [(None,)]
----------------------
2025-05-10 12:26:08.247 [INFO] [INFO] This sql shoudl be converted to bative backend: INSERT INTO test_users_3ba4e272_history (name, id, created_at, updated_at, version, history_timestamp, history_user_id, history_comment) VALUES (%s, %s, %s, %s, %s, %s, %s, %s) vs INSERT INTO test_users_3ba4e272_history (name, id, created_at, updated_at, version, history_timestamp, history_user_id, history_comment) VALUES (%s, %s, %s, %s, %s, %s, %s, %s)
2025-05-10 12:26:08.249 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_users_3ba4e272_history (name, id, created_at, updated_at, version, history_timestamp, history_user_id, history_comment) VALUES (?, ?, ?, ?, ?, ?, ?, ?)
params: ('David', '042bed26-f818-4d0a-a95c-9d99126915f9', '2025-05-10T11:26:08.055645', '2025-05-10T11:26:08.055645', 1, '2025-05-10T11:26:08.247603', None, None)
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:26:08.249 [INFO] [INFO] This sql shoudl be converted to bative backend: SELECT * FROM test_users_3ba4e272 WHERE id = %s vs SELECT * FROM test_users_3ba4e272 WHERE id = %s
2025-05-10 12:26:08.251 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT * FROM test_users_3ba4e272 WHERE id = ?
params: ('042bed26-f818-4d0a-a95c-9d99126915f9',)
timeout: None
tags: None
result: [('David', '042bed26-f818-4d0a-a95c-9d99126915f9', '2025-05-10T11:26:08.055645', '2025-05-10T11:26:08.055645', None, None, None)]
----------------------
2025-05-10 12:26:08.251 [INFO] [INFO] This sql shoudl be converted to bative backend: UPDATE test_users_3ba4e272 SET deleted_at = %s, updated_at = %s, updated_by = %s WHERE id = %s vs UPDATE test_users_3ba4e272 SET deleted_at = %s, updated_at = %s, updated_by = %s WHERE id = %s
2025-05-10 12:26:08.253 [INFO] [INFO] AsyncConnection.execute:
SQL: UPDATE test_users_3ba4e272 SET deleted_at = ?, updated_at = ?, updated_by = ? WHERE id = ?
params: ('2025-05-10T11:26:08.251417', '2025-05-10T11:26:08.251417', None, '042bed26-f818-4d0a-a95c-9d99126915f9')
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:26:08.254 [INFO] [INFO] Pool status:
{"initialized": true, "alias": "testdb_mysql", "hash": "a38f6583c7ceb10c7107caf0e8484dd2", "min_size": 3, "max_size": 20, "current_size": 2, "in_use": 0, "idle": 2, "active_connections": 1, "shutting_down": false, "metrics": {"total_acquired": 1, "total_released": 1, "current_active": 0, "peak_active": 1, "errors": 0, "timeouts": 0, "last_timeout": null, "avg_acquisition_time": 0.0}}
2025-05-10 12:26:08.428 [INFO] [INFO] Pool a38f6583c7ceb10c7107caf0e8484dd2 marked as shutting down, no new connections allowed
2025-05-10 12:26:08.429 [ERROR] [ERROR] Error closing pool for a38f6583c7ceb10c7107caf0e8484dd2: object NoneType can't be used in 'await' expression
2025-05-10 12:26:08.434 [INFO] [INFO] Tearing down test environment...
2025-05-10 12:27:31.158 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 12:27:31.159 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 12:27:31.168 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 12:27:31.168 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 12:27:31.171 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 12:27:31.171 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 12:27:31.189 [INFO] [INFO] Setting up test environment...
2025-05-10 12:27:31.189 [INFO] [INFO] Removing .\.pytest_cache
2025-05-10 12:27:31.221 [INFO] [INFO] Test files in this session: {'c:\\Users\\Phil\\Desktop\\Projects\\shared-libs\\python\\databases\\tests\\test_dal.py'}
2025-05-10 12:27:31.222 [INFO] [INFO] Found Docker Compose file for c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\test_dal.py: c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml
2025-05-10 12:27:31.228 [INFO] [INFO] Detected the following services in c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml:
2025-05-10 12:27:31.228 [INFO] [INFO]   - mysql: localhost:3307 (container port: 3306)
2025-05-10 12:27:31.228 [INFO] [INFO]   - postgres: localhost:5433 (container port: 5432)
2025-05-10 12:27:31.228 [INFO] [INFO] Running command: docker-compose -f c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml -p test-databases up -d
2025-05-10 12:27:31.547 [INFO] [INFO] Command error:  Container test-databases-mysql-1  Running
 Container test-databases-postgres-1  Running

2025-05-10 12:27:31.556 [INFO] [INFO] Thread 16352: Requesting sync connection for test_sqlite_b3def7c7.db
2025-05-10 12:27:31.559 [INFO] [INFO] Thread 16352: Sync connection created and cached for test_sqlite_b3def7c7.db in 0.00s
2025-05-10 12:27:31.566 [INFO] [INFO] test_sqlite_b3def7c7.db - 440ae80cadf0cb6cdefe022899609bc4 async pool initialized in 0.00s
2025-05-10 12:27:31.567 [INFO] [INFO] Pool status:
{"initialized": true, "alias": "test_sqlite_b3def7c7.db", "hash": "440ae80cadf0cb6cdefe022899609bc4", "min_size": 1, "max_size": 1, "current_size": 1, "in_use": 1, "idle": 0, "active_connections": 0, "shutting_down": false, "metrics": {"total_acquired": 1, "total_released": 0, "current_active": 1, "peak_active": 1, "errors": 0, "timeouts": 0, "last_timeout": null, "avg_acquisition_time": 0.0}}
2025-05-10 12:27:31.567 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 12:27:31.567 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 12:27:31.586 [INFO] [INFO] This sql shoudl be converted to bative backend: SELECT name FROM sqlite_master WHERE type='table' AND name=? vs SELECT name FROM sqlite_master WHERE type='table' AND name=?
2025-05-10 12:27:31.594 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT name FROM sqlite_master WHERE type='table' AND name=?
params: ('test_accounts_f8bbd80d',)
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:27:31.595 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT name FROM sqlite_master WHERE type='table' AND name=?
params: ('test_accounts_f8bbd80d_meta',)
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:27:31.595 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT name FROM sqlite_master WHERE type='table' AND name=?
params: ('test_accounts_f8bbd80d_history',)
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:27:31.595 [INFO] [INFO] This sql shoudl be converted to bative backend: 
            CREATE TABLE IF NOT EXISTS test_accounts_f8bbd80d (
                account TEXT, balance TEXT, id TEXT PRIMARY KEY, created_at TEXT, updated_at TEXT, created_by TEXT, updated_by TEXT, deleted_at TEXT
            )
         vs 
            CREATE TABLE IF NOT EXISTS test_accounts_f8bbd80d (
                account TEXT, balance TEXT, id TEXT PRIMARY KEY, created_at TEXT, updated_at TEXT, created_by TEXT, updated_by TEXT, deleted_at TEXT
            )
        
2025-05-10 12:27:31.597 [INFO] [INFO] AsyncConnection.execute:
SQL: 
            CREATE TABLE IF NOT EXISTS test_accounts_f8bbd80d (
                account TEXT, balance TEXT, id TEXT PRIMARY KEY, created_at TEXT, updated_at TEXT, created_by TEXT, updated_by TEXT, de
params: ()
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:27:31.598 [INFO] [INFO] This sql shoudl be converted to bative backend: 
            CREATE TABLE IF NOT EXISTS test_accounts_f8bbd80d_meta (
                name TEXT PRIMARY KEY,
                type TEXT
            )
         vs 
            CREATE TABLE IF NOT EXISTS test_accounts_f8bbd80d_meta (
                name TEXT PRIMARY KEY,
                type TEXT
            )
        
2025-05-10 12:27:31.598 [INFO] [INFO] AsyncConnection.execute:
SQL: 
            CREATE TABLE IF NOT EXISTS test_accounts_f8bbd80d_meta (
                name TEXT PRIMARY KEY,
                type TEXT
            )
        
params: ()
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:27:31.599 [INFO] [INFO] This sql shoudl be converted to bative backend: 
            CREATE TABLE IF NOT EXISTS test_accounts_f8bbd80d_history (
                account TEXT, balance TEXT, id TEXT, created_at TEXT, updated_at TEXT, created_by TEXT, updated_by TEXT, deleted_at TEXT, version INTEGER, history_timestamp TEXT, history_user_id TEXT, history_comment TEXT,
                PRIMARY KEY (id, version)
            )
         vs 
            CREATE TABLE IF NOT EXISTS test_accounts_f8bbd80d_history (
                account TEXT, balance TEXT, id TEXT, created_at TEXT, updated_at TEXT, created_by TEXT, updated_by TEXT, deleted_at TEXT, version INTEGER, history_timestamp TEXT, history_user_id TEXT, history_comment TEXT,
                PRIMARY KEY (id, version)
            )
        
2025-05-10 12:27:31.599 [INFO] [INFO] AsyncConnection.execute:
SQL: 
            CREATE TABLE IF NOT EXISTS test_accounts_f8bbd80d_history (
                account TEXT, balance TEXT, id TEXT, created_at TEXT, updated_at TEXT, created_by TEXT, updated_by TEXT, delete
params: ()
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:27:31.600 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT name FROM sqlite_master WHERE type='table' AND name=?
params: ('test_accounts_f8bbd80d_meta',)
timeout: None
tags: None
result: [('test_accounts_f8bbd80d_meta',)]
----------------------
2025-05-10 12:27:31.600 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT name FROM sqlite_master WHERE type='table' AND name=?
params: ('test_accounts_f8bbd80d_meta',)
timeout: None
tags: None
result: [('test_accounts_f8bbd80d_meta',)]
----------------------
2025-05-10 12:27:31.601 [INFO] [INFO] This sql shoudl be converted to bative backend: SELECT name, type FROM test_accounts_f8bbd80d_meta vs SELECT name, type FROM test_accounts_f8bbd80d_meta
2025-05-10 12:27:31.601 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT name, type FROM test_accounts_f8bbd80d_meta
params: ()
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:27:31.601 [INFO] [INFO] We need to add a new field to test_accounts_f8bbd80d: account
2025-05-10 12:27:31.601 [INFO] [INFO] This sql shoudl be converted to bative backend: INSERT OR REPLACE INTO test_accounts_f8bbd80d_meta VALUES (?, ?) vs INSERT OR REPLACE INTO test_accounts_f8bbd80d_meta VALUES (?, ?)
2025-05-10 12:27:31.602 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT OR REPLACE INTO test_accounts_f8bbd80d_meta VALUES (?, ?)
params: ('account', 'str')
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:27:31.602 [INFO] [INFO] We need to add a new field to test_accounts_f8bbd80d: balance
2025-05-10 12:27:31.602 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT OR REPLACE INTO test_accounts_f8bbd80d_meta VALUES (?, ?)
params: ('balance', 'int')
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:27:31.602 [INFO] [INFO] We need to add a new field to test_accounts_f8bbd80d: id
2025-05-10 12:27:31.603 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT OR REPLACE INTO test_accounts_f8bbd80d_meta VALUES (?, ?)
params: ('id', 'str')
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:27:31.603 [INFO] [INFO] We need to add a new field to test_accounts_f8bbd80d: created_at
2025-05-10 12:27:31.604 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT OR REPLACE INTO test_accounts_f8bbd80d_meta VALUES (?, ?)
params: ('created_at', 'str')
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:27:31.605 [INFO] [INFO] We need to add a new field to test_accounts_f8bbd80d: updated_at
2025-05-10 12:27:31.606 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT OR REPLACE INTO test_accounts_f8bbd80d_meta VALUES (?, ?)
params: ('updated_at', 'str')
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:27:31.607 [INFO] [INFO] This sql shoudl be converted to bative backend: PRAGMA table_info(test_accounts_f8bbd80d) vs PRAGMA table_info(test_accounts_f8bbd80d)
2025-05-10 12:27:31.608 [INFO] [INFO] AsyncConnection.execute:
SQL: PRAGMA table_info(test_accounts_f8bbd80d)
params: ()
timeout: None
tags: None
result: [(0, 'account', 'TEXT', 0, None, 0), (1, 'balance', 'TEXT', 0, None, 0), (2, 'id', 'TEXT', 0, None, 1), (3, 'created_at', 'TEXT', 0, None, 0), (4, 'updated_at', 'TEXT', 0, None, 0), (5, 'created_by', 
----------------------
2025-05-10 12:27:31.608 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT name FROM sqlite_master WHERE type='table' AND name=?
params: ('test_accounts_f8bbd80d_meta',)
timeout: None
tags: None
result: [('test_accounts_f8bbd80d_meta',)]
----------------------
2025-05-10 12:27:31.609 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT name FROM sqlite_master WHERE type='table' AND name=?
params: ('test_accounts_f8bbd80d_meta',)
timeout: None
tags: None
result: [('test_accounts_f8bbd80d_meta',)]
----------------------
2025-05-10 12:27:31.609 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT name, type FROM test_accounts_f8bbd80d_meta
params: ()
timeout: None
tags: None
result: [('account', 'str'), ('balance', 'int'), ('id', 'str'), ('created_at', 'str'), ('updated_at', 'str')]
----------------------
2025-05-10 12:27:31.610 [INFO] [INFO] AsyncConnection.execute:
SQL: PRAGMA table_info(test_accounts_f8bbd80d)
params: ()
timeout: None
tags: None
result: [(0, 'account', 'TEXT', 0, None, 0), (1, 'balance', 'TEXT', 0, None, 0), (2, 'id', 'TEXT', 0, None, 1), (3, 'created_at', 'TEXT', 0, None, 0), (4, 'updated_at', 'TEXT', 0, None, 0), (5, 'created_by', 
----------------------
2025-05-10 12:27:31.610 [INFO] [INFO] This sql shoudl be converted to bative backend: INSERT OR REPLACE INTO test_accounts_f8bbd80d (account, balance, id, created_at, updated_at) VALUES (?, ?, ?, ?, ?) vs INSERT OR REPLACE INTO test_accounts_f8bbd80d (account, balance, id, created_at, updated_at) VALUES (?, ?, ?, ?, ?)
2025-05-10 12:27:31.611 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT OR REPLACE INTO test_accounts_f8bbd80d (account, balance, id, created_at, updated_at) VALUES (?, ?, ?, ?, ?)
params: ('Savings', '1000', '693e1765-b6c2-4da4-89f8-ea764a9c2a2c', '2025-05-10T11:27:31.586223', '2025-05-10T11:27:31.586223')
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:27:31.611 [INFO] [INFO] This sql shoudl be converted to bative backend: SELECT MAX(version) FROM test_accounts_f8bbd80d_history WHERE id = ? vs SELECT MAX(version) FROM test_accounts_f8bbd80d_history WHERE id = ?
2025-05-10 12:27:31.611 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT MAX(version) FROM test_accounts_f8bbd80d_history WHERE id = ?
params: ('693e1765-b6c2-4da4-89f8-ea764a9c2a2c',)
timeout: None
tags: None
result: [(None,)]
----------------------
2025-05-10 12:27:31.611 [INFO] [INFO] This sql shoudl be converted to bative backend: INSERT INTO test_accounts_f8bbd80d_history (account, balance, id, created_at, updated_at, version, history_timestamp, history_user_id, history_comment) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?) vs INSERT INTO test_accounts_f8bbd80d_history (account, balance, id, created_at, updated_at, version, history_timestamp, history_user_id, history_comment) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-05-10 12:27:31.612 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_accounts_f8bbd80d_history (account, balance, id, created_at, updated_at, version, history_timestamp, history_user_id, history_comment) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)
params: ('Savings', '1000', '693e1765-b6c2-4da4-89f8-ea764a9c2a2c', '2025-05-10T11:27:31.586223', '2025-05-10T11:27:31.586223', 1, '2025-05-10T11:27:31.611754', None, None)
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:27:31.612 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT name FROM sqlite_master WHERE type='table' AND name=?
params: ('test_accounts_f8bbd80d',)
timeout: None
tags: None
result: [('test_accounts_f8bbd80d',)]
----------------------
2025-05-10 12:27:31.613 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT name FROM sqlite_master WHERE type='table' AND name=?
params: ('test_accounts_f8bbd80d_meta',)
timeout: None
tags: None
result: [('test_accounts_f8bbd80d_meta',)]
----------------------
2025-05-10 12:27:31.614 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT name FROM sqlite_master WHERE type='table' AND name=?
params: ('test_accounts_f8bbd80d_history',)
timeout: None
tags: None
result: [('test_accounts_f8bbd80d_history',)]
----------------------
2025-05-10 12:27:31.615 [INFO] [INFO] AsyncConnection.execute:
SQL: PRAGMA table_info(test_accounts_f8bbd80d)
params: ()
timeout: None
tags: None
result: [(0, 'account', 'TEXT', 0, None, 0), (1, 'balance', 'TEXT', 0, None, 0), (2, 'id', 'TEXT', 0, None, 1), (3, 'created_at', 'TEXT', 0, None, 0), (4, 'updated_at', 'TEXT', 0, None, 0), (5, 'created_by', 
----------------------
2025-05-10 12:27:31.615 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT name FROM sqlite_master WHERE type='table' AND name=?
params: ('test_accounts_f8bbd80d_meta',)
timeout: None
tags: None
result: [('test_accounts_f8bbd80d_meta',)]
----------------------
2025-05-10 12:27:31.616 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT name FROM sqlite_master WHERE type='table' AND name=?
params: ('test_accounts_f8bbd80d_meta',)
timeout: None
tags: None
result: [('test_accounts_f8bbd80d_meta',)]
----------------------
2025-05-10 12:27:31.616 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT name, type FROM test_accounts_f8bbd80d_meta
params: ()
timeout: None
tags: None
result: [('account', 'str'), ('balance', 'int'), ('id', 'str'), ('created_at', 'str'), ('updated_at', 'str')]
----------------------
2025-05-10 12:27:31.617 [INFO] [INFO] AsyncConnection.execute:
SQL: PRAGMA table_info(test_accounts_f8bbd80d)
params: ()
timeout: None
tags: None
result: [(0, 'account', 'TEXT', 0, None, 0), (1, 'balance', 'TEXT', 0, None, 0), (2, 'id', 'TEXT', 0, None, 1), (3, 'created_at', 'TEXT', 0, None, 0), (4, 'updated_at', 'TEXT', 0, None, 0), (5, 'created_by', 
----------------------
2025-05-10 12:27:31.618 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT name FROM sqlite_master WHERE type='table' AND name=?
params: ('test_accounts_f8bbd80d_meta',)
timeout: None
tags: None
result: [('test_accounts_f8bbd80d_meta',)]
----------------------
2025-05-10 12:27:31.618 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT name FROM sqlite_master WHERE type='table' AND name=?
params: ('test_accounts_f8bbd80d_meta',)
timeout: None
tags: None
result: [('test_accounts_f8bbd80d_meta',)]
----------------------
2025-05-10 12:27:31.619 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT name, type FROM test_accounts_f8bbd80d_meta
params: ()
timeout: None
tags: None
result: [('account', 'str'), ('balance', 'int'), ('id', 'str'), ('created_at', 'str'), ('updated_at', 'str')]
----------------------
2025-05-10 12:27:31.619 [INFO] [INFO] AsyncConnection.execute:
SQL: PRAGMA table_info(test_accounts_f8bbd80d)
params: ()
timeout: None
tags: None
result: [(0, 'account', 'TEXT', 0, None, 0), (1, 'balance', 'TEXT', 0, None, 0), (2, 'id', 'TEXT', 0, None, 1), (3, 'created_at', 'TEXT', 0, None, 0), (4, 'updated_at', 'TEXT', 0, None, 0), (5, 'created_by', 
----------------------
2025-05-10 12:27:31.620 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT OR REPLACE INTO test_accounts_f8bbd80d (account, balance, id, created_at, updated_at) VALUES (?, ?, ?, ?, ?)
params: ('Checking', '500', 'ac2f7d85-d128-4fb0-99a9-543822a07821', '2025-05-10T11:27:31.612455', '2025-05-10T11:27:31.612455')
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:27:31.620 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT MAX(version) FROM test_accounts_f8bbd80d_history WHERE id = ?
params: ('ac2f7d85-d128-4fb0-99a9-543822a07821',)
timeout: None
tags: None
result: [(None,)]
----------------------
2025-05-10 12:27:31.621 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_accounts_f8bbd80d_history (account, balance, id, created_at, updated_at, version, history_timestamp, history_user_id, history_comment) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)
params: ('Checking', '500', 'ac2f7d85-d128-4fb0-99a9-543822a07821', '2025-05-10T11:27:31.612455', '2025-05-10T11:27:31.612455', 1, '2025-05-10T11:27:31.620589', None, None)
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:27:31.628 [INFO] [INFO] This sql shoudl be converted to bative backend: SELECT COUNT(*) FROM test_accounts_f8bbd80d WHERE deleted_at IS NULL vs SELECT COUNT(*) FROM test_accounts_f8bbd80d WHERE deleted_at IS NULL
2025-05-10 12:27:31.629 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT COUNT(*) FROM test_accounts_f8bbd80d WHERE deleted_at IS NULL
params: ()
timeout: None
tags: None
result: [(2,)]
----------------------
2025-05-10 12:27:31.629 [INFO] [INFO] This sql shoudl be converted to bative backend: DELETE FROM test_accounts_f8bbd80d WHERE id = ? vs DELETE FROM test_accounts_f8bbd80d WHERE id = ?
2025-05-10 12:27:31.631 [INFO] [INFO] AsyncConnection.execute:
SQL: DELETE FROM test_accounts_f8bbd80d WHERE id = ?
params: ('693e1765-b6c2-4da4-89f8-ea764a9c2a2c',)
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:27:31.637 [INFO] [INFO] AsyncConnection.execute:
SQL: DELETE FROM test_accounts_f8bbd80d WHERE id = ?
params: ('ac2f7d85-d128-4fb0-99a9-543822a07821',)
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:27:31.641 [INFO] [INFO] Pool status:
{"initialized": true, "alias": "test_sqlite_b3def7c7.db", "hash": "440ae80cadf0cb6cdefe022899609bc4", "min_size": 1, "max_size": 1, "current_size": 1, "in_use": 0, "idle": 1, "active_connections": 1, "shutting_down": false, "metrics": {"total_acquired": 1, "total_released": 1, "current_active": 0, "peak_active": 1, "errors": 0, "timeouts": 0, "last_timeout": null, "avg_acquisition_time": 0.0}}
2025-05-10 12:27:31.646 [INFO] [INFO] Pool 440ae80cadf0cb6cdefe022899609bc4 marked as shutting down, no new connections allowed
2025-05-10 12:27:31.647 [INFO] [INFO] Pool for 440ae80cadf0cb6cdefe022899609bc4 closed
2025-05-10 12:27:31.647 [INFO] [INFO] Tearing down test environment...
2025-05-10 12:27:36.663 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 12:27:36.664 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 12:27:36.673 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 12:27:36.673 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 12:27:36.677 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 12:27:36.677 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 12:27:36.694 [INFO] [INFO] Setting up test environment...
2025-05-10 12:27:36.694 [INFO] [INFO] Removing .\.pytest_cache
2025-05-10 12:27:36.726 [INFO] [INFO] Test files in this session: {'c:\\Users\\Phil\\Desktop\\Projects\\shared-libs\\python\\databases\\tests\\test_dal.py'}
2025-05-10 12:27:36.726 [INFO] [INFO] Found Docker Compose file for c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\test_dal.py: c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml
2025-05-10 12:27:36.734 [INFO] [INFO] Detected the following services in c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml:
2025-05-10 12:27:36.734 [INFO] [INFO]   - mysql: localhost:3307 (container port: 3306)
2025-05-10 12:27:36.734 [INFO] [INFO]   - postgres: localhost:5433 (container port: 5432)
2025-05-10 12:27:36.734 [INFO] [INFO] Running command: docker-compose -f c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml -p test-databases up -d
2025-05-10 12:27:37.064 [INFO] [INFO] Command error:  Container test-databases-mysql-1  Running
 Container test-databases-postgres-1  Running

2025-05-10 12:27:37.080 [INFO] [INFO] Thread 12408: Requesting sync connection for test_sqlite_e30278dd.db
2025-05-10 12:27:37.081 [INFO] [INFO] Thread 12408: Sync connection created and cached for test_sqlite_e30278dd.db in 0.00s
2025-05-10 12:27:37.087 [INFO] [INFO] test_sqlite_e30278dd.db - f34f277378cce1fd3b97fbc16495866b async pool initialized in 0.00s
2025-05-10 12:27:37.088 [INFO] [INFO] Pool status:
{"initialized": true, "alias": "test_sqlite_e30278dd.db", "hash": "f34f277378cce1fd3b97fbc16495866b", "min_size": 1, "max_size": 1, "current_size": 1, "in_use": 1, "idle": 0, "active_connections": 0, "shutting_down": false, "metrics": {"total_acquired": 1, "total_released": 0, "current_active": 1, "peak_active": 1, "errors": 0, "timeouts": 0, "last_timeout": null, "avg_acquisition_time": 0.0}}
2025-05-10 12:27:37.088 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 12:27:37.089 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 12:27:37.100 [INFO] [INFO] This sql shoudl be converted to bative backend: SELECT name FROM sqlite_master WHERE type='table' AND name=? vs SELECT name FROM sqlite_master WHERE type='table' AND name=?
2025-05-10 12:27:37.102 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT name FROM sqlite_master WHERE type='table' AND name=?
params: ('test_orders_a9c0ace8',)
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:27:37.102 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT name FROM sqlite_master WHERE type='table' AND name=?
params: ('test_orders_a9c0ace8_meta',)
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:27:37.103 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT name FROM sqlite_master WHERE type='table' AND name=?
params: ('test_orders_a9c0ace8_history',)
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:27:37.103 [INFO] [INFO] This sql shoudl be converted to bative backend: 
            CREATE TABLE IF NOT EXISTS test_orders_a9c0ace8 (
                order TEXT, id TEXT PRIMARY KEY, created_at TEXT, updated_at TEXT, created_by TEXT, updated_by TEXT, deleted_at TEXT
            )
         vs 
            CREATE TABLE IF NOT EXISTS test_orders_a9c0ace8 (
                order TEXT, id TEXT PRIMARY KEY, created_at TEXT, updated_at TEXT, created_by TEXT, updated_by TEXT, deleted_at TEXT
            )
        
2025-05-10 12:27:37.842 [WARN] [WARN] Max retries (3) exceeded for _execute_statement_async: near "order": syntax error
2025-05-10 12:27:37.842 [INFO] [INFO] Pool status:
{"initialized": true, "alias": "test_sqlite_e30278dd.db", "hash": "f34f277378cce1fd3b97fbc16495866b", "min_size": 1, "max_size": 1, "current_size": 1, "in_use": 0, "idle": 1, "active_connections": 1, "shutting_down": false, "metrics": {"total_acquired": 1, "total_released": 1, "current_active": 0, "peak_active": 1, "errors": 0, "timeouts": 0, "last_timeout": null, "avg_acquisition_time": 0.0}}
2025-05-10 12:27:38.682 [INFO] [INFO] Pool f34f277378cce1fd3b97fbc16495866b marked as shutting down, no new connections allowed
2025-05-10 12:27:38.683 [INFO] [INFO] Pool for f34f277378cce1fd3b97fbc16495866b closed
2025-05-10 12:27:38.684 [INFO] [INFO] Tearing down test environment...
2025-05-10 12:27:44.089 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 12:27:44.090 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 12:27:44.098 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 12:27:44.098 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 12:27:44.101 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 12:27:44.101 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 12:27:44.121 [INFO] [INFO] Setting up test environment...
2025-05-10 12:27:44.121 [INFO] [INFO] Removing .\.pytest_cache
2025-05-10 12:27:44.152 [INFO] [INFO] Test files in this session: {'c:\\Users\\Phil\\Desktop\\Projects\\shared-libs\\python\\databases\\tests\\test_dal.py'}
2025-05-10 12:27:44.153 [INFO] [INFO] Found Docker Compose file for c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\test_dal.py: c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml
2025-05-10 12:27:44.161 [INFO] [INFO] Detected the following services in c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml:
2025-05-10 12:27:44.161 [INFO] [INFO]   - mysql: localhost:3307 (container port: 3306)
2025-05-10 12:27:44.161 [INFO] [INFO]   - postgres: localhost:5433 (container port: 5432)
2025-05-10 12:27:44.161 [INFO] [INFO] Running command: docker-compose -f c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml -p test-databases up -d
2025-05-10 12:27:44.474 [INFO] [INFO] Command error:  Container test-databases-postgres-1  Running
 Container test-databases-mysql-1  Running

2025-05-10 12:27:44.484 [INFO] [INFO] Thread 12672: Requesting sync connection for test_sqlite_4b01fc5b.db
2025-05-10 12:27:44.487 [INFO] [INFO] Thread 12672: Sync connection created and cached for test_sqlite_4b01fc5b.db in 0.00s
2025-05-10 12:27:44.492 [INFO] [INFO] test_sqlite_4b01fc5b.db - a2a7615603fd3b6a2e9a3b18f28528ce async pool initialized in 0.00s
2025-05-10 12:27:44.493 [INFO] [INFO] Pool status:
{"initialized": true, "alias": "test_sqlite_4b01fc5b.db", "hash": "a2a7615603fd3b6a2e9a3b18f28528ce", "min_size": 1, "max_size": 1, "current_size": 1, "in_use": 1, "idle": 0, "active_connections": 0, "shutting_down": false, "metrics": {"total_acquired": 1, "total_released": 0, "current_active": 1, "peak_active": 1, "errors": 0, "timeouts": 0, "last_timeout": null, "avg_acquisition_time": 0.0}}
2025-05-10 12:27:44.493 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 12:27:44.494 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 12:27:44.503 [INFO] [INFO] This sql shoudl be converted to bative backend: SELECT name FROM sqlite_master WHERE type='table' AND name=? vs SELECT name FROM sqlite_master WHERE type='table' AND name=?
2025-05-10 12:27:44.504 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT name FROM sqlite_master WHERE type='table' AND name=?
params: ('test_events_fe232fa7',)
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:27:44.505 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT name FROM sqlite_master WHERE type='table' AND name=?
params: ('test_events_fe232fa7_meta',)
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:27:44.505 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT name FROM sqlite_master WHERE type='table' AND name=?
params: ('test_events_fe232fa7_history',)
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:27:44.505 [INFO] [INFO] This sql shoudl be converted to bative backend: 
            CREATE TABLE IF NOT EXISTS test_events_fe232fa7 (
                title TEXT, event_date TEXT, id TEXT PRIMARY KEY, created_at TEXT, updated_at TEXT, created_by TEXT, updated_by TEXT, deleted_at TEXT
            )
         vs 
            CREATE TABLE IF NOT EXISTS test_events_fe232fa7 (
                title TEXT, event_date TEXT, id TEXT PRIMARY KEY, created_at TEXT, updated_at TEXT, created_by TEXT, updated_by TEXT, deleted_at TEXT
            )
        
2025-05-10 12:27:44.507 [INFO] [INFO] AsyncConnection.execute:
SQL: 
            CREATE TABLE IF NOT EXISTS test_events_fe232fa7 (
                title TEXT, event_date TEXT, id TEXT PRIMARY KEY, created_at TEXT, updated_at TEXT, created_by TEXT, updated_by TEXT, del
params: ()
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:27:44.507 [INFO] [INFO] This sql shoudl be converted to bative backend: 
            CREATE TABLE IF NOT EXISTS test_events_fe232fa7_meta (
                name TEXT PRIMARY KEY,
                type TEXT
            )
         vs 
            CREATE TABLE IF NOT EXISTS test_events_fe232fa7_meta (
                name TEXT PRIMARY KEY,
                type TEXT
            )
        
2025-05-10 12:27:44.508 [INFO] [INFO] AsyncConnection.execute:
SQL: 
            CREATE TABLE IF NOT EXISTS test_events_fe232fa7_meta (
                name TEXT PRIMARY KEY,
                type TEXT
            )
        
params: ()
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:27:44.508 [INFO] [INFO] This sql shoudl be converted to bative backend: 
            CREATE TABLE IF NOT EXISTS test_events_fe232fa7_history (
                title TEXT, event_date TEXT, id TEXT, created_at TEXT, updated_at TEXT, created_by TEXT, updated_by TEXT, deleted_at TEXT, version INTEGER, history_timestamp TEXT, history_user_id TEXT, history_comment TEXT,
                PRIMARY KEY (id, version)
            )
         vs 
            CREATE TABLE IF NOT EXISTS test_events_fe232fa7_history (
                title TEXT, event_date TEXT, id TEXT, created_at TEXT, updated_at TEXT, created_by TEXT, updated_by TEXT, deleted_at TEXT, version INTEGER, history_timestamp TEXT, history_user_id TEXT, history_comment TEXT,
                PRIMARY KEY (id, version)
            )
        
2025-05-10 12:27:44.508 [INFO] [INFO] AsyncConnection.execute:
SQL: 
            CREATE TABLE IF NOT EXISTS test_events_fe232fa7_history (
                title TEXT, event_date TEXT, id TEXT, created_at TEXT, updated_at TEXT, created_by TEXT, updated_by TEXT, deleted
params: ()
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:27:44.509 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT name FROM sqlite_master WHERE type='table' AND name=?
params: ('test_events_fe232fa7_meta',)
timeout: None
tags: None
result: [('test_events_fe232fa7_meta',)]
----------------------
2025-05-10 12:27:44.510 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT name FROM sqlite_master WHERE type='table' AND name=?
params: ('test_events_fe232fa7_meta',)
timeout: None
tags: None
result: [('test_events_fe232fa7_meta',)]
----------------------
2025-05-10 12:27:44.510 [INFO] [INFO] This sql shoudl be converted to bative backend: SELECT name, type FROM test_events_fe232fa7_meta vs SELECT name, type FROM test_events_fe232fa7_meta
2025-05-10 12:27:44.510 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT name, type FROM test_events_fe232fa7_meta
params: ()
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:27:44.510 [INFO] [INFO] We need to add a new field to test_events_fe232fa7: title
2025-05-10 12:27:44.514 [INFO] [INFO] This sql shoudl be converted to bative backend: INSERT OR REPLACE INTO test_events_fe232fa7_meta VALUES (?, ?) vs INSERT OR REPLACE INTO test_events_fe232fa7_meta VALUES (?, ?)
2025-05-10 12:27:44.515 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT OR REPLACE INTO test_events_fe232fa7_meta VALUES (?, ?)
params: ('title', 'str')
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:27:44.516 [INFO] [INFO] We need to add a new field to test_events_fe232fa7: event_date
2025-05-10 12:27:44.516 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT OR REPLACE INTO test_events_fe232fa7_meta VALUES (?, ?)
params: ('event_date', 'event_date')
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:27:44.517 [INFO] [INFO] We need to add a new field to test_events_fe232fa7: id
2025-05-10 12:27:44.518 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT OR REPLACE INTO test_events_fe232fa7_meta VALUES (?, ?)
params: ('id', 'str')
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:27:44.518 [INFO] [INFO] We need to add a new field to test_events_fe232fa7: created_at
2025-05-10 12:27:44.519 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT OR REPLACE INTO test_events_fe232fa7_meta VALUES (?, ?)
params: ('created_at', 'str')
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:27:44.519 [INFO] [INFO] We need to add a new field to test_events_fe232fa7: updated_at
2025-05-10 12:27:44.520 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT OR REPLACE INTO test_events_fe232fa7_meta VALUES (?, ?)
params: ('updated_at', 'str')
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:27:44.520 [INFO] [INFO] This sql shoudl be converted to bative backend: PRAGMA table_info(test_events_fe232fa7) vs PRAGMA table_info(test_events_fe232fa7)
2025-05-10 12:27:44.520 [INFO] [INFO] AsyncConnection.execute:
SQL: PRAGMA table_info(test_events_fe232fa7)
params: ()
timeout: None
tags: None
result: [(0, 'title', 'TEXT', 0, None, 0), (1, 'event_date', 'TEXT', 0, None, 0), (2, 'id', 'TEXT', 0, None, 1), (3, 'created_at', 'TEXT', 0, None, 0), (4, 'updated_at', 'TEXT', 0, None, 0), (5, 'created_by',
----------------------
2025-05-10 12:27:44.521 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT name FROM sqlite_master WHERE type='table' AND name=?
params: ('test_events_fe232fa7_meta',)
timeout: None
tags: None
result: [('test_events_fe232fa7_meta',)]
----------------------
2025-05-10 12:27:44.521 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT name FROM sqlite_master WHERE type='table' AND name=?
params: ('test_events_fe232fa7_meta',)
timeout: None
tags: None
result: [('test_events_fe232fa7_meta',)]
----------------------
2025-05-10 12:27:44.522 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT name, type FROM test_events_fe232fa7_meta
params: ()
timeout: None
tags: None
result: [('title', 'str'), ('event_date', 'event_date'), ('id', 'str'), ('created_at', 'str'), ('updated_at', 'str')]
----------------------
2025-05-10 12:27:44.522 [INFO] [INFO] AsyncConnection.execute:
SQL: PRAGMA table_info(test_events_fe232fa7)
params: ()
timeout: None
tags: None
result: [(0, 'title', 'TEXT', 0, None, 0), (1, 'event_date', 'TEXT', 0, None, 0), (2, 'id', 'TEXT', 0, None, 1), (3, 'created_at', 'TEXT', 0, None, 0), (4, 'updated_at', 'TEXT', 0, None, 0), (5, 'created_by',
----------------------
2025-05-10 12:27:44.522 [INFO] [INFO] This sql shoudl be converted to bative backend: INSERT OR REPLACE INTO test_events_fe232fa7 (title, event_date, id, created_at, updated_at) VALUES (?, ?, ?, ?, ?) vs INSERT OR REPLACE INTO test_events_fe232fa7 (title, event_date, id, created_at, updated_at) VALUES (?, ?, ?, ?, ?)
2025-05-10 12:27:44.523 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT OR REPLACE INTO test_events_fe232fa7 (title, event_date, id, created_at, updated_at) VALUES (?, ?, ?, ?, ?)
params: ('Test Event', '2025-05-11T12:27:44.502577', '9451fc93-0cf2-4a34-b877-1e6d867dc384', '2025-05-10T11:27:44.503058', '2025-05-10T11:27:44.503058')
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:27:44.523 [INFO] [INFO] This sql shoudl be converted to bative backend: SELECT MAX(version) FROM test_events_fe232fa7_history WHERE id = ? vs SELECT MAX(version) FROM test_events_fe232fa7_history WHERE id = ?
2025-05-10 12:27:44.524 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT MAX(version) FROM test_events_fe232fa7_history WHERE id = ?
params: ('9451fc93-0cf2-4a34-b877-1e6d867dc384',)
timeout: None
tags: None
result: [(None,)]
----------------------
2025-05-10 12:27:44.524 [INFO] [INFO] This sql shoudl be converted to bative backend: INSERT INTO test_events_fe232fa7_history (title, event_date, id, created_at, updated_at, version, history_timestamp, history_user_id, history_comment) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?) vs INSERT INTO test_events_fe232fa7_history (title, event_date, id, created_at, updated_at, version, history_timestamp, history_user_id, history_comment) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-05-10 12:27:44.524 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_events_fe232fa7_history (title, event_date, id, created_at, updated_at, version, history_timestamp, history_user_id, history_comment) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)
params: ('Test Event', '2025-05-11T12:27:44.502577', '9451fc93-0cf2-4a34-b877-1e6d867dc384', '2025-05-10T11:27:44.503058', '2025-05-10T11:27:44.503058', 1, '2025-05-10T11:27:44.524322', None, None)
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:27:44.533 [INFO] [INFO] This sql shoudl be converted to bative backend: SELECT * FROM test_events_fe232fa7 WHERE id = ? AND deleted_at IS NULL vs SELECT * FROM test_events_fe232fa7 WHERE id = ? AND deleted_at IS NULL
2025-05-10 12:27:44.535 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT * FROM test_events_fe232fa7 WHERE id = ? AND deleted_at IS NULL
params: ('9451fc93-0cf2-4a34-b877-1e6d867dc384',)
timeout: None
tags: None
result: [('Test Event', '2025-05-11T12:27:44.502577', '9451fc93-0cf2-4a34-b877-1e6d867dc384', '2025-05-10T11:27:44.503058', '2025-05-10T11:27:44.503058', None, None, None)]
----------------------
2025-05-10 12:27:44.537 [INFO] [INFO] This sql shoudl be converted to bative backend: DELETE FROM test_events_fe232fa7 WHERE id = ? vs DELETE FROM test_events_fe232fa7 WHERE id = ?
2025-05-10 12:27:44.539 [INFO] [INFO] AsyncConnection.execute:
SQL: DELETE FROM test_events_fe232fa7 WHERE id = ?
params: ('9451fc93-0cf2-4a34-b877-1e6d867dc384',)
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:27:44.542 [INFO] [INFO] Pool status:
{"initialized": true, "alias": "test_sqlite_4b01fc5b.db", "hash": "a2a7615603fd3b6a2e9a3b18f28528ce", "min_size": 1, "max_size": 1, "current_size": 1, "in_use": 0, "idle": 1, "active_connections": 1, "shutting_down": false, "metrics": {"total_acquired": 1, "total_released": 1, "current_active": 0, "peak_active": 1, "errors": 0, "timeouts": 0, "last_timeout": null, "avg_acquisition_time": 0.0}}
2025-05-10 12:27:44.546 [INFO] [INFO] Pool a2a7615603fd3b6a2e9a3b18f28528ce marked as shutting down, no new connections allowed
2025-05-10 12:27:44.547 [INFO] [INFO] Pool for a2a7615603fd3b6a2e9a3b18f28528ce closed
2025-05-10 12:27:44.547 [INFO] [INFO] Tearing down test environment...
2025-05-10 12:30:27.987 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 12:30:27.987 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 12:30:27.999 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 12:30:27.999 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 12:30:28.003 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 12:30:28.003 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 12:30:41.417 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 12:30:41.417 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 12:30:41.431 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 12:30:41.431 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 12:30:41.435 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 12:30:41.435 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 12:30:41.453 [INFO] [INFO] Setting up test environment...
2025-05-10 12:30:41.454 [INFO] [INFO] Removing .\.pytest_cache
2025-05-10 12:30:41.486 [INFO] [INFO] Test files in this session: {'c:\\Users\\Phil\\Desktop\\Projects\\shared-libs\\python\\databases\\tests\\test_dal.py'}
2025-05-10 12:30:41.486 [INFO] [INFO] Found Docker Compose file for c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\test_dal.py: c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml
2025-05-10 12:30:41.493 [INFO] [INFO] Detected the following services in c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml:
2025-05-10 12:30:41.493 [INFO] [INFO]   - mysql: localhost:3307 (container port: 3306)
2025-05-10 12:30:41.493 [INFO] [INFO]   - postgres: localhost:5433 (container port: 5432)
2025-05-10 12:30:41.493 [INFO] [INFO] Running command: docker-compose -f c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml -p test-databases up -d
2025-05-10 12:30:41.810 [INFO] [INFO] Command error:  Container test-databases-postgres-1  Running
 Container test-databases-mysql-1  Running

2025-05-10 12:30:41.861 [INFO] [INFO] testdb_mysql - a38f6583c7ceb10c7107caf0e8484dd2 async pool initialized in 0.03s
2025-05-10 12:30:41.861 [INFO] [INFO] Pool status:
{"initialized": true, "alias": "testdb_mysql", "hash": "a38f6583c7ceb10c7107caf0e8484dd2", "min_size": 3, "max_size": 20, "current_size": 3, "in_use": 1, "idle": 2, "active_connections": 0, "shutting_down": false, "metrics": {"total_acquired": 1, "total_released": 0, "current_active": 1, "peak_active": 1, "errors": 0, "timeouts": 0, "last_timeout": null, "avg_acquisition_time": 0.0}}
2025-05-10 12:30:41.861 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 12:30:41.861 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 12:30:41.871 [INFO] [INFO] This sql shoudl be converted to bative backend: SELECT table_name FROM information_schema.tables WHERE table_schema = DATABASE() AND table_name = %s vs SELECT table_name FROM information_schema.tables WHERE table_schema = DATABASE() AND table_name = %s
2025-05-10 12:30:41.877 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_schema = DATABASE() AND table_name = ?
params: ('test_users_814d924e',)
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:30:41.880 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_schema = DATABASE() AND table_name = ?
params: ('test_users_814d924e_meta',)
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:30:41.882 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_schema = DATABASE() AND table_name = ?
params: ('test_users_814d924e_history',)
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:30:41.882 [INFO] [INFO] This sql shoudl be converted to bative backend: 
            CREATE TABLE IF NOT EXISTS test_users_814d924e (
                name TEXT, id VARCHAR(36) PRIMARY KEY, created_at TEXT, updated_at TEXT, created_by TEXT, updated_by TEXT, deleted_at TEXT
            ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
         vs 
            CREATE TABLE IF NOT EXISTS test_users_814d924e (
                name TEXT, id VARCHAR(36) PRIMARY KEY, created_at TEXT, updated_at TEXT, created_by TEXT, updated_by TEXT, deleted_at TEXT
            ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
        
2025-05-10 12:30:41.935 [INFO] [INFO] AsyncConnection.execute:
SQL: 
            CREATE TABLE IF NOT EXISTS test_users_814d924e (
                name TEXT, id VARCHAR(36) PRIMARY KEY, created_at TEXT, updated_at TEXT, created_by TEXT, updated_by TEXT, deleted_at TEXT
params: ()
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:30:41.935 [INFO] [INFO] This sql shoudl be converted to bative backend: 
            CREATE TABLE IF NOT EXISTS test_users_814d924e_meta (
                name VARCHAR(255) PRIMARY KEY,
                type VARCHAR(50)
            ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
         vs 
            CREATE TABLE IF NOT EXISTS test_users_814d924e_meta (
                name VARCHAR(255) PRIMARY KEY,
                type VARCHAR(50)
            ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
        
2025-05-10 12:30:41.972 [INFO] [INFO] AsyncConnection.execute:
SQL: 
            CREATE TABLE IF NOT EXISTS test_users_814d924e_meta (
                name VARCHAR(255) PRIMARY KEY,
                type VARCHAR(50)
            ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 C
params: ()
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:30:41.972 [INFO] [INFO] This sql shoudl be converted to bative backend: 
            CREATE TABLE IF NOT EXISTS test_users_814d924e_history (
                name TEXT, id VARCHAR(36), created_at TEXT, updated_at TEXT, created_by TEXT, updated_by TEXT, deleted_at TEXT, version INT, history_timestamp TEXT, history_user_id TEXT, history_comment TEXT,
                PRIMARY KEY (id, version)
            ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
         vs 
            CREATE TABLE IF NOT EXISTS test_users_814d924e_history (
                name TEXT, id VARCHAR(36), created_at TEXT, updated_at TEXT, created_by TEXT, updated_by TEXT, deleted_at TEXT, version INT, history_timestamp TEXT, history_user_id TEXT, history_comment TEXT,
                PRIMARY KEY (id, version)
            ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
        
2025-05-10 12:30:42.011 [INFO] [INFO] AsyncConnection.execute:
SQL: 
            CREATE TABLE IF NOT EXISTS test_users_814d924e_history (
                name TEXT, id VARCHAR(36), created_at TEXT, updated_at TEXT, created_by TEXT, updated_by TEXT, deleted_at TEXT, ve
params: ()
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:30:42.013 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_schema = DATABASE() AND table_name = ?
params: ('test_users_814d924e_meta',)
timeout: None
tags: None
result: [('test_users_814d924e_meta',)]
----------------------
2025-05-10 12:30:42.016 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_schema = DATABASE() AND table_name = ?
params: ('test_users_814d924e_meta',)
timeout: None
tags: None
result: [('test_users_814d924e_meta',)]
----------------------
2025-05-10 12:30:42.016 [INFO] [INFO] This sql shoudl be converted to bative backend: SELECT name, type FROM test_users_814d924e_meta vs SELECT name, type FROM test_users_814d924e_meta
2025-05-10 12:30:42.019 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT name, type FROM test_users_814d924e_meta
params: ()
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:30:42.019 [INFO] [INFO] We need to add a new field to test_users_814d924e: name
2025-05-10 12:30:42.019 [INFO] [INFO] This sql shoudl be converted to bative backend: INSERT INTO test_users_814d924e_meta VALUES (%s, %s) AS new ON DUPLICATE KEY UPDATE type=new.type vs INSERT INTO test_users_814d924e_meta VALUES (%s, %s) AS new ON DUPLICATE KEY UPDATE type=new.type
2025-05-10 12:30:42.021 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_users_814d924e_meta VALUES (?, ?) AS new ON DUPLICATE KEY UPDATE type=new.type
params: ('name', 'str')
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:30:42.021 [INFO] [INFO] We need to add a new field to test_users_814d924e: id
2025-05-10 12:30:42.023 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_users_814d924e_meta VALUES (?, ?) AS new ON DUPLICATE KEY UPDATE type=new.type
params: ('id', 'str')
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:30:42.023 [INFO] [INFO] We need to add a new field to test_users_814d924e: created_at
2025-05-10 12:30:42.026 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_users_814d924e_meta VALUES (?, ?) AS new ON DUPLICATE KEY UPDATE type=new.type
params: ('created_at', 'str')
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:30:42.026 [INFO] [INFO] We need to add a new field to test_users_814d924e: updated_at
2025-05-10 12:30:42.028 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_users_814d924e_meta VALUES (?, ?) AS new ON DUPLICATE KEY UPDATE type=new.type
params: ('updated_at', 'str')
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:30:42.028 [INFO] [INFO] This sql shoudl be converted to bative backend: SELECT COUNT(*) FROM information_schema.columns WHERE table_name = %s AND column_name = %s AND table_schema = DATABASE() vs SELECT COUNT(*) FROM information_schema.columns WHERE table_name = %s AND column_name = %s AND table_schema = DATABASE()
2025-05-10 12:30:42.033 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT COUNT(*) FROM information_schema.columns WHERE table_name = ? AND column_name = ? AND table_schema = DATABASE()
params: ('test_users_814d924e', 'updated_at')
timeout: None
tags: None
result: [(1,)]
----------------------
2025-05-10 12:30:42.035 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_schema = DATABASE() AND table_name = ?
params: ('test_users_814d924e_meta',)
timeout: None
tags: None
result: [('test_users_814d924e_meta',)]
----------------------
2025-05-10 12:30:42.038 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_schema = DATABASE() AND table_name = ?
params: ('test_users_814d924e_meta',)
timeout: None
tags: None
result: [('test_users_814d924e_meta',)]
----------------------
2025-05-10 12:30:42.039 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT name, type FROM test_users_814d924e_meta
params: ()
timeout: None
tags: None
result: [('created_at', 'str'), ('id', 'str'), ('name', 'str'), ('updated_at', 'str')]
----------------------
2025-05-10 12:30:42.041 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT COUNT(*) FROM information_schema.columns WHERE table_name = ? AND column_name = ? AND table_schema = DATABASE()
params: ('test_users_814d924e', 'updated_at')
timeout: None
tags: None
result: [(1,)]
----------------------
2025-05-10 12:30:42.041 [INFO] [INFO] This sql shoudl be converted to bative backend: INSERT INTO test_users_814d924e (name, id, created_at, updated_at) VALUES (%s, %s, %s, %s) ON DUPLICATE KEY UPDATE name=VALUES(name), created_at=VALUES(created_at), updated_at=VALUES(updated_at) vs INSERT INTO test_users_814d924e (name, id, created_at, updated_at) VALUES (%s, %s, %s, %s) ON DUPLICATE KEY UPDATE name=VALUES(name), created_at=VALUES(created_at), updated_at=VALUES(updated_at)
2025-05-10 12:30:42.048 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_users_814d924e (name, id, created_at, updated_at) VALUES (?, ?, ?, ?) ON DUPLICATE KEY UPDATE name=VALUES(name), created_at=VALUES(created_at), updated_at=VALUES(updated_at)
params: ('David', 'a7d6816d-a08b-4cc6-ae0a-ca89c9e7dc76', '2025-05-10T11:30:41.871062', '2025-05-10T11:30:41.871062')
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:30:42.049 [INFO] [INFO] This sql shoudl be converted to bative backend: SELECT MAX(version) FROM test_users_814d924e_history WHERE id = %s vs SELECT MAX(version) FROM test_users_814d924e_history WHERE id = %s
2025-05-10 12:30:42.052 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT MAX(version) FROM test_users_814d924e_history WHERE id = ?
params: ('a7d6816d-a08b-4cc6-ae0a-ca89c9e7dc76',)
timeout: None
tags: None
result: [(None,)]
----------------------
2025-05-10 12:30:42.052 [INFO] [INFO] This sql shoudl be converted to bative backend: INSERT INTO test_users_814d924e_history (name, id, created_at, updated_at, version, history_timestamp, history_user_id, history_comment) VALUES (%s, %s, %s, %s, %s, %s, %s, %s) vs INSERT INTO test_users_814d924e_history (name, id, created_at, updated_at, version, history_timestamp, history_user_id, history_comment) VALUES (%s, %s, %s, %s, %s, %s, %s, %s)
2025-05-10 12:30:42.053 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_users_814d924e_history (name, id, created_at, updated_at, version, history_timestamp, history_user_id, history_comment) VALUES (?, ?, ?, ?, ?, ?, ?, ?)
params: ('David', 'a7d6816d-a08b-4cc6-ae0a-ca89c9e7dc76', '2025-05-10T11:30:41.871062', '2025-05-10T11:30:41.871062', 1, '2025-05-10T11:30:42.052164', None, None)
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:30:42.053 [INFO] [INFO] This sql shoudl be converted to bative backend: SELECT * FROM test_users_814d924e WHERE id = %s vs SELECT * FROM test_users_814d924e WHERE id = %s
2025-05-10 12:30:42.055 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT * FROM test_users_814d924e WHERE id = ?
params: ('a7d6816d-a08b-4cc6-ae0a-ca89c9e7dc76',)
timeout: None
tags: None
result: [('David', 'a7d6816d-a08b-4cc6-ae0a-ca89c9e7dc76', '2025-05-10T11:30:41.871062', '2025-05-10T11:30:41.871062', None, None, None)]
----------------------
2025-05-10 12:30:42.055 [INFO] [INFO] This sql shoudl be converted to bative backend: UPDATE test_users_814d924e SET deleted_at = %s, updated_at = %s, updated_by = %s WHERE id = %s vs UPDATE test_users_814d924e SET deleted_at = %s, updated_at = %s, updated_by = %s WHERE id = %s
2025-05-10 12:30:42.057 [INFO] [INFO] AsyncConnection.execute:
SQL: UPDATE test_users_814d924e SET deleted_at = ?, updated_at = ?, updated_by = ? WHERE id = ?
params: ('2025-05-10T11:30:42.055510', '2025-05-10T11:30:42.055510', None, 'a7d6816d-a08b-4cc6-ae0a-ca89c9e7dc76')
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:30:42.058 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT MAX(version) FROM test_users_814d924e_history WHERE id = ?
params: ('a7d6816d-a08b-4cc6-ae0a-ca89c9e7dc76',)
timeout: None
tags: None
result: [(1,)]
----------------------
2025-05-10 12:30:42.059 [INFO] [INFO] This sql shoudl be converted to bative backend: INSERT INTO test_users_814d924e_history (created_at, id, name, updated_at, deleted_at, version, history_timestamp, history_user_id, history_comment) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s) vs INSERT INTO test_users_814d924e_history (created_at, id, name, updated_at, deleted_at, version, history_timestamp, history_user_id, history_comment) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s)
2025-05-10 12:30:42.060 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_users_814d924e_history (created_at, id, name, updated_at, deleted_at, version, history_timestamp, history_user_id, history_comment) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)
params: ('David', 'a7d6816d-a08b-4cc6-ae0a-ca89c9e7dc76', '2025-05-10T11:30:41.871062', '2025-05-10T11:30:42.055510', '2025-05-10T11:30:42.055510', 2, '2025-05-10T11:30:42.059083', None, 'Soft deleted')
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:30:42.061 [INFO] [INFO] This sql shoudl be converted to bative backend: SELECT * FROM test_users_814d924e WHERE id = %s AND deleted_at IS NULL vs SELECT * FROM test_users_814d924e WHERE id = %s AND deleted_at IS NULL
2025-05-10 12:30:42.062 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT * FROM test_users_814d924e WHERE id = ? AND deleted_at IS NULL
params: ('a7d6816d-a08b-4cc6-ae0a-ca89c9e7dc76',)
timeout: None
tags: None
result: []
----------------------
2025-05-10 12:30:42.065 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT * FROM test_users_814d924e WHERE id = ?
params: ('a7d6816d-a08b-4cc6-ae0a-ca89c9e7dc76',)
timeout: None
tags: None
result: [('David', 'a7d6816d-a08b-4cc6-ae0a-ca89c9e7dc76', '2025-05-10T11:30:41.871062', '2025-05-10T11:30:42.055510', None, None, '2025-05-10T11:30:42.055510')]
----------------------
2025-05-10 12:30:42.066 [INFO] [INFO] Pool status:
{"initialized": true, "alias": "testdb_mysql", "hash": "a38f6583c7ceb10c7107caf0e8484dd2", "min_size": 3, "max_size": 20, "current_size": 2, "in_use": 0, "idle": 2, "active_connections": 1, "shutting_down": false, "metrics": {"total_acquired": 1, "total_released": 1, "current_active": 0, "peak_active": 1, "errors": 0, "timeouts": 0, "last_timeout": null, "avg_acquisition_time": 0.0}}
2025-05-10 12:30:42.209 [INFO] [INFO] Pool a38f6583c7ceb10c7107caf0e8484dd2 marked as shutting down, no new connections allowed
2025-05-10 12:30:42.210 [ERROR] [ERROR] Error closing pool for a38f6583c7ceb10c7107caf0e8484dd2: object NoneType can't be used in 'await' expression
2025-05-10 12:30:42.214 [INFO] [INFO] Tearing down test environment...
2025-05-10 13:44:18.273 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 13:44:18.273 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 13:44:18.279 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 13:44:18.279 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 13:44:18.283 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 13:44:18.283 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 13:45:24.565 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 13:45:24.565 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 13:45:24.578 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 13:45:24.578 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 13:45:24.583 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 13:45:24.583 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 13:45:29.304 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 13:45:29.304 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 13:45:29.313 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 13:45:29.313 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 13:45:29.319 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 13:45:29.319 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 13:45:29.344 [INFO] [INFO] Setting up test environment...
2025-05-10 13:45:29.345 [INFO] [INFO] Removing .\.pytest_cache
2025-05-10 13:45:29.399 [INFO] [INFO] Test files in this session: {'c:\\Users\\Phil\\Desktop\\Projects\\shared-libs\\python\\databases\\tests\\test_dal.py'}
2025-05-10 13:45:29.399 [INFO] [INFO] Found Docker Compose file for c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\test_dal.py: c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml
2025-05-10 13:45:29.421 [INFO] [INFO] Detected the following services in c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml:
2025-05-10 13:45:29.421 [INFO] [INFO]   - mysql: localhost:3307 (container port: 3306)
2025-05-10 13:45:29.421 [INFO] [INFO]   - postgres: localhost:5433 (container port: 5432)
2025-05-10 13:45:29.421 [INFO] [INFO] Running command: docker-compose -f c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml -p test-databases up -d
2025-05-10 13:45:29.955 [INFO] [INFO] Command error:  Container test-databases-postgres-1  Running
 Container test-databases-mysql-1  Running

2025-05-10 13:45:30.039 [INFO] [INFO] testdb_mysql - a38f6583c7ceb10c7107caf0e8484dd2 async pool initialized in 0.06s
2025-05-10 13:45:30.039 [INFO] [INFO] Pool status:
{"initialized": true, "alias": "testdb_mysql", "hash": "a38f6583c7ceb10c7107caf0e8484dd2", "min_size": 3, "max_size": 20, "current_size": 3, "in_use": 1, "idle": 2, "active_connections": 0, "shutting_down": false, "metrics": {"total_acquired": 1, "total_released": 0, "current_active": 1, "peak_active": 1, "errors": 0, "timeouts": 0, "last_timeout": null, "avg_acquisition_time": 0.0}}
2025-05-10 13:45:30.040 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 13:45:30.040 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 13:45:30.168 [INFO] [INFO] This sql shoudl be converted to bative backend: SELECT table_name FROM information_schema.tables WHERE table_schema = DATABASE() AND table_name = %s vs SELECT table_name FROM information_schema.tables WHERE table_schema = DATABASE() AND table_name = %s
2025-05-10 13:45:30.200 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_schema = DATABASE() AND table_name = ?
params: ('test_users_2e44f033',)
timeout: None
tags: None
result: []
----------------------
2025-05-10 13:45:30.203 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_schema = DATABASE() AND table_name = ?
params: ('test_users_2e44f033_meta',)
timeout: None
tags: None
result: []
----------------------
2025-05-10 13:45:30.205 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_schema = DATABASE() AND table_name = ?
params: ('test_users_2e44f033_history',)
timeout: None
tags: None
result: []
----------------------
2025-05-10 13:45:30.206 [INFO] [INFO] This sql shoudl be converted to bative backend: 
            CREATE TABLE IF NOT EXISTS test_users_2e44f033 (
                name TEXT, id VARCHAR(36) PRIMARY KEY, created_at TEXT, updated_at TEXT, created_by TEXT, updated_by TEXT, deleted_at TEXT
            ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
         vs 
            CREATE TABLE IF NOT EXISTS test_users_2e44f033 (
                name TEXT, id VARCHAR(36) PRIMARY KEY, created_at TEXT, updated_at TEXT, created_by TEXT, updated_by TEXT, deleted_at TEXT
            ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
        
2025-05-10 13:45:30.292 [INFO] [INFO] AsyncConnection.execute:
SQL: 
            CREATE TABLE IF NOT EXISTS test_users_2e44f033 (
                name TEXT, id VARCHAR(36) PRIMARY KEY, created_at TEXT, updated_at TEXT, created_by TEXT, updated_by TEXT, deleted_at TEXT
params: ()
timeout: None
tags: None
result: []
----------------------
2025-05-10 13:45:30.292 [INFO] [INFO] This sql shoudl be converted to bative backend: 
            CREATE TABLE IF NOT EXISTS test_users_2e44f033_meta (
                name VARCHAR(255) PRIMARY KEY,
                type VARCHAR(50)
            ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
         vs 
            CREATE TABLE IF NOT EXISTS test_users_2e44f033_meta (
                name VARCHAR(255) PRIMARY KEY,
                type VARCHAR(50)
            ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
        
2025-05-10 13:45:30.333 [INFO] [INFO] AsyncConnection.execute:
SQL: 
            CREATE TABLE IF NOT EXISTS test_users_2e44f033_meta (
                name VARCHAR(255) PRIMARY KEY,
                type VARCHAR(50)
            ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 C
params: ()
timeout: None
tags: None
result: []
----------------------
2025-05-10 13:45:30.334 [INFO] [INFO] This sql shoudl be converted to bative backend: 
            CREATE TABLE IF NOT EXISTS test_users_2e44f033_history (
                name TEXT, id VARCHAR(36), created_at TEXT, updated_at TEXT, created_by TEXT, updated_by TEXT, deleted_at TEXT, version INT, history_timestamp TEXT, history_user_id TEXT, history_comment TEXT,
                PRIMARY KEY (id, version)
            ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
         vs 
            CREATE TABLE IF NOT EXISTS test_users_2e44f033_history (
                name TEXT, id VARCHAR(36), created_at TEXT, updated_at TEXT, created_by TEXT, updated_by TEXT, deleted_at TEXT, version INT, history_timestamp TEXT, history_user_id TEXT, history_comment TEXT,
                PRIMARY KEY (id, version)
            ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
        
2025-05-10 13:45:30.388 [INFO] [INFO] AsyncConnection.execute:
SQL: 
            CREATE TABLE IF NOT EXISTS test_users_2e44f033_history (
                name TEXT, id VARCHAR(36), created_at TEXT, updated_at TEXT, created_by TEXT, updated_by TEXT, deleted_at TEXT, ve
params: ()
timeout: None
tags: None
result: []
----------------------
2025-05-10 13:45:30.391 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_schema = DATABASE() AND table_name = ?
params: ('test_users_2e44f033_meta',)
timeout: None
tags: None
result: [('test_users_2e44f033_meta',)]
----------------------
2025-05-10 13:45:30.393 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_schema = DATABASE() AND table_name = ?
params: ('test_users_2e44f033_meta',)
timeout: None
tags: None
result: [('test_users_2e44f033_meta',)]
----------------------
2025-05-10 13:45:30.394 [INFO] [INFO] This sql shoudl be converted to bative backend: SELECT name, type FROM test_users_2e44f033_meta vs SELECT name, type FROM test_users_2e44f033_meta
2025-05-10 13:45:30.402 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT name, type FROM test_users_2e44f033_meta
params: ()
timeout: None
tags: None
result: []
----------------------
2025-05-10 13:45:30.402 [INFO] [INFO] We need to add a new field to test_users_2e44f033: name
2025-05-10 13:45:30.402 [INFO] [INFO] This sql shoudl be converted to bative backend: INSERT INTO test_users_2e44f033_meta VALUES (%s, %s) AS new ON DUPLICATE KEY UPDATE type=new.type vs INSERT INTO test_users_2e44f033_meta VALUES (%s, %s) AS new ON DUPLICATE KEY UPDATE type=new.type
2025-05-10 13:45:30.406 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_users_2e44f033_meta VALUES (?, ?) AS new ON DUPLICATE KEY UPDATE type=new.type
params: ('name', 'str')
timeout: None
tags: None
result: []
----------------------
2025-05-10 13:45:30.406 [INFO] [INFO] We need to add a new field to test_users_2e44f033: id
2025-05-10 13:45:30.408 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_users_2e44f033_meta VALUES (?, ?) AS new ON DUPLICATE KEY UPDATE type=new.type
params: ('id', 'str')
timeout: None
tags: None
result: []
----------------------
2025-05-10 13:45:30.408 [INFO] [INFO] We need to add a new field to test_users_2e44f033: created_at
2025-05-10 13:45:30.410 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_users_2e44f033_meta VALUES (?, ?) AS new ON DUPLICATE KEY UPDATE type=new.type
params: ('created_at', 'str')
timeout: None
tags: None
result: []
----------------------
2025-05-10 13:45:30.410 [INFO] [INFO] We need to add a new field to test_users_2e44f033: updated_at
2025-05-10 13:45:30.412 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_users_2e44f033_meta VALUES (?, ?) AS new ON DUPLICATE KEY UPDATE type=new.type
params: ('updated_at', 'str')
timeout: None
tags: None
result: []
----------------------
2025-05-10 13:45:30.412 [INFO] [INFO] This sql shoudl be converted to bative backend: SELECT COUNT(*) FROM information_schema.columns WHERE table_name = %s AND column_name = %s AND table_schema = DATABASE() vs SELECT COUNT(*) FROM information_schema.columns WHERE table_name = %s AND column_name = %s AND table_schema = DATABASE()
2025-05-10 13:45:30.421 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT COUNT(*) FROM information_schema.columns WHERE table_name = ? AND column_name = ? AND table_schema = DATABASE()
params: ('test_users_2e44f033', 'updated_at')
timeout: None
tags: None
result: [(1,)]
----------------------
2025-05-10 13:45:30.424 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_schema = DATABASE() AND table_name = ?
params: ('test_users_2e44f033_meta',)
timeout: None
tags: None
result: [('test_users_2e44f033_meta',)]
----------------------
2025-05-10 13:45:30.426 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_schema = DATABASE() AND table_name = ?
params: ('test_users_2e44f033_meta',)
timeout: None
tags: None
result: [('test_users_2e44f033_meta',)]
----------------------
2025-05-10 13:45:30.428 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT name, type FROM test_users_2e44f033_meta
params: ()
timeout: None
tags: None
result: [('created_at', 'str'), ('id', 'str'), ('name', 'str'), ('updated_at', 'str')]
----------------------
2025-05-10 13:45:30.430 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT COUNT(*) FROM information_schema.columns WHERE table_name = ? AND column_name = ? AND table_schema = DATABASE()
params: ('test_users_2e44f033', 'updated_at')
timeout: None
tags: None
result: [(1,)]
----------------------
2025-05-10 13:45:30.431 [INFO] [INFO] This sql shoudl be converted to bative backend: INSERT INTO test_users_2e44f033 (name, id, created_at, updated_at) VALUES (%s, %s, %s, %s) ON DUPLICATE KEY UPDATE name=VALUES(name), created_at=VALUES(created_at), updated_at=VALUES(updated_at) vs INSERT INTO test_users_2e44f033 (name, id, created_at, updated_at) VALUES (%s, %s, %s, %s) ON DUPLICATE KEY UPDATE name=VALUES(name), created_at=VALUES(created_at), updated_at=VALUES(updated_at)
2025-05-10 13:45:30.443 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_users_2e44f033 (name, id, created_at, updated_at) VALUES (?, ?, ?, ?) ON DUPLICATE KEY UPDATE name=VALUES(name), created_at=VALUES(created_at), updated_at=VALUES(updated_at)
params: ('David', '738d5f68-c9fc-4828-bd0b-ce314cd6c714', '2025-05-10T12:45:30.168369', '2025-05-10T12:45:30.168369')
timeout: None
tags: None
result: []
----------------------
2025-05-10 13:45:30.443 [INFO] [INFO] This sql shoudl be converted to bative backend: SELECT MAX(version) FROM test_users_2e44f033_history WHERE id = %s vs SELECT MAX(version) FROM test_users_2e44f033_history WHERE id = %s
2025-05-10 13:45:30.447 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT MAX(version) FROM test_users_2e44f033_history WHERE id = ?
params: ('738d5f68-c9fc-4828-bd0b-ce314cd6c714',)
timeout: None
tags: None
result: [(None,)]
----------------------
2025-05-10 13:45:30.448 [INFO] [INFO] This sql shoudl be converted to bative backend: INSERT INTO test_users_2e44f033_history (name, id, created_at, updated_at, version, history_timestamp, history_user_id, history_comment) VALUES (%s, %s, %s, %s, %s, %s, %s, %s) vs INSERT INTO test_users_2e44f033_history (name, id, created_at, updated_at, version, history_timestamp, history_user_id, history_comment) VALUES (%s, %s, %s, %s, %s, %s, %s, %s)
2025-05-10 13:45:30.449 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_users_2e44f033_history (name, id, created_at, updated_at, version, history_timestamp, history_user_id, history_comment) VALUES (?, ?, ?, ?, ?, ?, ?, ?)
params: ('David', '738d5f68-c9fc-4828-bd0b-ce314cd6c714', '2025-05-10T12:45:30.168369', '2025-05-10T12:45:30.168369', 1, '2025-05-10T12:45:30.448002', None, None)
timeout: None
tags: None
result: []
----------------------
2025-05-10 13:45:30.449 [INFO] [INFO] This sql shoudl be converted to bative backend: SELECT * FROM test_users_2e44f033 WHERE id = %s vs SELECT * FROM test_users_2e44f033 WHERE id = %s
2025-05-10 13:45:30.451 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT * FROM test_users_2e44f033 WHERE id = ?
params: ('738d5f68-c9fc-4828-bd0b-ce314cd6c714',)
timeout: None
tags: None
result: [('David', '738d5f68-c9fc-4828-bd0b-ce314cd6c714', '2025-05-10T12:45:30.168369', '2025-05-10T12:45:30.168369', None, None, None)]
----------------------
2025-05-10 13:45:30.451 [INFO] [INFO] This sql shoudl be converted to bative backend: UPDATE test_users_2e44f033 SET deleted_at = %s, updated_at = %s, updated_by = %s WHERE id = %s vs UPDATE test_users_2e44f033 SET deleted_at = %s, updated_at = %s, updated_by = %s WHERE id = %s
2025-05-10 13:45:30.455 [INFO] [INFO] AsyncConnection.execute:
SQL: UPDATE test_users_2e44f033 SET deleted_at = ?, updated_at = ?, updated_by = ? WHERE id = ?
params: ('2025-05-10T12:45:30.451776', '2025-05-10T12:45:30.451776', None, '738d5f68-c9fc-4828-bd0b-ce314cd6c714')
timeout: None
tags: None
result: []
----------------------
2025-05-10 13:45:30.458 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT MAX(version) FROM test_users_2e44f033_history WHERE id = ?
params: ('738d5f68-c9fc-4828-bd0b-ce314cd6c714',)
timeout: None
tags: None
result: [(1,)]
----------------------
2025-05-10 13:45:30.459 [INFO] [INFO] This sql shoudl be converted to bative backend: INSERT INTO test_users_2e44f033_history (created_at, id, name, updated_at, deleted_at, version, history_timestamp, history_user_id, history_comment) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s) vs INSERT INTO test_users_2e44f033_history (created_at, id, name, updated_at, deleted_at, version, history_timestamp, history_user_id, history_comment) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s)
2025-05-10 13:45:30.461 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_users_2e44f033_history (created_at, id, name, updated_at, deleted_at, version, history_timestamp, history_user_id, history_comment) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)
params: ('David', '738d5f68-c9fc-4828-bd0b-ce314cd6c714', '2025-05-10T12:45:30.168369', '2025-05-10T12:45:30.451776', '2025-05-10T12:45:30.451776', 2, '2025-05-10T12:45:30.459076', None, 'Soft deleted')
timeout: None
tags: None
result: []
----------------------
2025-05-10 13:45:30.461 [INFO] [INFO] This sql shoudl be converted to bative backend: SELECT * FROM test_users_2e44f033 WHERE id = %s AND deleted_at IS NULL vs SELECT * FROM test_users_2e44f033 WHERE id = %s AND deleted_at IS NULL
2025-05-10 13:45:30.463 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT * FROM test_users_2e44f033 WHERE id = ? AND deleted_at IS NULL
params: ('738d5f68-c9fc-4828-bd0b-ce314cd6c714',)
timeout: None
tags: None
result: []
----------------------
2025-05-10 13:45:30.465 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT * FROM test_users_2e44f033 WHERE id = ?
params: ('738d5f68-c9fc-4828-bd0b-ce314cd6c714',)
timeout: None
tags: None
result: [('David', '738d5f68-c9fc-4828-bd0b-ce314cd6c714', '2025-05-10T12:45:30.168369', '2025-05-10T12:45:30.451776', None, None, '2025-05-10T12:45:30.451776')]
----------------------
2025-05-10 13:45:30.466 [INFO] [INFO] Pool status:
{"initialized": true, "alias": "testdb_mysql", "hash": "a38f6583c7ceb10c7107caf0e8484dd2", "min_size": 3, "max_size": 20, "current_size": 2, "in_use": 0, "idle": 2, "active_connections": 1, "shutting_down": false, "metrics": {"total_acquired": 1, "total_released": 1, "current_active": 0, "peak_active": 1, "errors": 0, "timeouts": 0, "last_timeout": null, "avg_acquisition_time": 0.0}}
2025-05-10 13:45:30.643 [INFO] [INFO] Pool a38f6583c7ceb10c7107caf0e8484dd2 marked as shutting down, no new connections allowed
2025-05-10 13:45:30.643 [ERROR] [ERROR] Error closing pool for a38f6583c7ceb10c7107caf0e8484dd2: object NoneType can't be used in 'await' expression
2025-05-10 13:45:30.647 [INFO] [INFO] Tearing down test environment...
2025-05-10 13:48:40.676 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 13:48:40.676 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 13:48:40.685 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 13:48:40.685 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 13:48:40.688 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 13:48:40.688 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 13:48:45.406 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 13:48:45.407 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 13:48:45.415 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 13:48:45.415 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 13:48:45.419 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 13:48:45.419 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 13:48:50.012 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 13:48:50.012 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 13:48:50.019 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 13:48:50.019 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 13:48:50.025 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 13:48:50.025 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 13:48:50.044 [INFO] [INFO] Setting up test environment...
2025-05-10 13:48:50.045 [INFO] [INFO] Removing .\.pytest_cache
2025-05-10 13:48:50.078 [INFO] [INFO] Test files in this session: {'c:\\Users\\Phil\\Desktop\\Projects\\shared-libs\\python\\databases\\tests\\test_dal.py'}
2025-05-10 13:48:50.079 [INFO] [INFO] Found Docker Compose file for c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\test_dal.py: c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml
2025-05-10 13:48:50.084 [INFO] [INFO] Detected the following services in c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml:
2025-05-10 13:48:50.085 [INFO] [INFO]   - mysql: localhost:3307 (container port: 3306)
2025-05-10 13:48:50.085 [INFO] [INFO]   - postgres: localhost:5433 (container port: 5432)
2025-05-10 13:48:50.085 [INFO] [INFO] Running command: docker-compose -f c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml -p test-databases up -d
2025-05-10 13:48:50.406 [INFO] [INFO] Command error:  Container test-databases-postgres-1  Running
 Container test-databases-mysql-1  Running

2025-05-10 13:48:50.452 [INFO] [INFO] testdb_mysql - a38f6583c7ceb10c7107caf0e8484dd2 async pool initialized in 0.03s
2025-05-10 13:48:50.452 [INFO] [INFO] Pool status:
{"initialized": true, "alias": "testdb_mysql", "hash": "a38f6583c7ceb10c7107caf0e8484dd2", "min_size": 3, "max_size": 20, "current_size": 3, "in_use": 1, "idle": 2, "active_connections": 0, "shutting_down": false, "metrics": {"total_acquired": 1, "total_released": 0, "current_active": 1, "peak_active": 1, "errors": 0, "timeouts": 0, "last_timeout": null, "avg_acquisition_time": 0.0}}
2025-05-10 13:48:50.452 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 13:48:50.452 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 13:48:50.459 [INFO] [INFO] This sql shoudl be converted to bative backend: SELECT table_name FROM information_schema.tables WHERE table_schema = DATABASE() AND table_name = %s vs SELECT table_name FROM information_schema.tables WHERE table_schema = DATABASE() AND table_name = %s
2025-05-10 13:48:50.469 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_schema = DATABASE() AND table_name = ?
params: ('test_users_9722fd23',)
timeout: None
tags: None
result: []
----------------------
2025-05-10 13:48:50.471 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_schema = DATABASE() AND table_name = ?
params: ('test_users_9722fd23_meta',)
timeout: None
tags: None
result: []
----------------------
2025-05-10 13:48:50.473 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_schema = DATABASE() AND table_name = ?
params: ('test_users_9722fd23_history',)
timeout: None
tags: None
result: []
----------------------
2025-05-10 13:48:50.473 [INFO] [INFO] This sql shoudl be converted to bative backend: 
            CREATE TABLE IF NOT EXISTS test_users_9722fd23 (
                name TEXT, id VARCHAR(36) PRIMARY KEY, created_at TEXT, updated_at TEXT, created_by TEXT, updated_by TEXT, deleted_at TEXT
            ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
         vs 
            CREATE TABLE IF NOT EXISTS test_users_9722fd23 (
                name TEXT, id VARCHAR(36) PRIMARY KEY, created_at TEXT, updated_at TEXT, created_by TEXT, updated_by TEXT, deleted_at TEXT
            ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
        
2025-05-10 13:48:50.521 [INFO] [INFO] AsyncConnection.execute:
SQL: 
            CREATE TABLE IF NOT EXISTS test_users_9722fd23 (
                name TEXT, id VARCHAR(36) PRIMARY KEY, created_at TEXT, updated_at TEXT, created_by TEXT, updated_by TEXT, deleted_at TEXT
params: ()
timeout: None
tags: None
result: []
----------------------
2025-05-10 13:48:50.522 [INFO] [INFO] This sql shoudl be converted to bative backend: 
            CREATE TABLE IF NOT EXISTS test_users_9722fd23_meta (
                name VARCHAR(255) PRIMARY KEY,
                type VARCHAR(50)
            ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
         vs 
            CREATE TABLE IF NOT EXISTS test_users_9722fd23_meta (
                name VARCHAR(255) PRIMARY KEY,
                type VARCHAR(50)
            ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
        
2025-05-10 13:48:50.563 [INFO] [INFO] AsyncConnection.execute:
SQL: 
            CREATE TABLE IF NOT EXISTS test_users_9722fd23_meta (
                name VARCHAR(255) PRIMARY KEY,
                type VARCHAR(50)
            ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 C
params: ()
timeout: None
tags: None
result: []
----------------------
2025-05-10 13:48:50.564 [INFO] [INFO] This sql shoudl be converted to bative backend: 
            CREATE TABLE IF NOT EXISTS test_users_9722fd23_history (
                name TEXT, id VARCHAR(36), created_at TEXT, updated_at TEXT, created_by TEXT, updated_by TEXT, deleted_at TEXT, version INT, history_timestamp TEXT, history_user_id TEXT, history_comment TEXT,
                PRIMARY KEY (id, version)
            ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
         vs 
            CREATE TABLE IF NOT EXISTS test_users_9722fd23_history (
                name TEXT, id VARCHAR(36), created_at TEXT, updated_at TEXT, created_by TEXT, updated_by TEXT, deleted_at TEXT, version INT, history_timestamp TEXT, history_user_id TEXT, history_comment TEXT,
                PRIMARY KEY (id, version)
            ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
        
2025-05-10 13:48:50.599 [INFO] [INFO] AsyncConnection.execute:
SQL: 
            CREATE TABLE IF NOT EXISTS test_users_9722fd23_history (
                name TEXT, id VARCHAR(36), created_at TEXT, updated_at TEXT, created_by TEXT, updated_by TEXT, deleted_at TEXT, ve
params: ()
timeout: None
tags: None
result: []
----------------------
2025-05-10 13:48:50.602 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_schema = DATABASE() AND table_name = ?
params: ('test_users_9722fd23_meta',)
timeout: None
tags: None
result: [('test_users_9722fd23_meta',)]
----------------------
2025-05-10 13:48:50.607 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_schema = DATABASE() AND table_name = ?
params: ('test_users_9722fd23_meta',)
timeout: None
tags: None
result: [('test_users_9722fd23_meta',)]
----------------------
2025-05-10 13:48:50.607 [INFO] [INFO] This sql shoudl be converted to bative backend: SELECT name, type FROM test_users_9722fd23_meta vs SELECT name, type FROM test_users_9722fd23_meta
2025-05-10 13:48:50.610 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT name, type FROM test_users_9722fd23_meta
params: ()
timeout: None
tags: None
result: []
----------------------
2025-05-10 13:48:50.610 [INFO] [INFO] We need to add a new field to test_users_9722fd23: name
2025-05-10 13:48:50.610 [INFO] [INFO] This sql shoudl be converted to bative backend: INSERT INTO test_users_9722fd23_meta VALUES (%s, %s) AS new ON DUPLICATE KEY UPDATE type=new.type vs INSERT INTO test_users_9722fd23_meta VALUES (%s, %s) AS new ON DUPLICATE KEY UPDATE type=new.type
2025-05-10 13:48:50.612 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_users_9722fd23_meta VALUES (?, ?) AS new ON DUPLICATE KEY UPDATE type=new.type
params: ('name', 'str')
timeout: None
tags: None
result: []
----------------------
2025-05-10 13:48:50.612 [INFO] [INFO] We need to add a new field to test_users_9722fd23: id
2025-05-10 13:48:50.613 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_users_9722fd23_meta VALUES (?, ?) AS new ON DUPLICATE KEY UPDATE type=new.type
params: ('id', 'str')
timeout: None
tags: None
result: []
----------------------
2025-05-10 13:48:50.613 [INFO] [INFO] We need to add a new field to test_users_9722fd23: created_at
2025-05-10 13:48:50.615 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_users_9722fd23_meta VALUES (?, ?) AS new ON DUPLICATE KEY UPDATE type=new.type
params: ('created_at', 'str')
timeout: None
tags: None
result: []
----------------------
2025-05-10 13:48:50.615 [INFO] [INFO] We need to add a new field to test_users_9722fd23: updated_at
2025-05-10 13:48:50.616 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_users_9722fd23_meta VALUES (?, ?) AS new ON DUPLICATE KEY UPDATE type=new.type
params: ('updated_at', 'str')
timeout: None
tags: None
result: []
----------------------
2025-05-10 13:48:50.617 [INFO] [INFO] This sql shoudl be converted to bative backend: SELECT COUNT(*) FROM information_schema.columns WHERE table_name = %s AND column_name = %s AND table_schema = DATABASE() vs SELECT COUNT(*) FROM information_schema.columns WHERE table_name = %s AND column_name = %s AND table_schema = DATABASE()
2025-05-10 13:48:50.620 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT COUNT(*) FROM information_schema.columns WHERE table_name = ? AND column_name = ? AND table_schema = DATABASE()
params: ('test_users_9722fd23', 'updated_at')
timeout: None
tags: None
result: [(1,)]
----------------------
2025-05-10 13:48:50.623 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_schema = DATABASE() AND table_name = ?
params: ('test_users_9722fd23_meta',)
timeout: None
tags: None
result: [('test_users_9722fd23_meta',)]
----------------------
2025-05-10 13:48:50.627 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_schema = DATABASE() AND table_name = ?
params: ('test_users_9722fd23_meta',)
timeout: None
tags: None
result: [('test_users_9722fd23_meta',)]
----------------------
2025-05-10 13:48:50.628 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT name, type FROM test_users_9722fd23_meta
params: ()
timeout: None
tags: None
result: [('created_at', 'str'), ('id', 'str'), ('name', 'str'), ('updated_at', 'str')]
----------------------
2025-05-10 13:48:50.631 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT COUNT(*) FROM information_schema.columns WHERE table_name = ? AND column_name = ? AND table_schema = DATABASE()
params: ('test_users_9722fd23', 'updated_at')
timeout: None
tags: None
result: [(1,)]
----------------------
2025-05-10 13:48:50.632 [INFO] [INFO] This sql shoudl be converted to bative backend: INSERT INTO test_users_9722fd23 (name, id, created_at, updated_at) VALUES (%s, %s, %s, %s) ON DUPLICATE KEY UPDATE name=VALUES(name), created_at=VALUES(created_at), updated_at=VALUES(updated_at) vs INSERT INTO test_users_9722fd23 (name, id, created_at, updated_at) VALUES (%s, %s, %s, %s) ON DUPLICATE KEY UPDATE name=VALUES(name), created_at=VALUES(created_at), updated_at=VALUES(updated_at)
2025-05-10 13:48:50.639 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_users_9722fd23 (name, id, created_at, updated_at) VALUES (?, ?, ?, ?) ON DUPLICATE KEY UPDATE name=VALUES(name), created_at=VALUES(created_at), updated_at=VALUES(updated_at)
params: ('David', '3010f2ba-ead3-470f-8539-f9323af531a9', '2025-05-10T12:48:50.459429', '2025-05-10T12:48:50.459429')
timeout: None
tags: None
result: []
----------------------
2025-05-10 13:48:50.640 [INFO] [INFO] This sql shoudl be converted to bative backend: SELECT MAX(version) FROM test_users_9722fd23_history WHERE id = %s vs SELECT MAX(version) FROM test_users_9722fd23_history WHERE id = %s
2025-05-10 13:48:50.645 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT MAX(version) FROM test_users_9722fd23_history WHERE id = ?
params: ('3010f2ba-ead3-470f-8539-f9323af531a9',)
timeout: None
tags: None
result: [(None,)]
----------------------
2025-05-10 13:48:50.646 [INFO] [INFO] This sql shoudl be converted to bative backend: INSERT INTO test_users_9722fd23_history (name, id, created_at, updated_at, version, history_timestamp, history_user_id, history_comment) VALUES (%s, %s, %s, %s, %s, %s, %s, %s) vs INSERT INTO test_users_9722fd23_history (name, id, created_at, updated_at, version, history_timestamp, history_user_id, history_comment) VALUES (%s, %s, %s, %s, %s, %s, %s, %s)
2025-05-10 13:48:50.647 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_users_9722fd23_history (name, id, created_at, updated_at, version, history_timestamp, history_user_id, history_comment) VALUES (?, ?, ?, ?, ?, ?, ?, ?)
params: ('David', '3010f2ba-ead3-470f-8539-f9323af531a9', '2025-05-10T12:48:50.459429', '2025-05-10T12:48:50.459429', 1, '2025-05-10T12:48:50.645662', None, None)
timeout: None
tags: None
result: []
----------------------
2025-05-10 13:48:50.647 [INFO] [INFO] This sql shoudl be converted to bative backend: SELECT * FROM test_users_9722fd23 WHERE id = %s vs SELECT * FROM test_users_9722fd23 WHERE id = %s
2025-05-10 13:48:50.649 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT * FROM test_users_9722fd23 WHERE id = ?
params: ('3010f2ba-ead3-470f-8539-f9323af531a9',)
timeout: None
tags: None
result: [('David', '3010f2ba-ead3-470f-8539-f9323af531a9', '2025-05-10T12:48:50.459429', '2025-05-10T12:48:50.459429', None, None, None)]
----------------------
2025-05-10 13:48:50.649 [INFO] [INFO] Pool status:
{"initialized": true, "alias": "testdb_mysql", "hash": "a38f6583c7ceb10c7107caf0e8484dd2", "min_size": 3, "max_size": 20, "current_size": 2, "in_use": 0, "idle": 2, "active_connections": 1, "shutting_down": false, "metrics": {"total_acquired": 1, "total_released": 1, "current_active": 0, "peak_active": 1, "errors": 0, "timeouts": 0, "last_timeout": null, "avg_acquisition_time": 0.0}}
2025-05-10 13:48:51.271 [INFO] [INFO] Pool a38f6583c7ceb10c7107caf0e8484dd2 marked as shutting down, no new connections allowed
2025-05-10 13:48:51.271 [ERROR] [ERROR] Error closing pool for a38f6583c7ceb10c7107caf0e8484dd2: object NoneType can't be used in 'await' expression
2025-05-10 13:48:51.275 [INFO] [INFO] Tearing down test environment...
2025-05-10 13:51:36.306 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 13:51:36.306 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 13:51:36.316 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 13:51:36.316 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 13:51:36.319 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 13:51:36.319 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 13:51:39.082 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 13:51:39.082 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 13:51:39.091 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 13:51:39.092 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 13:51:39.095 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 13:51:39.095 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 13:51:39.113 [INFO] [INFO] Setting up test environment...
2025-05-10 13:51:39.113 [INFO] [INFO] Removing .\.pytest_cache
2025-05-10 13:51:39.141 [INFO] [INFO] Test files in this session: {'c:\\Users\\Phil\\Desktop\\Projects\\shared-libs\\python\\databases\\tests\\test_dal.py'}
2025-05-10 13:51:39.142 [INFO] [INFO] Found Docker Compose file for c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\test_dal.py: c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml
2025-05-10 13:51:39.147 [INFO] [INFO] Detected the following services in c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml:
2025-05-10 13:51:39.147 [INFO] [INFO]   - mysql: localhost:3307 (container port: 3306)
2025-05-10 13:51:39.147 [INFO] [INFO]   - postgres: localhost:5433 (container port: 5432)
2025-05-10 13:51:39.147 [INFO] [INFO] Running command: docker-compose -f c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml -p test-databases up -d
2025-05-10 13:51:39.455 [INFO] [INFO] Command error:  Container test-databases-mysql-1  Running
 Container test-databases-postgres-1  Running

2025-05-10 13:51:39.500 [INFO] [INFO] testdb_mysql - a38f6583c7ceb10c7107caf0e8484dd2 async pool initialized in 0.03s
2025-05-10 13:51:39.500 [INFO] [INFO] Pool status:
{"initialized": true, "alias": "testdb_mysql", "hash": "a38f6583c7ceb10c7107caf0e8484dd2", "min_size": 3, "max_size": 20, "current_size": 3, "in_use": 1, "idle": 2, "active_connections": 0, "shutting_down": false, "metrics": {"total_acquired": 1, "total_released": 0, "current_active": 1, "peak_active": 1, "errors": 0, "timeouts": 0, "last_timeout": null, "avg_acquisition_time": 0.0}}
2025-05-10 13:51:39.500 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 13:51:39.500 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 13:51:39.509 [INFO] [INFO] This sql shoudl be converted to bative backend: SELECT table_name FROM information_schema.tables WHERE table_schema = DATABASE() AND table_name = %s vs SELECT table_name FROM information_schema.tables WHERE table_schema = DATABASE() AND table_name = %s
2025-05-10 13:51:39.518 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_schema = DATABASE() AND table_name = ?
params: ('test_users_f7851325',)
timeout: None
tags: None
result: []
----------------------
2025-05-10 13:51:39.520 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_schema = DATABASE() AND table_name = ?
params: ('test_users_f7851325_meta',)
timeout: None
tags: None
result: []
----------------------
2025-05-10 13:51:39.521 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_schema = DATABASE() AND table_name = ?
params: ('test_users_f7851325_history',)
timeout: None
tags: None
result: []
----------------------
2025-05-10 13:51:39.522 [INFO] [INFO] This sql shoudl be converted to bative backend: 
            CREATE TABLE IF NOT EXISTS test_users_f7851325 (
                name TEXT, id VARCHAR(36) PRIMARY KEY, created_at TEXT, updated_at TEXT, created_by TEXT, updated_by TEXT, deleted_at TEXT
            ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
         vs 
            CREATE TABLE IF NOT EXISTS test_users_f7851325 (
                name TEXT, id VARCHAR(36) PRIMARY KEY, created_at TEXT, updated_at TEXT, created_by TEXT, updated_by TEXT, deleted_at TEXT
            ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
        
2025-05-10 13:51:39.571 [INFO] [INFO] AsyncConnection.execute:
SQL: 
            CREATE TABLE IF NOT EXISTS test_users_f7851325 (
                name TEXT, id VARCHAR(36) PRIMARY KEY, created_at TEXT, updated_at TEXT, created_by TEXT, updated_by TEXT, deleted_at TEXT
params: ()
timeout: None
tags: None
result: []
----------------------
2025-05-10 13:51:39.572 [INFO] [INFO] This sql shoudl be converted to bative backend: 
            CREATE TABLE IF NOT EXISTS test_users_f7851325_meta (
                name VARCHAR(255) PRIMARY KEY,
                type VARCHAR(50)
            ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
         vs 
            CREATE TABLE IF NOT EXISTS test_users_f7851325_meta (
                name VARCHAR(255) PRIMARY KEY,
                type VARCHAR(50)
            ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
        
2025-05-10 13:51:39.611 [INFO] [INFO] AsyncConnection.execute:
SQL: 
            CREATE TABLE IF NOT EXISTS test_users_f7851325_meta (
                name VARCHAR(255) PRIMARY KEY,
                type VARCHAR(50)
            ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 C
params: ()
timeout: None
tags: None
result: []
----------------------
2025-05-10 13:51:39.611 [INFO] [INFO] This sql shoudl be converted to bative backend: 
            CREATE TABLE IF NOT EXISTS test_users_f7851325_history (
                name TEXT, id VARCHAR(36), created_at TEXT, updated_at TEXT, created_by TEXT, updated_by TEXT, deleted_at TEXT, version INT, history_timestamp TEXT, history_user_id TEXT, history_comment TEXT,
                PRIMARY KEY (id, version)
            ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
         vs 
            CREATE TABLE IF NOT EXISTS test_users_f7851325_history (
                name TEXT, id VARCHAR(36), created_at TEXT, updated_at TEXT, created_by TEXT, updated_by TEXT, deleted_at TEXT, version INT, history_timestamp TEXT, history_user_id TEXT, history_comment TEXT,
                PRIMARY KEY (id, version)
            ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
        
2025-05-10 13:51:39.651 [INFO] [INFO] AsyncConnection.execute:
SQL: 
            CREATE TABLE IF NOT EXISTS test_users_f7851325_history (
                name TEXT, id VARCHAR(36), created_at TEXT, updated_at TEXT, created_by TEXT, updated_by TEXT, deleted_at TEXT, ve
params: ()
timeout: None
tags: None
result: []
----------------------
2025-05-10 13:51:39.654 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_schema = DATABASE() AND table_name = ?
params: ('test_users_f7851325_meta',)
timeout: None
tags: None
result: [('test_users_f7851325_meta',)]
----------------------
2025-05-10 13:51:39.657 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_schema = DATABASE() AND table_name = ?
params: ('test_users_f7851325_meta',)
timeout: None
tags: None
result: [('test_users_f7851325_meta',)]
----------------------
2025-05-10 13:51:39.657 [INFO] [INFO] This sql shoudl be converted to bative backend: SELECT name, type FROM test_users_f7851325_meta vs SELECT name, type FROM test_users_f7851325_meta
2025-05-10 13:51:39.661 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT name, type FROM test_users_f7851325_meta
params: ()
timeout: None
tags: None
result: []
----------------------
2025-05-10 13:51:39.661 [INFO] [INFO] We need to add a new field to test_users_f7851325: name
2025-05-10 13:51:39.662 [INFO] [INFO] This sql shoudl be converted to bative backend: INSERT INTO test_users_f7851325_meta VALUES (%s, %s) AS new ON DUPLICATE KEY UPDATE type=new.type vs INSERT INTO test_users_f7851325_meta VALUES (%s, %s) AS new ON DUPLICATE KEY UPDATE type=new.type
2025-05-10 13:51:39.664 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_users_f7851325_meta VALUES (?, ?) AS new ON DUPLICATE KEY UPDATE type=new.type
params: ('name', 'str')
timeout: None
tags: None
result: []
----------------------
2025-05-10 13:51:39.664 [INFO] [INFO] We need to add a new field to test_users_f7851325: id
2025-05-10 13:51:39.666 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_users_f7851325_meta VALUES (?, ?) AS new ON DUPLICATE KEY UPDATE type=new.type
params: ('id', 'str')
timeout: None
tags: None
result: []
----------------------
2025-05-10 13:51:39.666 [INFO] [INFO] We need to add a new field to test_users_f7851325: created_at
2025-05-10 13:51:39.669 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_users_f7851325_meta VALUES (?, ?) AS new ON DUPLICATE KEY UPDATE type=new.type
params: ('created_at', 'str')
timeout: None
tags: None
result: []
----------------------
2025-05-10 13:51:39.670 [INFO] [INFO] We need to add a new field to test_users_f7851325: updated_at
2025-05-10 13:51:39.672 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_users_f7851325_meta VALUES (?, ?) AS new ON DUPLICATE KEY UPDATE type=new.type
params: ('updated_at', 'str')
timeout: None
tags: None
result: []
----------------------
2025-05-10 13:51:39.672 [INFO] [INFO] This sql shoudl be converted to bative backend: SELECT COUNT(*) FROM information_schema.columns WHERE table_name = %s AND column_name = %s AND table_schema = DATABASE() vs SELECT COUNT(*) FROM information_schema.columns WHERE table_name = %s AND column_name = %s AND table_schema = DATABASE()
2025-05-10 13:51:39.675 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT COUNT(*) FROM information_schema.columns WHERE table_name = ? AND column_name = ? AND table_schema = DATABASE()
params: ('test_users_f7851325', 'updated_at')
timeout: None
tags: None
result: [(1,)]
----------------------
2025-05-10 13:51:39.678 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_schema = DATABASE() AND table_name = ?
params: ('test_users_f7851325_meta',)
timeout: None
tags: None
result: [('test_users_f7851325_meta',)]
----------------------
2025-05-10 13:51:39.679 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT table_name FROM information_schema.tables WHERE table_schema = DATABASE() AND table_name = ?
params: ('test_users_f7851325_meta',)
timeout: None
tags: None
result: [('test_users_f7851325_meta',)]
----------------------
2025-05-10 13:51:39.681 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT name, type FROM test_users_f7851325_meta
params: ()
timeout: None
tags: None
result: [('created_at', 'str'), ('id', 'str'), ('name', 'str'), ('updated_at', 'str')]
----------------------
2025-05-10 13:51:39.682 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT COUNT(*) FROM information_schema.columns WHERE table_name = ? AND column_name = ? AND table_schema = DATABASE()
params: ('test_users_f7851325', 'updated_at')
timeout: None
tags: None
result: [(1,)]
----------------------
2025-05-10 13:51:39.683 [INFO] [INFO] This sql shoudl be converted to bative backend: INSERT INTO test_users_f7851325 (name, id, created_at, updated_at) VALUES (%s, %s, %s, %s) ON DUPLICATE KEY UPDATE name=VALUES(name), created_at=VALUES(created_at), updated_at=VALUES(updated_at) vs INSERT INTO test_users_f7851325 (name, id, created_at, updated_at) VALUES (%s, %s, %s, %s) ON DUPLICATE KEY UPDATE name=VALUES(name), created_at=VALUES(created_at), updated_at=VALUES(updated_at)
2025-05-10 13:51:39.689 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_users_f7851325 (name, id, created_at, updated_at) VALUES (?, ?, ?, ?) ON DUPLICATE KEY UPDATE name=VALUES(name), created_at=VALUES(created_at), updated_at=VALUES(updated_at)
params: ('David', '06f56e31-e28f-46f9-8135-6fcede6ebee7', '2025-05-10T12:51:39.508660', '2025-05-10T12:51:39.508660')
timeout: None
tags: None
result: []
----------------------
2025-05-10 13:51:39.690 [INFO] [INFO] This sql shoudl be converted to bative backend: SELECT MAX(version) FROM test_users_f7851325_history WHERE id = %s vs SELECT MAX(version) FROM test_users_f7851325_history WHERE id = %s
2025-05-10 13:51:39.693 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT MAX(version) FROM test_users_f7851325_history WHERE id = ?
params: ('06f56e31-e28f-46f9-8135-6fcede6ebee7',)
timeout: None
tags: None
result: [(None,)]
----------------------
2025-05-10 13:51:39.693 [INFO] [INFO] This sql shoudl be converted to bative backend: INSERT INTO test_users_f7851325_history (name, id, created_at, updated_at, version, history_timestamp, history_user_id, history_comment) VALUES (%s, %s, %s, %s, %s, %s, %s, %s) vs INSERT INTO test_users_f7851325_history (name, id, created_at, updated_at, version, history_timestamp, history_user_id, history_comment) VALUES (%s, %s, %s, %s, %s, %s, %s, %s)
2025-05-10 13:51:39.694 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_users_f7851325_history (name, id, created_at, updated_at, version, history_timestamp, history_user_id, history_comment) VALUES (?, ?, ?, ?, ?, ?, ?, ?)
params: ('David', '06f56e31-e28f-46f9-8135-6fcede6ebee7', '2025-05-10T12:51:39.508660', '2025-05-10T12:51:39.508660', 1, '2025-05-10T12:51:39.693323', None, None)
timeout: None
tags: None
result: []
----------------------
2025-05-10 13:51:39.695 [INFO] [INFO] This sql shoudl be converted to bative backend: SELECT * FROM test_users_f7851325 WHERE id = %s vs SELECT * FROM test_users_f7851325 WHERE id = %s
2025-05-10 13:51:39.696 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT * FROM test_users_f7851325 WHERE id = ?
params: ('06f56e31-e28f-46f9-8135-6fcede6ebee7',)
timeout: None
tags: None
result: [('David', '06f56e31-e28f-46f9-8135-6fcede6ebee7', '2025-05-10T12:51:39.508660', '2025-05-10T12:51:39.508660', None, None, None)]
----------------------
2025-05-10 13:51:39.696 [INFO] [INFO] This sql shoudl be converted to bative backend: SELECT column_name, data_type FROM information_schema.columns WHERE table_name = %s AND table_schema = DATABASE() ORDER BY ordinal_position vs SELECT column_name, data_type FROM information_schema.columns WHERE table_name = %s AND table_schema = DATABASE() ORDER BY ordinal_position
2025-05-10 13:51:39.702 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT column_name, data_type FROM information_schema.columns WHERE table_name = ? AND table_schema = DATABASE() ORDER BY ordinal_position
params: ('test_users_f7851325',)
timeout: None
tags: None
result: [('name', 'text'), ('id', 'varchar'), ('created_at', 'text'), ('updated_at', 'text'), ('created_by', 'text'), ('updated_by', 'text'), ('deleted_at', 'text')]
----------------------
2025-05-10 13:51:39.702 [INFO] [INFO] Got field names for test_users_f7851325 from schema: ['name', 'id', 'created_at', 'updated_at', 'created_by', 'updated_by', 'deleted_at']
2025-05-10 13:51:39.703 [INFO] [INFO] This sql shoudl be converted to bative backend: UPDATE test_users_f7851325 SET deleted_at = %s, updated_at = %s, updated_by = %s WHERE id = %s vs UPDATE test_users_f7851325 SET deleted_at = %s, updated_at = %s, updated_by = %s WHERE id = %s
2025-05-10 13:51:39.704 [INFO] [INFO] AsyncConnection.execute:
SQL: UPDATE test_users_f7851325 SET deleted_at = ?, updated_at = ?, updated_by = ? WHERE id = ?
params: ('2025-05-10T12:51:39.702906', '2025-05-10T12:51:39.702906', None, '06f56e31-e28f-46f9-8135-6fcede6ebee7')
timeout: None
tags: None
result: []
----------------------
2025-05-10 13:51:39.706 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT MAX(version) FROM test_users_f7851325_history WHERE id = ?
params: ('06f56e31-e28f-46f9-8135-6fcede6ebee7',)
timeout: None
tags: None
result: [(1,)]
----------------------
2025-05-10 13:51:39.707 [INFO] [INFO] This sql shoudl be converted to bative backend: INSERT INTO test_users_f7851325_history (name, id, created_at, updated_at, created_by, updated_by, deleted_at, version, history_timestamp, history_user_id, history_comment) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s) vs INSERT INTO test_users_f7851325_history (name, id, created_at, updated_at, created_by, updated_by, deleted_at, version, history_timestamp, history_user_id, history_comment) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)
2025-05-10 13:51:39.710 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_users_f7851325_history (name, id, created_at, updated_at, created_by, updated_by, deleted_at, version, history_timestamp, history_user_id, history_comment) VALUES (?, ?, ?, ?, ?, ?, ?
params: ('David', '06f56e31-e28f-46f9-8135-6fcede6ebee7', '2025-05-10T12:51:39.508660', '2025-05-10T12:51:39.702906', None, None, '2025-05-10T12:51:39.702906', 2, '2025-05-10T12:51:39.706860', None, 'Soft del
timeout: None
tags: None
result: []
----------------------
2025-05-10 13:51:39.710 [INFO] [INFO] This sql shoudl be converted to bative backend: SELECT * FROM test_users_f7851325 WHERE id = %s AND deleted_at IS NULL vs SELECT * FROM test_users_f7851325 WHERE id = %s AND deleted_at IS NULL
2025-05-10 13:51:39.712 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT * FROM test_users_f7851325 WHERE id = ? AND deleted_at IS NULL
params: ('06f56e31-e28f-46f9-8135-6fcede6ebee7',)
timeout: None
tags: None
result: []
----------------------
2025-05-10 13:51:39.713 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT * FROM test_users_f7851325 WHERE id = ?
params: ('06f56e31-e28f-46f9-8135-6fcede6ebee7',)
timeout: None
tags: None
result: [('David', '06f56e31-e28f-46f9-8135-6fcede6ebee7', '2025-05-10T12:51:39.508660', '2025-05-10T12:51:39.702906', None, None, '2025-05-10T12:51:39.702906')]
----------------------
2025-05-10 13:51:39.716 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT column_name, data_type FROM information_schema.columns WHERE table_name = ? AND table_schema = DATABASE() ORDER BY ordinal_position
params: ('test_users_f7851325',)
timeout: None
tags: None
result: [('name', 'text'), ('id', 'varchar'), ('created_at', 'text'), ('updated_at', 'text'), ('created_by', 'text'), ('updated_by', 'text'), ('deleted_at', 'text')]
----------------------
2025-05-10 13:51:39.716 [INFO] [INFO] Got field names for test_users_f7851325 from schema: ['name', 'id', 'created_at', 'updated_at', 'created_by', 'updated_by', 'deleted_at']
2025-05-10 13:51:39.718 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT * FROM test_users_f7851325 WHERE id = ?
params: ('06f56e31-e28f-46f9-8135-6fcede6ebee7',)
timeout: None
tags: None
result: [('David', '06f56e31-e28f-46f9-8135-6fcede6ebee7', '2025-05-10T12:51:39.508660', '2025-05-10T12:51:39.702906', None, None, '2025-05-10T12:51:39.702906')]
----------------------
2025-05-10 13:51:39.720 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT column_name, data_type FROM information_schema.columns WHERE table_name = ? AND table_schema = DATABASE() ORDER BY ordinal_position
params: ('test_users_f7851325',)
timeout: None
tags: None
result: [('name', 'text'), ('id', 'varchar'), ('created_at', 'text'), ('updated_at', 'text'), ('created_by', 'text'), ('updated_by', 'text'), ('deleted_at', 'text')]
----------------------
2025-05-10 13:51:39.720 [INFO] [INFO] Got field names for test_users_f7851325 from schema: ['name', 'id', 'created_at', 'updated_at', 'created_by', 'updated_by', 'deleted_at']
2025-05-10 13:51:39.720 [INFO] [INFO] This sql shoudl be converted to bative backend: UPDATE test_users_f7851325 SET deleted_at = NULL, updated_at = %s, updated_by = %s WHERE id = %s vs UPDATE test_users_f7851325 SET deleted_at = NULL, updated_at = %s, updated_by = %s WHERE id = %s
2025-05-10 13:51:39.722 [INFO] [INFO] AsyncConnection.execute:
SQL: UPDATE test_users_f7851325 SET deleted_at = NULL, updated_at = ?, updated_by = ? WHERE id = ?
params: ('2025-05-10T12:51:39.720621', None, '06f56e31-e28f-46f9-8135-6fcede6ebee7')
timeout: None
tags: None
result: []
----------------------
2025-05-10 13:51:39.723 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT MAX(version) FROM test_users_f7851325_history WHERE id = ?
params: ('06f56e31-e28f-46f9-8135-6fcede6ebee7',)
timeout: None
tags: None
result: [(2,)]
----------------------
2025-05-10 13:51:39.724 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_users_f7851325_history (name, id, created_at, updated_at, created_by, updated_by, deleted_at, version, history_timestamp, history_user_id, history_comment) VALUES (?, ?, ?, ?, ?, ?, ?
params: ('David', '06f56e31-e28f-46f9-8135-6fcede6ebee7', '2025-05-10T12:51:39.508660', '2025-05-10T12:51:39.720621', None, None, None, 3, '2025-05-10T12:51:39.723429', None, 'Restored')
timeout: None
tags: None
result: []
----------------------
2025-05-10 13:51:39.726 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT * FROM test_users_f7851325 WHERE id = ? AND deleted_at IS NULL
params: ('06f56e31-e28f-46f9-8135-6fcede6ebee7',)
timeout: None
tags: None
result: [('David', '06f56e31-e28f-46f9-8135-6fcede6ebee7', '2025-05-10T12:51:39.508660', '2025-05-10T12:51:39.720621', None, None, None)]
----------------------
2025-05-10 13:51:39.729 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT column_name, data_type FROM information_schema.columns WHERE table_name = ? AND table_schema = DATABASE() ORDER BY ordinal_position
params: ('test_users_f7851325',)
timeout: None
tags: None
result: [('name', 'text'), ('id', 'varchar'), ('created_at', 'text'), ('updated_at', 'text'), ('created_by', 'text'), ('updated_by', 'text'), ('deleted_at', 'text')]
----------------------
2025-05-10 13:51:39.730 [INFO] [INFO] Got field names for test_users_f7851325 from schema: ['name', 'id', 'created_at', 'updated_at', 'created_by', 'updated_by', 'deleted_at']
2025-05-10 13:51:39.730 [INFO] [INFO] This sql shoudl be converted to bative backend: DELETE FROM test_users_f7851325 WHERE id = %s vs DELETE FROM test_users_f7851325 WHERE id = %s
2025-05-10 13:51:39.732 [INFO] [INFO] AsyncConnection.execute:
SQL: DELETE FROM test_users_f7851325 WHERE id = ?
params: ('06f56e31-e28f-46f9-8135-6fcede6ebee7',)
timeout: None
tags: None
result: []
----------------------
2025-05-10 13:51:39.732 [INFO] [INFO] Pool status:
{"initialized": true, "alias": "testdb_mysql", "hash": "a38f6583c7ceb10c7107caf0e8484dd2", "min_size": 3, "max_size": 20, "current_size": 2, "in_use": 0, "idle": 2, "active_connections": 1, "shutting_down": false, "metrics": {"total_acquired": 1, "total_released": 1, "current_active": 0, "peak_active": 1, "errors": 0, "timeouts": 0, "last_timeout": null, "avg_acquisition_time": 0.0}}
2025-05-10 13:51:39.735 [INFO] [INFO] Pool a38f6583c7ceb10c7107caf0e8484dd2 marked as shutting down, no new connections allowed
2025-05-10 13:51:39.735 [ERROR] [ERROR] Error closing pool for a38f6583c7ceb10c7107caf0e8484dd2: object NoneType can't be used in 'await' expression
2025-05-10 13:51:39.739 [INFO] [INFO] Tearing down test environment...
2025-05-10 13:51:46.813 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 13:51:46.813 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 13:51:46.820 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 13:51:46.820 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 13:51:46.824 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 13:51:46.824 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 13:51:46.843 [INFO] [INFO] Setting up test environment...
2025-05-10 13:51:46.843 [INFO] [INFO] Removing .\.pytest_cache
2025-05-10 13:51:46.879 [INFO] [INFO] Test files in this session: {'c:\\Users\\Phil\\Desktop\\Projects\\shared-libs\\python\\databases\\tests\\test_dal.py'}
2025-05-10 13:51:46.879 [INFO] [INFO] Found Docker Compose file for c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\test_dal.py: c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml
2025-05-10 13:51:46.884 [INFO] [INFO] Detected the following services in c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml:
2025-05-10 13:51:46.884 [INFO] [INFO]   - mysql: localhost:3307 (container port: 3306)
2025-05-10 13:51:46.884 [INFO] [INFO]   - postgres: localhost:5433 (container port: 5432)
2025-05-10 13:51:46.884 [INFO] [INFO] Running command: docker-compose -f c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml -p test-databases up -d
2025-05-10 13:51:47.182 [INFO] [INFO] Command error:  Container test-databases-mysql-1  Running
 Container test-databases-postgres-1  Running

2025-05-10 13:51:47.191 [INFO] [INFO] Thread 720: Requesting sync connection for test_sqlite_94c31de5.db
2025-05-10 13:51:47.196 [INFO] [INFO] Thread 720: Sync connection created and cached for test_sqlite_94c31de5.db in 0.00s
2025-05-10 13:51:47.203 [INFO] [INFO] test_sqlite_94c31de5.db - cf1cdbd0ca4ee2d6336138120fcc5534 async pool initialized in 0.00s
2025-05-10 13:51:47.203 [INFO] [INFO] Pool status:
{"initialized": true, "alias": "test_sqlite_94c31de5.db", "hash": "cf1cdbd0ca4ee2d6336138120fcc5534", "min_size": 1, "max_size": 1, "current_size": 1, "in_use": 1, "idle": 0, "active_connections": 0, "shutting_down": false, "metrics": {"total_acquired": 1, "total_released": 0, "current_active": 1, "peak_active": 1, "errors": 0, "timeouts": 0, "last_timeout": null, "avg_acquisition_time": 0.0}}
2025-05-10 13:51:47.203 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 13:51:47.203 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 13:51:47.212 [INFO] [INFO] This sql shoudl be converted to bative backend: SELECT name FROM sqlite_master WHERE type='table' AND name=? vs SELECT name FROM sqlite_master WHERE type='table' AND name=?
2025-05-10 13:51:47.214 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT name FROM sqlite_master WHERE type='table' AND name=?
params: ('test_orders_dedd16f5',)
timeout: None
tags: None
result: []
----------------------
2025-05-10 13:51:47.215 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT name FROM sqlite_master WHERE type='table' AND name=?
params: ('test_orders_dedd16f5_meta',)
timeout: None
tags: None
result: []
----------------------
2025-05-10 13:51:47.216 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT name FROM sqlite_master WHERE type='table' AND name=?
params: ('test_orders_dedd16f5_history',)
timeout: None
tags: None
result: []
----------------------
2025-05-10 13:51:47.216 [INFO] [INFO] This sql shoudl be converted to bative backend: 
            CREATE TABLE IF NOT EXISTS test_orders_dedd16f5 (
                order TEXT, id TEXT PRIMARY KEY, created_at TEXT, updated_at TEXT, created_by TEXT, updated_by TEXT, deleted_at TEXT
            )
         vs 
            CREATE TABLE IF NOT EXISTS test_orders_dedd16f5 (
                order TEXT, id TEXT PRIMARY KEY, created_at TEXT, updated_at TEXT, created_by TEXT, updated_by TEXT, deleted_at TEXT
            )
        
2025-05-10 13:51:47.905 [WARN] [WARN] Max retries (3) exceeded for _execute_statement_async: near "order": syntax error
2025-05-10 13:51:47.906 [INFO] [INFO] Pool status:
{"initialized": true, "alias": "test_sqlite_94c31de5.db", "hash": "cf1cdbd0ca4ee2d6336138120fcc5534", "min_size": 1, "max_size": 1, "current_size": 1, "in_use": 0, "idle": 1, "active_connections": 1, "shutting_down": false, "metrics": {"total_acquired": 1, "total_released": 1, "current_active": 0, "peak_active": 1, "errors": 0, "timeouts": 0, "last_timeout": null, "avg_acquisition_time": 0.0}}
2025-05-10 13:51:48.684 [INFO] [INFO] Pool cf1cdbd0ca4ee2d6336138120fcc5534 marked as shutting down, no new connections allowed
2025-05-10 13:51:48.685 [INFO] [INFO] Pool for cf1cdbd0ca4ee2d6336138120fcc5534 closed
2025-05-10 13:51:48.686 [INFO] [INFO] Tearing down test environment...
2025-05-10 13:54:51.451 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 13:54:51.451 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 13:54:51.458 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 13:54:51.458 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 13:54:51.461 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 13:54:51.462 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 13:55:38.025 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 13:55:38.025 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 13:55:38.035 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 13:55:38.035 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 13:55:38.038 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 13:55:38.038 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 13:55:40.835 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 13:55:40.836 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 13:55:40.843 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 13:55:40.843 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 13:55:40.848 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 13:55:40.848 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 13:55:40.864 [INFO] [INFO] Setting up test environment...
2025-05-10 13:55:40.865 [INFO] [INFO] Removing .\.pytest_cache
2025-05-10 13:55:40.899 [INFO] [INFO] Test files in this session: {'c:\\Users\\Phil\\Desktop\\Projects\\shared-libs\\python\\databases\\tests\\test_dal.py'}
2025-05-10 13:55:40.900 [INFO] [INFO] Found Docker Compose file for c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\test_dal.py: c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml
2025-05-10 13:55:40.905 [INFO] [INFO] Detected the following services in c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml:
2025-05-10 13:55:40.905 [INFO] [INFO]   - mysql: localhost:3307 (container port: 3306)
2025-05-10 13:55:40.906 [INFO] [INFO]   - postgres: localhost:5433 (container port: 5432)
2025-05-10 13:55:40.906 [INFO] [INFO] Running command: docker-compose -f c:\Users\Phil\Desktop\Projects\shared-libs\python\databases\tests\docker-compose.yml -p test-databases up -d
2025-05-10 13:55:41.222 [INFO] [INFO] Command error:  Container test-databases-postgres-1  Running
 Container test-databases-mysql-1  Running

2025-05-10 13:55:41.233 [INFO] [INFO] Thread 3352: Requesting sync connection for test_sqlite_3edcd223.db
2025-05-10 13:55:41.236 [INFO] [INFO] Thread 3352: Sync connection created and cached for test_sqlite_3edcd223.db in 0.00s
2025-05-10 13:55:41.241 [INFO] [INFO] test_sqlite_3edcd223.db - 3ab414262c78c8189538d87ccc89c9e4 async pool initialized in 0.00s
2025-05-10 13:55:41.241 [INFO] [INFO] Pool status:
{"initialized": true, "alias": "test_sqlite_3edcd223.db", "hash": "3ab414262c78c8189538d87ccc89c9e4", "min_size": 1, "max_size": 1, "current_size": 1, "in_use": 1, "idle": 0, "active_connections": 0, "shutting_down": false, "metrics": {"total_acquired": 1, "total_released": 0, "current_active": 1, "peak_active": 1, "errors": 0, "timeouts": 0, "last_timeout": null, "avg_acquisition_time": 0.0}}
2025-05-10 13:55:41.242 [INFO] [INFO] ++++++++++ Creating EntityUtils
2025-05-10 13:55:41.242 [INFO] [INFO] ++++++++++ EntityUtils custom_serializers: {}
2025-05-10 13:55:41.252 [INFO] [INFO] This sql shoudl be converted to bative backend: SELECT name FROM sqlite_master WHERE type='table' AND name=? vs SELECT name FROM sqlite_master WHERE type='table' AND name=?
2025-05-10 13:55:41.253 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT name FROM sqlite_master WHERE type='table' AND name=?
params: ('test_orders_8a5e8bb4',)
timeout: None
tags: None
result: []
----------------------
2025-05-10 13:55:41.254 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT name FROM sqlite_master WHERE type='table' AND name=?
params: ('test_orders_8a5e8bb4_meta',)
timeout: None
tags: None
result: []
----------------------
2025-05-10 13:55:41.254 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT name FROM sqlite_master WHERE type='table' AND name=?
params: ('test_orders_8a5e8bb4_history',)
timeout: None
tags: None
result: []
----------------------
2025-05-10 13:55:41.255 [INFO] [INFO] This sql shoudl be converted to bative backend: 
            CREATE TABLE IF NOT EXISTS test_orders_8a5e8bb4 (
                order_name TEXT, id TEXT PRIMARY KEY, created_at TEXT, updated_at TEXT, created_by TEXT, updated_by TEXT, deleted_at TEXT
            )
         vs 
            CREATE TABLE IF NOT EXISTS test_orders_8a5e8bb4 (
                order_name TEXT, id TEXT PRIMARY KEY, created_at TEXT, updated_at TEXT, created_by TEXT, updated_by TEXT, deleted_at TEXT
            )
        
2025-05-10 13:55:41.256 [INFO] [INFO] AsyncConnection.execute:
SQL: 
            CREATE TABLE IF NOT EXISTS test_orders_8a5e8bb4 (
                order_name TEXT, id TEXT PRIMARY KEY, created_at TEXT, updated_at TEXT, created_by TEXT, updated_by TEXT, deleted_at TEXT
params: ()
timeout: None
tags: None
result: []
----------------------
2025-05-10 13:55:41.256 [INFO] [INFO] This sql shoudl be converted to bative backend: 
            CREATE TABLE IF NOT EXISTS test_orders_8a5e8bb4_meta (
                name TEXT PRIMARY KEY,
                type TEXT
            )
         vs 
            CREATE TABLE IF NOT EXISTS test_orders_8a5e8bb4_meta (
                name TEXT PRIMARY KEY,
                type TEXT
            )
        
2025-05-10 13:55:41.257 [INFO] [INFO] AsyncConnection.execute:
SQL: 
            CREATE TABLE IF NOT EXISTS test_orders_8a5e8bb4_meta (
                name TEXT PRIMARY KEY,
                type TEXT
            )
        
params: ()
timeout: None
tags: None
result: []
----------------------
2025-05-10 13:55:41.257 [INFO] [INFO] This sql shoudl be converted to bative backend: 
            CREATE TABLE IF NOT EXISTS test_orders_8a5e8bb4_history (
                order_name TEXT, id TEXT, created_at TEXT, updated_at TEXT, created_by TEXT, updated_by TEXT, deleted_at TEXT, version INTEGER, history_timestamp TEXT, history_user_id TEXT, history_comment TEXT,
                PRIMARY KEY (id, version)
            )
         vs 
            CREATE TABLE IF NOT EXISTS test_orders_8a5e8bb4_history (
                order_name TEXT, id TEXT, created_at TEXT, updated_at TEXT, created_by TEXT, updated_by TEXT, deleted_at TEXT, version INTEGER, history_timestamp TEXT, history_user_id TEXT, history_comment TEXT,
                PRIMARY KEY (id, version)
            )
        
2025-05-10 13:55:41.258 [INFO] [INFO] AsyncConnection.execute:
SQL: 
            CREATE TABLE IF NOT EXISTS test_orders_8a5e8bb4_history (
                order_name TEXT, id TEXT, created_at TEXT, updated_at TEXT, created_by TEXT, updated_by TEXT, deleted_at TEXT, ve
params: ()
timeout: None
tags: None
result: []
----------------------
2025-05-10 13:55:41.258 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT name FROM sqlite_master WHERE type='table' AND name=?
params: ('test_orders_8a5e8bb4_meta',)
timeout: None
tags: None
result: [('test_orders_8a5e8bb4_meta',)]
----------------------
2025-05-10 13:55:41.259 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT name FROM sqlite_master WHERE type='table' AND name=?
params: ('test_orders_8a5e8bb4_meta',)
timeout: None
tags: None
result: [('test_orders_8a5e8bb4_meta',)]
----------------------
2025-05-10 13:55:41.259 [INFO] [INFO] This sql shoudl be converted to bative backend: SELECT name, type FROM test_orders_8a5e8bb4_meta vs SELECT name, type FROM test_orders_8a5e8bb4_meta
2025-05-10 13:55:41.260 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT name, type FROM test_orders_8a5e8bb4_meta
params: ()
timeout: None
tags: None
result: []
----------------------
2025-05-10 13:55:41.260 [INFO] [INFO] We need to add a new field to test_orders_8a5e8bb4: order_name
2025-05-10 13:55:41.260 [INFO] [INFO] This sql shoudl be converted to bative backend: INSERT OR REPLACE INTO test_orders_8a5e8bb4_meta VALUES (?, ?) vs INSERT OR REPLACE INTO test_orders_8a5e8bb4_meta VALUES (?, ?)
2025-05-10 13:55:41.261 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT OR REPLACE INTO test_orders_8a5e8bb4_meta VALUES (?, ?)
params: ('order_name', 'str')
timeout: None
tags: None
result: []
----------------------
2025-05-10 13:55:41.261 [INFO] [INFO] We need to add a new field to test_orders_8a5e8bb4: id
2025-05-10 13:55:41.261 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT OR REPLACE INTO test_orders_8a5e8bb4_meta VALUES (?, ?)
params: ('id', 'str')
timeout: None
tags: None
result: []
----------------------
2025-05-10 13:55:41.262 [INFO] [INFO] We need to add a new field to test_orders_8a5e8bb4: created_at
2025-05-10 13:55:41.262 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT OR REPLACE INTO test_orders_8a5e8bb4_meta VALUES (?, ?)
params: ('created_at', 'str')
timeout: None
tags: None
result: []
----------------------
2025-05-10 13:55:41.262 [INFO] [INFO] We need to add a new field to test_orders_8a5e8bb4: updated_at
2025-05-10 13:55:41.263 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT OR REPLACE INTO test_orders_8a5e8bb4_meta VALUES (?, ?)
params: ('updated_at', 'str')
timeout: None
tags: None
result: []
----------------------
2025-05-10 13:55:41.263 [INFO] [INFO] This sql shoudl be converted to bative backend: PRAGMA table_info(test_orders_8a5e8bb4) vs PRAGMA table_info(test_orders_8a5e8bb4)
2025-05-10 13:55:41.264 [INFO] [INFO] AsyncConnection.execute:
SQL: PRAGMA table_info(test_orders_8a5e8bb4)
params: ()
timeout: None
tags: None
result: [(0, 'order_name', 'TEXT', 0, None, 0), (1, 'id', 'TEXT', 0, None, 1), (2, 'created_at', 'TEXT', 0, None, 0), (3, 'updated_at', 'TEXT', 0, None, 0), (4, 'created_by', 'TEXT', 0, None, 0), (5, 'updated
----------------------
2025-05-10 13:55:41.266 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT name FROM sqlite_master WHERE type='table' AND name=?
params: ('test_orders_8a5e8bb4_meta',)
timeout: None
tags: None
result: [('test_orders_8a5e8bb4_meta',)]
----------------------
2025-05-10 13:55:41.267 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT name FROM sqlite_master WHERE type='table' AND name=?
params: ('test_orders_8a5e8bb4_meta',)
timeout: None
tags: None
result: [('test_orders_8a5e8bb4_meta',)]
----------------------
2025-05-10 13:55:41.267 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT name, type FROM test_orders_8a5e8bb4_meta
params: ()
timeout: None
tags: None
result: [('order_name', 'str'), ('id', 'str'), ('created_at', 'str'), ('updated_at', 'str')]
----------------------
2025-05-10 13:55:41.268 [INFO] [INFO] AsyncConnection.execute:
SQL: PRAGMA table_info(test_orders_8a5e8bb4)
params: ()
timeout: None
tags: None
result: [(0, 'order_name', 'TEXT', 0, None, 0), (1, 'id', 'TEXT', 0, None, 1), (2, 'created_at', 'TEXT', 0, None, 0), (3, 'updated_at', 'TEXT', 0, None, 0), (4, 'created_by', 'TEXT', 0, None, 0), (5, 'updated
----------------------
2025-05-10 13:55:41.268 [INFO] [INFO] This sql shoudl be converted to bative backend: INSERT OR REPLACE INTO test_orders_8a5e8bb4 (order_name, id, created_at, updated_at) VALUES (?, ?, ?, ?) vs INSERT OR REPLACE INTO test_orders_8a5e8bb4 (order_name, id, created_at, updated_at) VALUES (?, ?, ?, ?)
2025-05-10 13:55:41.269 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT OR REPLACE INTO test_orders_8a5e8bb4 (order_name, id, created_at, updated_at) VALUES (?, ?, ?, ?)
params: ('Base Order', 'd0bfceac-3c19-4a68-90f0-e5fc1a2c8e92', '2025-05-10T12:55:41.252405', '2025-05-10T12:55:41.252405')
timeout: None
tags: None
result: []
----------------------
2025-05-10 13:55:41.269 [INFO] [INFO] This sql shoudl be converted to bative backend: SELECT MAX(version) FROM test_orders_8a5e8bb4_history WHERE id = ? vs SELECT MAX(version) FROM test_orders_8a5e8bb4_history WHERE id = ?
2025-05-10 13:55:41.270 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT MAX(version) FROM test_orders_8a5e8bb4_history WHERE id = ?
params: ('d0bfceac-3c19-4a68-90f0-e5fc1a2c8e92',)
timeout: None
tags: None
result: [(None,)]
----------------------
2025-05-10 13:55:41.270 [INFO] [INFO] This sql shoudl be converted to bative backend: INSERT INTO test_orders_8a5e8bb4_history (order_name, id, created_at, updated_at, version, history_timestamp, history_user_id, history_comment) VALUES (?, ?, ?, ?, ?, ?, ?, ?) vs INSERT INTO test_orders_8a5e8bb4_history (order_name, id, created_at, updated_at, version, history_timestamp, history_user_id, history_comment) VALUES (?, ?, ?, ?, ?, ?, ?, ?)
2025-05-10 13:55:41.271 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_orders_8a5e8bb4_history (order_name, id, created_at, updated_at, version, history_timestamp, history_user_id, history_comment) VALUES (?, ?, ?, ?, ?, ?, ?, ?)
params: ('Base Order', 'd0bfceac-3c19-4a68-90f0-e5fc1a2c8e92', '2025-05-10T12:55:41.252405', '2025-05-10T12:55:41.252405', 1, '2025-05-10T12:55:41.270396', None, None)
timeout: None
tags: None
result: []
----------------------
2025-05-10 13:55:41.279 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT name FROM sqlite_master WHERE type='table' AND name=?
params: ('test_orders_8a5e8bb4',)
timeout: None
tags: None
result: [('test_orders_8a5e8bb4',)]
----------------------
2025-05-10 13:55:41.279 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT name FROM sqlite_master WHERE type='table' AND name=?
params: ('test_orders_8a5e8bb4_meta',)
timeout: None
tags: None
result: [('test_orders_8a5e8bb4_meta',)]
----------------------
2025-05-10 13:55:41.280 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT name FROM sqlite_master WHERE type='table' AND name=?
params: ('test_orders_8a5e8bb4_history',)
timeout: None
tags: None
result: [('test_orders_8a5e8bb4_history',)]
----------------------
2025-05-10 13:55:41.280 [INFO] [INFO] AsyncConnection.execute:
SQL: PRAGMA table_info(test_orders_8a5e8bb4)
params: ()
timeout: None
tags: None
result: [(0, 'order_name', 'TEXT', 0, None, 0), (1, 'id', 'TEXT', 0, None, 1), (2, 'created_at', 'TEXT', 0, None, 0), (3, 'updated_at', 'TEXT', 0, None, 0), (4, 'created_by', 'TEXT', 0, None, 0), (5, 'updated
----------------------
2025-05-10 13:55:41.281 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT name FROM sqlite_master WHERE type='table' AND name=?
params: ('test_orders_8a5e8bb4_meta',)
timeout: None
tags: None
result: [('test_orders_8a5e8bb4_meta',)]
----------------------
2025-05-10 13:55:41.282 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT name FROM sqlite_master WHERE type='table' AND name=?
params: ('test_orders_8a5e8bb4_meta',)
timeout: None
tags: None
result: [('test_orders_8a5e8bb4_meta',)]
----------------------
2025-05-10 13:55:41.282 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT name, type FROM test_orders_8a5e8bb4_meta
params: ()
timeout: None
tags: None
result: [('order_name', 'str'), ('id', 'str'), ('created_at', 'str'), ('updated_at', 'str')]
----------------------
2025-05-10 13:55:41.283 [INFO] [INFO] AsyncConnection.execute:
SQL: PRAGMA table_info(test_orders_8a5e8bb4)
params: ()
timeout: None
tags: None
result: [(0, 'order_name', 'TEXT', 0, None, 0), (1, 'id', 'TEXT', 0, None, 1), (2, 'created_at', 'TEXT', 0, None, 0), (3, 'updated_at', 'TEXT', 0, None, 0), (4, 'created_by', 'TEXT', 0, None, 0), (5, 'updated
----------------------
2025-05-10 13:55:41.284 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT name FROM sqlite_master WHERE type='table' AND name=?
params: ('test_orders_8a5e8bb4_meta',)
timeout: None
tags: None
result: [('test_orders_8a5e8bb4_meta',)]
----------------------
2025-05-10 13:55:41.285 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT name FROM sqlite_master WHERE type='table' AND name=?
params: ('test_orders_8a5e8bb4_meta',)
timeout: None
tags: None
result: [('test_orders_8a5e8bb4_meta',)]
----------------------
2025-05-10 13:55:41.286 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT name, type FROM test_orders_8a5e8bb4_meta
params: ()
timeout: None
tags: None
result: [('order_name', 'str'), ('id', 'str'), ('created_at', 'str'), ('updated_at', 'str')]
----------------------
2025-05-10 13:55:41.287 [INFO] [INFO] AsyncConnection.execute:
SQL: PRAGMA table_info(test_orders_8a5e8bb4)
params: ()
timeout: None
tags: None
result: [(0, 'order_name', 'TEXT', 0, None, 0), (1, 'id', 'TEXT', 0, None, 1), (2, 'created_at', 'TEXT', 0, None, 0), (3, 'updated_at', 'TEXT', 0, None, 0), (4, 'created_by', 'TEXT', 0, None, 0), (5, 'updated
----------------------
2025-05-10 13:55:41.289 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT OR REPLACE INTO test_orders_8a5e8bb4 (order_name, id, created_at, updated_at) VALUES (?, ?, ?, ?)
params: ('Will be rolled back', 'd221cbe2-1bc9-4fd7-9e57-751ed045a913', '2025-05-10T12:55:41.278340', '2025-05-10T12:55:41.278340')
timeout: None
tags: None
result: []
----------------------
2025-05-10 13:55:41.289 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT MAX(version) FROM test_orders_8a5e8bb4_history WHERE id = ?
params: ('d221cbe2-1bc9-4fd7-9e57-751ed045a913',)
timeout: None
tags: None
result: [(None,)]
----------------------
2025-05-10 13:55:41.290 [INFO] [INFO] AsyncConnection.execute:
SQL: INSERT INTO test_orders_8a5e8bb4_history (order_name, id, created_at, updated_at, version, history_timestamp, history_user_id, history_comment) VALUES (?, ?, ?, ?, ?, ?, ?, ?)
params: ('Will be rolled back', 'd221cbe2-1bc9-4fd7-9e57-751ed045a913', '2025-05-10T12:55:41.278340', '2025-05-10T12:55:41.278340', 1, '2025-05-10T12:55:41.289790', None, None)
timeout: None
tags: None
result: []
----------------------
2025-05-10 13:55:41.290 [INFO] [INFO] This sql shoudl be converted to bative backend: SELECT COUNT(*) FROM test_orders_8a5e8bb4 WHERE deleted_at IS NULL vs SELECT COUNT(*) FROM test_orders_8a5e8bb4 WHERE deleted_at IS NULL
2025-05-10 13:55:41.291 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT COUNT(*) FROM test_orders_8a5e8bb4 WHERE deleted_at IS NULL
params: ()
timeout: None
tags: None
result: [(2,)]
----------------------
2025-05-10 13:55:41.293 [INFO] [INFO] AsyncConnection.execute:
SQL: SELECT COUNT(*) FROM test_orders_8a5e8bb4 WHERE deleted_at IS NULL
params: ()
timeout: None
tags: None
result: [(1,)]
----------------------
2025-05-10 13:55:41.293 [INFO] [INFO] This sql shoudl be converted to bative backend: DELETE FROM test_orders_8a5e8bb4 WHERE id = ? vs DELETE FROM test_orders_8a5e8bb4 WHERE id = ?
2025-05-10 13:55:41.295 [INFO] [INFO] AsyncConnection.execute:
SQL: DELETE FROM test_orders_8a5e8bb4 WHERE id = ?
params: ('d0bfceac-3c19-4a68-90f0-e5fc1a2c8e92',)
timeout: None
tags: None
result: []
----------------------
2025-05-10 13:55:41.299 [INFO] [INFO] Pool status:
{"initialized": true, "alias": "test_sqlite_3edcd223.db", "hash": "3ab414262c78c8189538d87ccc89c9e4", "min_size": 1, "max_size": 1, "current_size": 1, "in_use": 0, "idle": 1, "active_connections": 1, "shutting_down": false, "metrics": {"total_acquired": 1, "total_released": 1, "current_active": 0, "peak_active": 1, "errors": 0, "timeouts": 0, "last_timeout": null, "avg_acquisition_time": 0.0}}
2025-05-10 13:55:41.301 [INFO] [INFO] Pool 3ab414262c78c8189538d87ccc89c9e4 marked as shutting down, no new connections allowed
2025-05-10 13:55:41.302 [INFO] [INFO] Pool for 3ab414262c78c8189538d87ccc89c9e4 closed
2025-05-10 13:55:41.804 [INFO] [INFO] Tearing down test environment...
